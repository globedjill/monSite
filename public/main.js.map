{"version":3,"sources":["./src/app/pages/page-container/parcour/experiences/experience/experience.component.ts","./src/app/pages/page-container/parcour/formations/upload-image-form/upload-image-form.component.ts","./src/app/components/auth/se-connecter/se-connecter.component.html","./src/app/pages/page-container/page-container.component.html","./src/app/components/header/header.component.ts","./src/app/pages/page-container/parcour/parcour.component.html","./src/app/pages/page-container/parcour/experiences/experience/experience.component.sass","./src/app/components/navbar/navbar.component.sass","./src/app/pages/page-container/page-container.component.ts","./src/app/pages/page-container/parcour/parcour.component.sass","./src/app/components/header/header.component.sass","./src/shared/services/upload-file.service.ts","./src/environments/environment.ts","./src/app/pages/page-container/contact/contact.component.ts","./src/app/pages/page-container/parcour/formations/formation/formation.component.ts","./src/app/components/auth/se-connecter/se-connecter.component.ts","./src/shared/modules/core.module.ts","./src/app/pages/page-container/parcour/experiences/experience-form/experience-form.component.html","./src/app/pages/page-container/parcour/formations/upload-image-form/upload-image-form.component.sass","./src/app/pages/page-container/acceuil/acceuil.component.sass","./src/app/pages/page-container/contact/contact.component.html","./src/app/components/footer/footer.component.ts","./src/app/app.component.sass","./src/app/pages/page-container/page-container.component.sass","./src/shared/services/users.service.ts","./src/app/components/navbar/navbar.component.html","./src/app/app.component.ts","./src/app/components/auth/s-inscrire/s-inscrire.component.html","./src/app/pages/page-container/parcour/experiences/experience/experience.component.html","./src/app/app.component.html","./src/app/components/footer/footer.component.html","./src/app/components/auth/s-inscrire/s-inscrire.component.sass","./src/shared/modules/layout.module.ts","./src/app/pages/page-container/parcour/formations/upload-image-form/upload-image-form.component.html","./src/app/app.module.ts","./src/app/pages/page-container/parcour/parcour.component.ts","./src/app/pages/page-container/parcour/formations/formation-form/formation-form.component.html","./src/app/app.routing.ts","./src/app/pages/page-container/acceuil/acceuil.component.ts","./src/app/pages/page-container/parcour/formations/formation/formation.component.sass","./src/app/pages/page-container/parcour/experiences/experience-form/experience-form.component.sass","./src/app/components/auth/s-inscrire/s-inscrire.component.ts","./src/app/pages/page-container/acceuil/acceuil.component.html","./src/app/pages/page-container/contact/contact.component.sass","./src/app/components/auth/se-connecter/se-connecter.component.sass","./src/app/components/navbar/navbar.component.ts","./src/app/pages/page-container/parcour/formations/formation/formation.component.html","./src/app/components/footer/footer.component.sass","./src/shared/auth.guard.ts","./src/app/pages/page-container/parcour/formations/formation-form/formation-form.component.sass","./src/shared/services/parcour.service.ts","./src/app/pages/page-container/parcour/experiences/experience-form/experience-form.component.ts","./src/app/pages/page-container/parcour/formations/formation-form/formation-form.component.ts","./src/app/components/header/header.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object","./src/shared/modules/material.module.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AACkD;AAGe;IAOpD,mBAAmB,SAAnB,mBAAmB;IAO9B,YACU,WAAyB;QAAzB,gBAAW,GAAX,WAAW,CAAc;QAEjC,IAAI,CAAC,aAAa,GAAG;YACnB;gBACE,UAAU,EAAE,IAAI,IAAI,CAAC,YAAY,CAAC;gBAClC,UAAU,EAAE,IAAI,IAAI,CAAC,YAAY,CAAC;gBAClC,KAAK,EAAE,8CAA8C;gBACrD,WAAW,EAAE,KAAK;gBAClB,QAAQ,EAAE,cAAc;gBACxB,IAAI,EAAE,mBAAmB;gBACzB,QAAQ,EAAE,6DAA6D;aACxE;YACD;gBACE,UAAU,EAAE,IAAI,IAAI,CAAC,YAAY,CAAC;gBAClC,UAAU,EAAE,IAAI,IAAI,CAAC,YAAY,CAAC;gBAClC,KAAK,EAAE,+CAA+C;gBACtD,WAAW,EAAE,KAAK;gBAClB,QAAQ,EAAE,aAAa;gBACvB,IAAI,EAAE,mBAAmB;gBACzB,QAAQ,EAAE,wCAAwC;aACnD;SACF,CAAC;IACJ,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,WAAwB,EAAC,EAAE;YACpF,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QACjC,CAAC,CAAC;IAEJ,CAAC;CAEF;;YA9CQ,8EAAY;;AAOR,mBAAmB;IAL/B,+DAAS,CAAC;QACT,QAAQ,EAAE,gBAAgB;QAC1B,uFAA0C;;KAE3C,CAAC;GACW,mBAAmB,CAuC/B;AAvC+B;;;;;;;;;;;;;;;;;;;;;;;;;ACXhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4DAA4D;AAC5D,qDAAqD;AACrD,mFAAmF;AACnF,4DAA4D;AAC5D,yDAAyD;AACzD,mDAAmD;AACnD,2IAA2I;AAC3I,+EAA+E;;;;AAG/E,eAAe;AACf,uCAAuC;AACvC,uDAAuD;AACvD,sDAAsD;AACtD,KAAK;AACL,4DAA4D;AAE5D,8FAA8F;AAC9F,qCAAqC;AACrC,iBAAiB;AAEjB,kEAAkE;AAClE,qCAAqC;AACrC,+BAA+B;AAC/B,+BAA+B;AAC/B,oBAAoB;AACpB,8BAA8B;AAE9B,iBAAiB;AACjB,gDAAgD;AAChD,gCAAgC;AAChC,SAAS;AAET,uBAAuB;AACvB,iEAAiE;AACjE,MAAM;AACN,IAAI;AAKqE;AAEG;IAO7D,wBAAwB,SAAxB,wBAAwB;IAWrC,YACU,iBAAoC;QAApC,sBAAiB,GAAjB,iBAAiB,CAAmB;QAPrC,iBAAY,GAGZ,IAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC,YAAY,EAAE,CAAC;IAKzD,CAAC;IAEJ,QAAQ;IACR,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;IACtC,CAAC;IAED,OAAO,CAAC,MAAM;QACZ,MAAM,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC;QACjC,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QACrC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC,KAAK,CAAC,MAAM,CAAC;IACjE,CAAC;IAED,UAAU,CAAC,KAAK;QACd,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QACzC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC,KAAK,CAAC,MAAM,CAAC;IACjE,CAAC;IAED,QAAQ,CAAC,MAAM;QACb,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QAEpB,IAAG,MAAM,CAAC,YAAY,EAAC;YACrB,MAAM,IAAI,GAAG,MAAM,CAAC,YAAY,CAAC,KAAK,CAAC;YACvC,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,IAAI,CAAC;SACrC;IACH,CAAC;CACF;;YAhDQ,yFAAiB;;;uBAgBrB,uDAAS,SAAC,WAAW,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE;;AAT9B,wBAAwB;IALtC,+DAAS,CAAC;QACP,QAAQ,EAAE,uBAAuB;QACjC,8FAAiD;;KAElD,CAAC;GACW,wBAAwB,CAyCtC;AAzCsC;;;;;;;;;;;;;AClDvC;AAAe,0sCAA2oC,uBAAuB,sUAAsU,E;;;;;;;;;;;;ACAv/C;AAAe,4FAA6B,E;;;;;;;;;;;;;;;;;;;;;;;ACC4B;AACX;AACpB;IAO5B,eAAe,SAAf,eAAe;IAS1B,YACU,MAAc,EACd,WAAyB;QADzB,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAc;QAGjC,IAAI,CAAC,SAAS,GAAG;YACf;gBACE,GAAG,EAAE,SAAS;gBACd,IAAI,EAAE,SAAS;gBACf,QAAQ,EAAE,SAAS;aACpB;YACD;gBACE,GAAG,EAAE,SAAS;gBACd,IAAI,EAAE,SAAS;gBACf,QAAQ,EAAE,SAAS;aACnB;YACF;gBACE,GAAG,EAAE,SAAS;gBACd,IAAI,EAAE,SAAS;gBACf,QAAQ,EAAE,SAAS;aACpB;SACF,CAAC;QACF,IAAI,CAAC,WAAW,GAAG;YACjB;gBACC,KAAK,EAAE,cAAc;gBACrB,IAAI,EAAE,aAAa;aACnB;YACD;gBACE,KAAK,EAAE,aAAa;gBACpB,IAAI,EAAE,WAAW;aAClB;SACH,CAAC;QACD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;IACtC,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,WAAwB,EAAC,EAAE;YACpF,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QACjC,CAAC,CAAC;IACJ,CAAC;IAED,OAAO;QACL,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC,SAAS,CAAC,GAAE,EAAE;YACvC,OAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;QACtC,CAAC,EACD,GAAG,GAAE;YACH,OAAO,CAAC,GAAG,CAAC,iCAAiC,CAAC,CAAC;YAC/C,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC;QAClB,CAAC,CAAC,CAAC;QAAA,CAAC;IACN,CAAC;IAED,WAAW;QACT,IAAG,IAAI,CAAC,YAAY,EAAC;YAAC,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;SAAC;IACzD,CAAC;CACF;;YAtEQ,sDAAM;YAFN,2EAAY;;AASR,eAAe;IAL3B,+DAAS,CAAC;QACT,QAAQ,EAAE,YAAY;QACtB,mFAAsC;;KAEvC,CAAC;GACW,eAAe,CA+D3B;AA/D2B;;;;;;;;;;;;;ACV5B;AAAe,yKAA0G,E;;;;;;;;;;;;ACAzH;AAAe,6GAA8C,+HAA+H,E;;;;;;;;;;;;ACA5L;AAAe,6GAA8C,2HAA2H,E;;;;;;;;;;;;;;;;;;;;;ACAtI;IAOrC,sBAAsB,SAAtB,sBAAsB;IAEjC,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;CAEF;;AAPY,sBAAsB;IALlC,+DAAS,CAAC;QACT,QAAQ,EAAE,oBAAoB;QAC9B,2FAA8C;;KAE/C,CAAC;GACW,sBAAsB,CAOlC;AAPkC;;;;;;;;;;;;;ACPnC;AAAe,6GAA8C,2HAA2H,E;;;;;;;;;;;;ACAxL;AAAe,6GAA8C,2HAA2H,E;;;;;;;;;;;;;;;;;;;;ACA/F;AAC9C;AACQ;AACd;IAKxB,iBAAiB,SAAjB,iBAAiB;IAM5B,YACU,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QALnB,iBAAY,GAGZ,IAAI,oDAAe,CAAC,EAAE,CAAC,CAAC;IAG3B,CAAC;IAEE,OAAO,CAAC,KAAK;QAClB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC;YACrB,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK;YACzB,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAE,CAAC,CAAO,EAAE,EAAE;gBACvC,MAAM,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;gBAChC,QAAQ,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;gBACxB,MAAM,OAAO,GAAG,IAAI,gEAAW,CAAC,MAAM,EAAC,aAAa,EAAE,QAAQ,EAAE;oBAC9D,cAAc,EAAE,IAAI;iBACrB,CAAC,CAAC;gBACH,OAAO;oBACL,IAAI,EAAE,CAAC;oBACP,SAAS,EAAE,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,IAAI,CACxC,0DAAG,CAAC,CAAC,KAAoB,EAAE,EAAE;wBAC3B,QAAQ,KAAK,CAAC,IAAI,EAAC;4BACjB,KAAK,kEAAa,CAAC,IAAI,CAAC;gCACtB,OAAO,CAAC,CAAC;6BACV;4BACD,KAAK,kEAAa,CAAC,cAAc,CAAC;gCAChC,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,GAAG,GAAG,CAAC,CAAC;6BACrD;4BACD,KAAK,kEAAa,CAAC,QAAQ,CAAC;gCAC1B,OAAO,GAAG,CAAC;6BACZ;4BACD,OAAO,CAAC,CAAC;gCACP,OAAO,CAAC,CAAC;6BACV;yBACF;oBACH,CAAC,CAAC,CACH;iBACF,CAAC;YACJ,CAAC,CAAC;SACH,CAAC,CAAC;IACH,CAAC;IAEM,UAAU,CAAC,KAAK;QACrB,MAAM,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;QAC9C,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,eAAe,KAAK,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC;QACtE,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QACvB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC;IAC/B,CAAC;CACF;;YA1DQ,+DAAU;;AAQN,iBAAiB;IAH7B,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,iBAAiB,CAkD7B;AAlD6B;;;;;;;;;;;;;ACR9B;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;;;;;ACfjB;IAOrC,gBAAgB,SAAhB,gBAAgB;IAE3B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;CAEF;;AAPY,gBAAgB;IAL5B,+DAAS,CAAC;QACT,QAAQ,EAAE,aAAa;QACvB,oFAAuC;;KAExC,CAAC;GACW,gBAAgB,CAO5B;AAP4B;;;;;;;;;;;;;;;;;;;;;;;;;ACPgC;AACpB;AAI4B;AACJ;IAOpD,kBAAkB,SAAlB,kBAAkB;IAS7B,YACU,cAA8B,EAC9B,WAAyB,EACzB,MAAc;QAFd,mBAAc,GAAd,cAAc,CAAgB;QAC9B,gBAAW,GAAX,WAAW,CAAc;QACzB,WAAM,GAAN,MAAM,CAAQ;IACrB,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,SAAS,CACvD,CAAC,WAAwB,EAAE,EAAE;YAC3B,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QACnC,CAAC,CAAC;QAEF,IAAI,CAAC,8BAA8B,GAAG,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,SAAS,CAC/E,CAAC,YAAyB,EAAE,EAAE;YAC5B,IAAI,CAAC,UAAU,GAAG,YAAY,CAAC;QACjC,CAAC,CACF,CAAC;QACF,IAAI,CAAC,cAAc,CAAC,eAAe,EAAE,CAAC;IACxC,CAAC;IAED,eAAe,CAAC,EAAU;QACxB,IAAI,CAAC,cAAc,CAAC,qBAAqB,CAAC,EAAE,CAAC,CAAC;IAChD,CAAC;IAED,WAAW;QACT,IAAI,CAAC,8BAA8B,CAAC,WAAW,EAAE,CAAC;QAClD,IAAG,IAAI,CAAC,YAAY,EAAC;YAAC,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE;SAAC;QAAA,CAAC;IACxD,CAAC;CACH;;YA7CQ,kFAAc;YACd,8EAAY;YALZ,sDAAM;;AAYF,kBAAkB;IAL9B,+DAAS,CAAC;QACT,QAAQ,EAAE,eAAe;QACzB,sFAAyC;;KAE1C,CAAC;GACW,kBAAkB,CAqC9B;AArC8B;AAwC/B,sBAAsB;AAClB,MAAM;AACN,iDAAiD;AACjD,yDAAyD;AACzD,wBAAwB;AACxB,8BAA8B;AAC9B,4CAA4C;AAC5C,4CAA4C;AAC5C,yKAAyK;AACzK,eAAe;AACf,oCAAoC;AACpC,gEAAgE;AAChE,sFAAsF;AACtF,SAAS;AACT,sEAAsE;AACtE,OAAO;AACP,MAAM;AACN,+CAA+C;AAC/C,uDAAuD;AACvD,yBAAyB;AACzB,gCAAgC;AAChC,4CAA4C;AAC5C,2CAA2C;AAC3C,iJAAiJ;AACjJ,eAAe;AACf,6CAA6C;AAC7C,mDAAmD;AACnD,yCAAyC;AACzC,uEAAuE;AACvE,+CAA+C;AAC/C,QAAQ;AACR,OAAO;AACP,MAAM;AACN,gDAAgD;AAChD,8CAA8C;AAC9C,wDAAwD;AACxD,yBAAyB;AACzB,sCAAsC;AACtC,6BAA6B;AAC7B,4CAA4C;AAC5C,4CAA4C;AAC5C,qHAAqH;AACrH,eAAe;AACf,kCAAkC;AAClC,yCAAyC;AACzC,yEAAyE;AACzE,2GAA2G;AAC3G,QAAQ;AACR,OAAO;AACP,MAAM;AACN,kGAAkG;AAClG,2CAA2C;AAC3C,gEAAgE;AAChE,yCAAyC;AACzC,qCAAqC;AACrC,6BAA6B;AAC7B,4CAA4C;AAC5C,4CAA4C;AAC5C,qJAAqJ;AACrJ,eAAe;AACf,8CAA8C;AAC9C,4GAA4G;AAC5G,4EAA4E;AAC5E,qGAAqG;AACrG,QAAQ;AACR,OAAO;AACP,KAAK;;;;;;;;;;;;;;;;;;;;;;;;;ACtHkE;AACzB;AACkB;AAC3B;IAQ5B,oBAAoB,SAApB,oBAAoB;IAK/B,YACU,EAAe,EACf,WAAyB,EACzB,MAAc;QAFd,OAAE,GAAF,EAAE,CAAa;QACf,gBAAW,GAAX,WAAW,CAAc;QACzB,WAAM,GAAN,MAAM,CAAQ;IACpB,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC9B,KAAK,EAAC,CAAC,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC;YAC9B,QAAQ,EAAC,CAAC,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC;SAClC,CAAC;IACJ,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,GAAE,EAAE;YAC3D,OAAO,CAAC,GAAG,CAAC,gCAAgC,CAAC,CAAC;YAC9C,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;QAClC,CAAC,EACD,GAAG,CAAC,EAAE;YACJ,OAAO,CAAC,GAAG,CAAC,0DAA0D,CAAC,CAAC;YACxE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;QACtC,CAAC,CACF,CAAC;IACJ,CAAC;IAED,WAAW;QACT,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;IACtC,CAAC;IAED,gBAAgB;QACd,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC;IAClC,CAAC;IAED,qBAAqB;IACrB,iBAAiB;QACf,OAAO,IAAI,CAAC,KAAK,CAAC;IACpB,CAAC;CACF;;YAnDmB,0DAAW;YAFtB,2EAAY;YAGZ,sDAAM;;AAQF,oBAAoB;IALhC,+DAAS,CAAC;QACT,QAAQ,EAAE,kBAAkB;QAC5B,yFAA4C;;KAE7C,CAAC;GACW,oBAAoB,CA0ChC;AA1CgC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZ0B;AAClB;AAEM;AAE8B;AACA;AACA;AACa;AACA;AACK;AACL;AACG;AACM;AACgB;AACkB;AACd;AACU;AAEpE;AACJ;AACgF;AAGzI,MAAM,OAAO,GAAG;IACZ,0FAAe;IACf,0FAAe;IACf,0FAAe;IACf,uGAAgB;IAChB,iHAAoB;IACpB,2GAAkB;IAClB,4GAAsB;IACtB,wGAAgB;IAChB,uGAAgB;IAChB,iIAAkB;IAClB,qIAAmB;IACnB,+IAAsB;IACtB,mJAAuB;IACvB,uJAAwB;CAC3B,CAAC;IAoBW,UAAU,SAAV,UAAU;CAAI;AAAd,UAAU;IAlBtB,8DAAQ,CAAC;QACR,YAAY,EAAE;YACZ,OAAO;SACR;QACD,OAAO,EAAE;YACP,iEAAgB;YAChB,2DAAY;SACb;QACD,OAAO,EAAE;YACP,OAAO;YACP,2DAAY;SACb;QACD,SAAS,EAAC;YACR,yEAAc;YACd,qEAAY;SACb;KAEF,CAAC;GACW,UAAU,CAAI;AAAJ;;;;;;;;;;;;;AC3DvB;AAAe,4NAA6J,kBAAkB,ylEAAylE,WAAW,y5DAAy5D,E;;;;;;;;;;;;ACA3rI;AAAe,6GAA8C,uIAAuI,E;;;;;;;;;;;;ACApM;AAAe,6GAA8C,2HAA2H,E;;;;;;;;;;;;ACAxL;AAAe,wFAAyB,E;;;;;;;;;;;;;;;;;;;;;ACAU;IAOrC,eAAe,SAAf,eAAe;IAE1B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;CAEF;;AAPY,eAAe;IAL3B,+DAAS,CAAC;QACT,QAAQ,EAAE,YAAY;QACtB,mFAAsC;;KAEvC,CAAC;GACW,eAAe,CAO3B;AAP2B;;;;;;;;;;;;;ACP5B;AAAe,6GAA8C,uHAAuH,E;;;;;;;;;;;;ACApL;AAAe,6GAA8C,mIAAmI,E;;;;;;;;;;;;;;;;;;;;;ACAvJ;AACsB;AACpB;AAEQ;AACd;IAMxB,YAAY,SAAZ,YAAY;IAUvB,YACU,IAAgB,EAChB,MAAc;QADd,SAAI,GAAJ,IAAI,CAAY;QAChB,WAAM,GAAN,MAAM,CAAQ;QATjB,eAAU,GAAiC,IAAI,oDAAe,CAAC;YACpE,MAAM,EAAE,IAAI;YACZ,GAAG,EAAE,IAAI;SACV,CAAC;IAOE,CAAC;IAEL,UAAU;IACR,cAAc;IACd,UAAU,CAAC,OAAa;QACxB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAO,mBAAmB,EAAC,OAAO,CAAC,CAAC;IACzD,CAAC;IACD,qBAAqB;IACrB,MAAM,CAAC,IAAU;QACjB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,mBAAmB,EAAE,IAAI,CAAC,CAAC,IAAI,CACnD,0DAAG,CAAC,CAAC,QAAQ,EAAC,EAAE;YACd,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC;gBACnB,MAAM,EAAE,IAAI;gBACZ,GAAG,EAAE,QAAQ,CAAC,GAAG;aAClB,CAAC,CAAC;QACL,CAAC,EAAC,GAAG,CAAC,EAAE;YACP,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,EAAC,EAAE,CAAC,CAAC;QACvC,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAEC,mBAAmB;IACnB,YAAY;QACV,MAAM,aAAa,GAAG;YACpB,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACzB,6BAA6B,EAAE,GAAG;aAIjC,CAAC;SACH,CAAC;QAEF,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC,SAAS,CAAC,CAAC,GAAG,EAAC,EAAE;YACjD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,EAAE,GAAG,CAAC,EAAE;YACP,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACL,CAAC;IAGD,mCAAmC;IACnC,0DAA0D;IAC1D,aAAa;IACb,8EAA8E;IAC9E,2EAA2E;IAC3E,SAAS;IACT,IAAI;IAGJ,cAAc;IACd,OAAO;QACL,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,mBAAmB,CAAC,CAAC,IAAI,CAC/C,0DAAG,CAAC,CAAC,QAAQ,EAAC,EAAE;YACd,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC;gBACnB,MAAM,EAAE,KAAK;gBACb,GAAG,EAAE,EAAE;aACR,CAAC,CAAC;YACH,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACtB,CAAC,EAAC,GAAG,CAAC,EAAE;YACR,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACzB,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;CACJ;;YAtFQ,+DAAU;YADV,sDAAM;;AAWF,YAAY;IAHxB,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,YAAY,CA4ExB;AA5EwB;;;;;;;;;;;;;ACXzB;AAAe,uFAAwB,E;;;;;;;;;;;;;;;;;;;;;ACAG;IAO7B,YAAY,SAAZ,YAAY;;QACvB,UAAK,GAAG,SAAS,CAAC;IACpB,CAAC;CAAA;AAFY,YAAY;IALxB,+DAAS,CAAC;QACT,QAAQ,EAAE,UAAU;QACpB,gFAAmC;;KAEpC,CAAC;GACW,YAAY,CAExB;AAFwB;;;;;;;;;;;;;ACPzB;AAAe,w3BAAyzB,eAAe,8SAA8S,mBAAmB,8TAA8T,0BAA0B,+cAA+c,E;;;;;;;;;;;;ACA/7D;AAAe,ieAAka,eAAe,wDAAwD,gCAAgC,KAAK,8BAA8B,0GAA0G,UAAU,uDAAuD,eAAe,mOAAmO,E;;;;;;;;;;;;ACAx9B;AAAe,wJAAyF,E;;;;;;;;;;;;ACAxG;AAAe,uFAAwB,E;;;;;;;;;;;;ACAvC;AAAe,6GAA8C,+HAA+H,E;;;;;;;;;;;;;;;;;;;;;ACAnJ;AACM;AACmB;AACf;AACK;AAGxD,MAAM,cAAc,GAAG;IACrB,4DAAY;IACZ,kEAAmB;IACnB,qEAAgB;IAChB,+DAAc;IACd,0DAAW;CACZ,CAAC;IAOW,YAAY,SAAZ,YAAY;CAAI;AAAhB,YAAY;IALxB,8DAAQ,CAAC;QACR,YAAY,EAAE,EAAE;QAChB,OAAO,EAAE,CAAC,cAAc,CAAC;QACzB,OAAO,EAAE,CAAC,cAAc,CAAC;KAC1B,CAAC;GACW,YAAY,CAAI;AAAJ;;;;;;;;;;;;;ACpBzB;AAAe,kvBAAmrB,4mBAA4mB,2MAA2M,wBAAwB,sFAAsF,kDAAkD,YAAY,4XAA4X,E;;;;;;;;;;;;;;;;;;;;;;;;ACAr+D;AACnB;AACiB;AAET;AACF;AACgC;AAClC;AACW;IAiB3C,SAAS,SAAT,SAAS;CAAI;AAAb,SAAS;IAfrB,8DAAQ,CAAC;QACR,YAAY,EAAE;YACZ,2DAAY;SACb;QACD,OAAO,EAAE;YACP,yEAAU;YACV,uEAAa;YACb,0DAAW;YACX,4FAAuB;YACvB,6DAAgB;YAChB,qEAAgB;SACjB;QACD,SAAS,EAAE,EAAE;QACb,SAAS,EAAE,CAAC,2DAAY,CAAC;KAC1B,CAAC;GACW,SAAS,CAAI;AAAJ;;;;;;;;;;;;;;;;;;;;;;ACzB4B;IAMrC,gBAAgB,SAAhB,gBAAgB;IAG3B,gBAAe,CAAC;IAEhB,QAAQ;IACR,CAAC;CAEF;;AARY,gBAAgB;IAL5B,+DAAS,CAAC;QACT,QAAQ,EAAE,aAAa;QACvB,oFAAuC;;KAExC,CAAC;GACW,gBAAgB,CAQ5B;AAR4B;;;;;;;;;;;;;ACN7B;AAAe,2LAA4H,kBAAkB,6IAA6I,MAAM,omHAAomH,q6CAAq6C,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAhxK;AACc;AAEL;AAEqC;AACM;AACT;AACA;AACK;AACsC;AACd;AACU;AACd;AACzB;AAEpF,MAAM,MAAM,GAAW;IAErB,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,gGAAgB,EAAC;IAC/C,EAAE,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,yGAAoB,EAAC;IACvD,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,mGAAkB,EAAC;IAEnD,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,iGAAgB,EAAC;IAE/C,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,0HAAkB,EAAC;IACnD,EAAE,IAAI,EAAE,gBAAgB;QACtB,WAAW,EAAC,CAAC,+DAAS,CAAC;QACvB,SAAS,EAAE,wIAAsB,EAAC;IACpC,EAAE,IAAI,EAAE,eAAe;QACrB,WAAW,EAAC,CAAC,+DAAS,CAAC;QACvB,SAAS,EAAE,wIAAsB,EAAC;IAEpC,EAAE,IAAI,EAAE,YAAY,EAAE,SAAS,EAAE,8HAAmB,EAAC;IACrD,EAAE,IAAI,EAAE,gBAAgB;QACpB,WAAW,EAAC,CAAC,+DAAS,CAAC;QACvB,SAAS,EAAC,2IAAuB,EAAC;IAEtC,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,gGAAgB,EAAC;IAC/C,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,GAAG,EAAE,SAAS,EAAE,MAAM,EAAE;IAChD,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,qGAAsB,EAAE;CAClD,CAAC;IAMW,gBAAgB,SAAhB,gBAAgB;CAAI;AAApB,gBAAgB;IAJ5B,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,gBAAgB,CAAI;AAAJ;;;;;;;;;;;;;;;;;;;;;;AC9CqB;IAOrC,gBAAgB,SAAhB,gBAAgB;IAK3B;QAFA,oBAAe,GAAS,IAAI,IAAI,CAAC,IAAI,EAAC,EAAE,EAAC,EAAE,CAAC,CAAC;QAG3C,MAAM,KAAK,GAAG,CAAC,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC,CAAC;QACrC,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,CAAC,GAAC,WAAW,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IAC9E,CAAC;IAEF,QAAQ;IACR,CAAC;IACD,GAAG,CAAC,eAAe;QACjB,eAAe,GAAG,IAAI,IAAI,CAAC,eAAe,CAAC,CAAC;QAC5C,OAAO,IAAI,MAAM,CAAC,CAAC,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,GAAG,eAAe,CAAC,OAAO,EAAE,CAAC,GAAG,WAAW,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IACjG,CAAC;CAEF;;AAjBY,gBAAgB;IAL5B,+DAAS,CAAC;QACT,QAAQ,EAAE,aAAa;QACvB,oFAAuC;;KAExC,CAAC;GACW,gBAAgB,CAiB5B;AAjB4B;;;;;;;;;;;;;ACP7B;AAAe,6GAA8C,+HAA+H,E;;;;;;;;;;;;ACA5L;AAAe,6GAA8C,uIAAuI,E;;;;;;;;;;;;;;;;;;;;;;;;ACAzH;AACzB;AACT;AAC2B;IAOvD,kBAAkB,SAAlB,kBAAkB;IAK7B,YACU,EAAe,EACf,MAAc,EACd,YAA0B;QAF1B,OAAE,GAAF,EAAE,CAAa;QACf,WAAM,GAAN,MAAM,CAAQ;QACd,iBAAY,GAAZ,YAAY,CAAc;IAEpC,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACxB,MAAM,EAAC,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAChC,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,KAAK,CAAC,CAAC;YACpD,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;SAE/D,CAAC,CAAC;IAEL,CAAC;IAED,oCAAoC;IACpC,QAAQ;QACN,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,QAAQ,EAAC,EAAE;YAClE,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACtB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;QACzC,CAAC,EACD,GAAG,CAAC,EAAE;YACJ,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC;QACnB,CAAC,CAAC,CAAC;QAAA,CAAC;IACN,CAAC;IAED,aAAa;QACX,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;IACzC,CAAC;IAED,sBAAsB;IACxB,oCAAoC;IACpC,SAAS;QACP,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAC;YAC3C,OAAO,kCAAkC,CAAC;SAC3C;IACH,CAAC;IAED,aAAa;QACX,IAAK,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAC;YACnD,OAAO,qDAAqD,CAAC;SAC9D;IACH,CAAC;IAED,oBAAoB;IAElB,CAAC;CACA;;YAjE6B,0DAAW;YADlC,sDAAM;YAFN,2EAAY;;AAUR,kBAAkB;IAL9B,+DAAS,CAAC;QACT,QAAQ,EAAE,gBAAgB;QAC1B,uFAA0C;;KAE3C,CAAC;GACW,kBAAkB,CA0D5B;AA1D4B;;;;;;;;;;;;;ACV/B;AAAe,qhBAAsd,YAAY,i1FAAi1F,E;;;;;;;;;;;;ACAl0G;AAAe,6GAA8C,2HAA2H,E;;;;;;;;;;;;ACAxL;AAAe,6GAA8C,mIAAmI,E;;;;;;;;;;;;;;;;;;;;;ACA9I;IAOrC,eAAe,SAAf,eAAe;IAE1B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;CAEF;;AAPY,eAAe;IAL3B,+DAAS,CAAC;QACT,QAAQ,EAAE,YAAY;QACtB,mFAAsC;;KAEvC,CAAC;GACW,eAAe,CAO3B;AAP2B;;;;;;;;;;;;;ACP5B;AAAe,6YAA8U,8UAA8U,iBAAiB,2FAA2F,0BAA0B,KAAK,oBAAoB,8EAA8E,kBAAkB,QAAQ,qBAAqB,4HAA4H,mBAAmB,UAAU,eAAe,uJAAuJ,qCAAqC,gDAAgD,qCAAqC,yMAAyM,oBAAoB,0JAA0J,QAAQ,kMAAkM,iBAAiB,uJAAuJ,E;;;;;;;;;;;;ACAzmE;AAAe,6GAA8C,2HAA2H,E;;;;;;;;;;;;;;;;;;ACC7I;AAEa;IAM3C,SAAS,SAAT,SAAS;IAEpB,YACU,WAAyB;QAAzB,gBAAW,GAAX,WAAW,CAAc;IACjC,CAAC;IAEH,WAAW,CACT,KAA4B,EAC5B,KAAyB;QAEvB,OAAO,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,KAAK,CAAC,MAAM;IACjD,CAAC;CACJ;;YAlBQ,oEAAY;;AAMR,SAAS;IAJrB,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GAEW,SAAS,CAYrB;AAZqB;;;;;;;;;;;;;ACTtB;AAAe,6GAA8C,mIAAmI,E;;;;;;;;;;;;;;;;;;;ACCrJ;AACO;AACe;IAMpD,cAAc,SAAd,cAAc;IAMzB,YACU,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAL1B,iBAAY,GAAiB,EAAE,CAAC;QAChC,kBAAa,GAAiC,IAAI,oDAAe,CAAC,EAAE,CAAC,CAAC;IAKlE,CAAC;IAEL,6BAA6B;QAC3B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IAC7C,CAAC;IACD,YAAY,CAAC,KAAa;QACxB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACnB,OAAO,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IACzC,CAAC;IAED,kBAAkB,CAAC,YAAuB;QACxC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QACrC,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC;QAClC,IAAI,CAAC,6BAA6B,EAAE,CAAC;IACvC,CAAC;IAED,UAAU;IACV,cAAc,CAAC,SAAoB;QACjC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAY,iBAAiB,EAAC,SAAS,CAAC,CAAC,SAAS,CAAC,CAAC,SAAS,EAAC,EAAE,GAAC,CAAC,CAAC,CAAC;IACpF,CAAC;IAED,eAAe,CAAC,SAAmB,EAAE,EAAU;QAC7C,IAAI,CAAC,IAAI,CAAC,IAAI,CAAY,yBAAyB,GAAE,EAAE,EAAE,SAAS,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,EAAC,EAAE,GAAE,CAAC,CAAC,CAAC;IAC3F,CAAC;IAED,eAAe;QACb,IAAI,CAAC,IAAI,CAAC,GAAG,CAAc,gBAAgB,CAAC;aACzC,SAAS,CAAC,CAAC,UAAuB,EAAC,EAAE;YACtC,IAAI,CAAC,YAAY,GAAG,UAAU,CAAC;YAC/B,IAAI,CAAC,6BAA6B,EAAE,CAAC;QACvC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,qBAAqB,CAAC,EAAU;QAC9B,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,iBAAiB,GAAG,EAAE,CAAE,CAAC,SAAS,CAAC,GAAE,EAAE;YACtD,CAAC,CAAC,SAAsB,EAAG,EAAE;gBAC3B,IAAI,CAAC,YAAY,GAAG,SAAS,CAAC;YAChC,CAAC,CAAC;QACJ,CAAC,CAAC;QACF,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,6BAA6B,EAAE,CAAC;IACvC,CAAC;CACF;;YAzDQ,+DAAU;;AAON,cAAc;IAH1B,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,cAAc,CAkD1B;AAlD0B;;;;;;;;;;;;;;;;;;;;;;;;ACTuB;AACkB;AAC3B;IAO5B,uBAAuB,SAAvB,uBAAuB;IAMlC,YACU,EAAe,EACf,MAAc;QADd,OAAE,GAAF,EAAE,CAAa;QACf,WAAM,GAAN,MAAM,CAAQ;QAEtB,IAAI,CAAC,WAAW,GAAG;YACjB,KAAK;YACL,KAAK;YACL,0BAA0B;YAC1B,kCAAkC;YAClC,6BAA6B;SAC9B;IAEH,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAC5B,CAAC;IAED,kBAAkB;QAChB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAClC,UAAU,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACvC,UAAU,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACvC,KAAK,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAClC,GAAG,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAChC,WAAW,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACxC,QAAQ,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACrC,IAAI,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACjC,IAAI,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACjC,QAAQ,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACtC,CAAC;IACJ,CAAC;IAED,gBAAgB;IAEhB,CAAC;IACD,OAAO,CAAC,CAAC;IAET,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;IACtC,CAAC;CACF;;YAxDQ,0DAAW;YACX,sDAAM;;AAOF,uBAAuB;IALnC,+DAAS,CAAC;QACT,QAAQ,EAAE,qBAAqB;QAC/B,4FAA+C;;KAEhD,CAAC;GACW,uBAAuB,CAgDnC;AAhDmC;;;;;;;;;;;;;;;;;;;;;;;;;ACRwD;AAE1C;AACiB;AAEE;IAOxD,sBAAsB,SAAtB,sBAAsB;IAMjC,YACU,EAAc,EACd,MAAc,EACd,cAA8B,EAC9B,cAA8B;QAH9B,OAAE,GAAF,EAAE,CAAY;QACd,WAAM,GAAN,MAAM,CAAQ;QACd,mBAAc,GAAd,cAAc,CAAgB;QAC9B,mBAAc,GAAd,cAAc,CAAgB;IACrC,CAAC;IAEF,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,OAAO,CAAc,CAAC;IACtD,CAAC;IAEH,QAAQ;QACF,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,QAAkB,EAAE,EAAE;YAC5D,IAAI,CAAC,EAAE,GAAG,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YAC9B,uCAAuC;YACvC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YACrB,sBAAsB;YACtB,IAAG,IAAI,CAAC,EAAE,EAAC;gBACT,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;gBACnE,OAAO,CAAC,GAAG,CAAC,kCAAkC,CAAC,CAAC;aAEjD;YACD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAChC,CAAC,CAAC,CAAC;IACT,CAAC;IAED,QAAQ,CACN,YAAuB;QACvB,YAAY,EAAC,EAAE;QACf,MAAM,EAAC,EAAE;QACT,KAAK,EAAE,IAAI;QACX,GAAG,EAAC,EAAE;QACN,IAAI,EAAC,EAAE;QACP,OAAO,EAAC,EAAE;QACV,UAAU,EAAE,IAAI,IAAI;QACpB,UAAU,EAAE,IAAI,IAAI;QACpB,OAAO,EAAC,EAAE;QACV,KAAK,EAAC,EAAE;QACR,IAAI,EAAC,EAAE;KACR;QAEC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACjC,YAAY,EAAE,CAAC,SAAS,CAAC,YAAY,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC3D,MAAM,EAAE,CAAC,SAAS,CAAC,MAAM,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;YACnD,KAAK,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC;YACxB,GAAG,EAAE,CAAC,SAAS,CAAC,GAAG,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;YAC7C,IAAI,EAAE,CAAC,SAAS,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC3C,OAAO,EAAE,CAAC,SAAS,CAAC,OAAO,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;YACrD,UAAU,EAAE,CAAC,SAAS,CAAC,UAAU,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACvD,UAAU,EAAE,CAAC,SAAS,CAAC,UAAU,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACvD,OAAO,EAAE,CAAC,SAAS,CAAC,OAAO,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACjD,KAAK,EAAE,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC;YACrC,IAAI,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC;SACvB,CAAC,CAAC;IACL,CAAC;IAED,WAAW;QACT,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,0DAAW,CAAC,EAAE,CAAC,CAAC,CAAC;IACvC,CAAC;IACD,SAAS,CAAC,CAAC;QACT,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC;IACxB,CAAC;IAED,wBAAwB;IACxB,eAAe;QACf,IAAI,CAAC,cAAc,CAAC,kBAAkB,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAE/D,qCAAqC;IACvC,CAAC;IAED,cAAc;IACd,4EAA4E;IAC5E,uCAAuC;IACvC,IAAI;IAEJ,MAAM;QACJ,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;IACpC,CAAC;CAEF;;YAjGmB,0DAAW;YAGI,sDAAM;YAEhC,kFAAc;YAFd,8DAAc;;AASV,sBAAsB;IALlC,+DAAS,CAAC;QACT,QAAQ,EAAE,oBAAoB;QAC9B,2FAA8C;;KAE/C,CAAC;GACW,sBAAsB,CAqFlC;AArFkC;;;;;;;;;;;;;ACbnC;AAAe,iwBAAksB,cAAc,wbAAwb,aAAa,gEAAgE,E;;;;;;;;;;;;ACApuC;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZyC;AAC8B;AACd;AACa;AACX;AACa;AACjB;AACA;AACA;AACA;AACM;AAEK;AACX;AACE;AACQ;AACN;AACI;AACF;AAGM;AACN;AACS;AACT;AACmB;AAGhF,MAAM,QAAQ,GAAG;IACf,oFAAqB;IACrB,sEAAc;IACd,mFAAoB;IACpB,wEAAe;IACf,qFAAqB;IACrB,oEAAa;IACb,oEAAa;IACb,oEAAa;IACb,qEAAa;IACb,2EAAgB;IAChB,gFAAkB;IAClB,qEAAa;IACb,uEAAc;IACd,+EAAkB;IAClB,yEAAe;IACf,6EAAiB;IACjB,iFAAmB;IACnB,2EAAmB;IACnB,oFAAoB;IACpB,2EAAgB;IAChB,2EAAgB;IAChB,8FAAqB;CACtB,CAAC;IAOW,cAAc,SAAd,cAAc;CAAI;AAAlB,cAAc;IAL1B,8DAAQ,CAAC;QACR,YAAY,EAAE,EAAE;QAChB,OAAO,EAAE,CAAC,QAAQ,CAAC;QACnB,OAAO,EAAE,CAAC,QAAQ,CAAC;KACpB,CAAC;GACW,cAAc,CAAI;AAAJ","file":"main.js","sourcesContent":["import { Subscription } from 'rxjs';\nimport { Component, OnInit } from '@angular/core';\nimport { Experience } from 'src/shared/modeles/experience.interface';\nimport { UserSession } from 'src/shared/modeles/userSession.interface';\nimport { UsersService } from 'src/shared/services/users.service';\n\n@Component({\n  selector: 'app-experience',\n  templateUrl: './experience.component.html',\n  styleUrls: ['./experience.component.sass']\n})\nexport class ExperienceComponent implements OnInit {\n\n  subscription: Subscription;\n  userSession: UserSession;\n\n  experienceTab: Experience[];\n\n  constructor(\n    private userService: UsersService\n  ) {\n    this.experienceTab = [\n      {\n        dateEntree: new Date('2018/01/05'),\n        dateSortie: new Date('2021/02/01'),\n        image: '../../../../assets/images/ban_bricoDepot.png',\n        typeContrat: 'CDI',\n        enseigne: 'Bricot Dépot',\n        lieu: 'Trélissac (24000)',\n        fonction: 'Vendeur Polyvalent - Secteur Outillage/Peinture/Electicité '\n      },\n      {\n        dateEntree: new Date('2009/01/05'),\n        dateSortie: new Date('2017/05/01'),\n        image: '../../../../assets/images/ban-cashexpress.png',\n        typeContrat: 'CDI',\n        enseigne: 'CashExpress',\n        lieu: 'Trélissac (24000)',\n        fonction: 'Acheteur Vendeur Polyvalent - Gestion '\n      }\n    ];\n  }\n\n  ngOnInit(): void {\n    this.subscription = this.userService.idSession$.subscribe((usersession: UserSession)=> {\n      this.userSession = usersession;\n    })\n\n  }\n\n}\n","// import { MatInputModule } from '@angular/material/input';\n// import { HttpClient } from '@angular/common/http';\n// import { Component, ElementRef, Input, OnInit, ViewChild } from '@angular/core';\n// import { FormControl, Validators } from '@angular/forms';\n// import { ThemePalette } from '@angular/material/core';\n// import { Observable, Subscription } from 'rxjs';\n// import { NgxMatFileInputModule, NgxMatFileInputIcon, AcceptValidator, MaxSizeValidator } from '@angular-material-components/file-input';\n// import { UploadFileService } from 'src/shared/services/upload-file.service';\n\n\n// @Component({\n//   selector: 'app-upload-image-form',\n//   templateUrl: './upload-image-form.component.html',\n//   styleUrls: ['./upload-image-form.component.sass']\n// })\n// export class UploadImageFormComponent implements OnInit {\n\n//   public filesHolder$: Observable<File[]> = this.uploadService.fileHolders$.asObservable();\n//   public filetabSub: Subscription;\n//   fileTab: [];\n\n//   @ViewChild('fileInput', {static: true}) inputRef: ElementRef;\n//   color: ThemePalette = 'primary';\n//   disabled: boolean = false;\n//   multiple: boolean = false;\n//   accept: string;\n//   formControl: FormControl;\n\n//   constructor(\n//     private uploadService: UploadFileService,\n//     private http: HttpClient,\n//   ) {}\n\n//   ngOnInit(): void {\n//     this.formControl = new FormControl([Validators.required]);\n//   }\n// }\n\n\n\n\nimport { Component, ViewChild, ElementRef, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { UploadFileService } from 'src/shared/services/upload-file.service';\n\n@Component({\n    selector: 'app-upload-image-form',\n    templateUrl: './upload-image-form.component.html',\n    styleUrls: ['./upload-image-form.component.sass']\n  })\n  export class UploadImageFormComponent implements OnInit {\n\n    essaifile: File;\n    noFile: number;\n\n    public filesHolder$: Observable<{\n      file: File,\n      progress$: Observable<number>\n    }[]> = this.upLoadFileService.filesHolder$.asObservable();\n    @ViewChild('fileinput', { static: false }) inputRef: ElementRef;\n\n  constructor(\n    private upLoadFileService: UploadFileService,\n  ) {}\n\n  ngOnInit(): void {\n  }\n\n  openFile() {\n    this.inputRef.nativeElement.click();\n  }\n\n  addFile($event){\n    const file = $event.target.files;\n    this.upLoadFileService.addFile(file);\n    this.noFile = this.upLoadFileService.filesHolder$.value.length;\n  }\n\n  deleteFile(index){\n    this.upLoadFileService.removeFile(index);\n    this.noFile = this.upLoadFileService.filesHolder$.value.length;\n  }\n\n  dropFile($event){\n    console.log($event);\n\n    if($event.dataTransfer){\n      const file = $event.dataTransfer.files;\n      this.upLoadFileService.addFile(file)\n    }\n  }\n}\n\n\n\n","export default \"<section fxLayoutAlign='center center'>\\n    <form [formGroup]='singinForm'>\\n        <mat-card class='matCardSeCo' fxFlex='column'>\\n            <mat-card-header>\\n                <mat-card-title>Se Connecter</mat-card-title>\\n            </mat-card-header>\\n            <mat-card-content fxLayout='column'>\\n                <mat-form-field>\\n                    <mat-label name='email'>Email</mat-label>\\n                    <input matInput type='email' formControlName='email' />\\n                    <mat-error *ngIf=\\\"\\\"></mat-error>\\n                </mat-form-field>\\n                <mat-form-field>\\n                    <mat-label name='password'>Mot de passe</mat-label>\\n                    <input matInput type='password' formControlName='password' />\\n                    <mat-error *ngIf=\\\"\\\"></mat-error>\\n                </mat-form-field>\\n                <button mat-raised-button (click)=\\\"goggleConnection()\\\"><span class=\\\"material-icons-outlined\\\">\\n                  g_translate\\n                  </span></button>\\n            </mat-card-content>\\n            <mat-card-actions align=\\\"start\\\">\\n                <mat-error *ngIf='error'>{{ seconnecterErreur() }}</mat-error>\\n                <button mat-raised-button [disabled]='this.singinForm.invalid' (click)='submit()'>Envoyer</button>\\n                <button mat-raised-button (click)='goSInscrire()'>Je n'ai pas de compte\\n                </button>\\n            </mat-card-actions>\\n\\n        </mat-card>\\n    </form>\\n</section>\";","export default \"<app-acceuil></app-acceuil>\";","import { Subscription } from 'rxjs';\nimport { UsersService } from './../../../shared/services/users.service';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserSession } from 'src/shared/modeles/userSession.interface';\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.sass']\n})\nexport class HeaderComponent implements OnInit, OnDestroy {\n\n  listeMenu: any[];\n  activeLink: string;\n  menuConnect: any[];\n\n  subscription: Subscription;\n  userSession: UserSession;\n\n  constructor(\n    private router: Router,\n    private userService: UsersService,\n    )\n  {\n    this.listeMenu = [\n      {\n        nom: 'Acceuil',\n        lien: 'acceuil',\n        fragment: 'acceuil'\n      },\n      {\n        nom: 'Parcour',\n        lien: 'parcour',\n        fragment: 'parcour'\n       },\n      {\n        nom: 'Contact',\n        lien: 'contact',\n        fragment: 'contact'\n      }\n    ];\n    this.menuConnect = [\n      {\n       titre: 'Se connecter',\n       lien: 'seConnecter'\n      },\n      {\n        titre: 's\\'inscrire',\n        lien: 'sInscrire'\n      }\n   ];\n    this.activeLink = this.listeMenu[0];\n  }\n\n  ngOnInit(): void {\n    this.subscription = this.userService.idSession$.subscribe((userSession: UserSession)=> {\n      this.userSession = userSession;\n    })\n  }\n\n  loggout(){\n    this.userService.loggout().subscribe(()=>{\n      console.log('deconnexion reussi !');\n    },\n    err=>{\n      console.log('deconnexion reussi dans lerreur');\n      console.log(err)\n    });;\n  }\n\n  ngOnDestroy(): void {\n    if(this.subscription){this.subscription.unsubscribe();}\n  }\n}\n","export default \"<main id='parcour'>\\n    <app-formation></app-formation>\\n    <app-experience></app-experience>\\n</main>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJleHBlcmllbmNlLmNvbXBvbmVudC5zYXNzIn0= */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJuYXZiYXIuY29tcG9uZW50LnNhc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-container',\n  templateUrl: './page-container.component.html',\n  styleUrls: ['./page-container.component.sass']\n})\nexport class PageContainerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwYXJjb3VyLmNvbXBvbmVudC5zYXNzIn0= */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJoZWFkZXIuY29tcG9uZW50LnNhc3MifQ== */\";","import { HttpClient, HttpEvent, HttpEventType, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UploadFileService {\n\n  public filesHolder$: BehaviorSubject<{\n    file: File,\n    progress$: Observable<number>\n  }[]> = new BehaviorSubject([]);\n  constructor(\n    private http: HttpClient,\n  ) { }\n\n  public addFile(files){\n    this.filesHolder$.next([\n      ...this.filesHolder$.value,\n       ...Array.from(files).map( (f: File) => {\n      const formData = new FormData();\n      formData.append('f', f);\n      const request = new HttpRequest('POST','/api/upload', formData, {\n        reportProgress: true\n      });\n      return {\n        file: f,\n        progress$: this.http.request(request).pipe(\n          map((event:HttpEvent<any>) => {\n            switch (event.type){\n              case HttpEventType.Sent:{\n                return 0;\n              }\n              case HttpEventType.UploadProgress:{\n                return Math.round(event.loaded / event.total * 100);\n              }\n              case HttpEventType.Response:{\n                return 100;\n              }\n              default: {\n                return 0;\n              }\n            }\n          })\n        )\n      };\n    })\n  ]);\n  }\n\n  public removeFile(index){\n    const files = this.filesHolder$.value.slice();\n    this.http.delete(`/api/upload/${files[index].file.name}`).subscribe();\n    files.splice(index, 1);\n    this.filesHolder$.next(files)\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.sass']\n})\nexport class ContactComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { Formation } from 'src/shared/modeles/formation.interface';\nimport { UserSession } from 'src/shared/modeles/userSession.interface';\nimport { ParcourService } from 'src/shared/services/parcour.service';\nimport { UsersService } from 'src/shared/services/users.service';\n\n@Component({\n  selector: 'app-formation',\n  templateUrl: './formation.component.html',\n  styleUrls: ['./formation.component.sass']\n})\nexport class FormationComponent implements OnInit, OnDestroy {\n\n  tableauDeFormationSubscription: Subscription;\n  parcourTab: Formation[];\n  formation: Formation;\n\n  subscription: Subscription;\n  userSession: UserSession;\n\n  constructor(\n    private parcourService: ParcourService,\n    private userService: UsersService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.subscription = this.userService.idSession$.subscribe(\n      (userSession: UserSession) => {\n        this.userSession = userSession;\n    })\n\n    this.tableauDeFormationSubscription = this.parcourService.formationTab$.subscribe(\n      (formationTab: Formation[]) => {\n        this.parcourTab = formationTab;\n      }\n    );\n    this.parcourService.recupFormations();\n  }\n\n  deleteFormation(id: String){\n    this.parcourService.supprimerUneFormation(id);\n  }\n\n  ngOnDestroy(): void {\n    this.tableauDeFormationSubscription.unsubscribe();\n    if(this.subscription){this.subscription.unsubscribe()};\n   }\n}\n\n\n// this.parcourTab = [\n    //   {\n    //     nomFormation: 'Developpeur web FullStack',\n    //     image: '../../../../assets/images/OC_Banner.png' ,\n    //     alt: 'imageOpen',\n    //     lieu: 'Telepresentiel',\n    //     dateEntree: new Date(' 01/04/2020 '),\n    //     dateSortie: new Date(' 01/10/2020 '),\n    //     contenu: ' Le developpeur full-stack peut gére a la fois des tâches back-end et front-ent, bien qu\\'il soit pas necesserement un expert dans l\\'un ou l\\'autre. ',\n    //     liste: [\n    //       'creer un backend de site',\n    //       'Utiliser des bibliothéques ou des framework frontaux',\n    //       'gerer le deploiements des application et placer les projets sur les serveur'\n    //     ],\n    //     lien: 'https://openclassrooms.com/fr/paths/185-developpeur-web'\n    //   },\n    //   {\n    //     nomFormation: 'BPA Conducteur d\\'engin',\n    //     image: '../../../../assets/images/OC_bazas.png',\n    //     alt: 'imageBazas',\n    //     lieu: 'EPLEFPA de Bazas',\n    //     dateEntree: new Date(' 01/04/2007 '),\n    //     dateSortie: new Date(' 01/10/207 '),\n    //     contenu: ' Le brevet Professionnel Option Travaux forestier permer d\\'aquérir des connaissances et des compétences professionnemmes en: ',\n    //     liste: [\n    //       'Réalisation de travaux forestiers',\n    //       'Mécanique et entretiens des équipements',\n    //       'Conduite d\\'engins forestiers',\n    //       'Connaissances scientifique et technique relative a la forêt',\n    //       'Organisation de chantiers forestiers'\n    //     ]\n    //   },\n    //   {\n    //     nomFormation: 'BTS Technico Commerciale',\n    //     option: 'Produit d\\'origine Forestier',\n    //     image: '../../../../assets/images/OC_meymac.png',\n    //     alt: 'imageBazas',\n    //     lieu: 'Lycée forestier Meymac',\n    //     adresse: 'Meymac(19)',\n    //     dateEntree: new Date(' 01/04/2001 '),\n    //     dateSortie: new Date(' 01/10/2004 '),\n    //     contenu: ' Formation a devienir des agents commerciaux spécialiser dans le domaines de la filiére forêt-bois',\n    //     liste: [\n    //       'Technique de marketing',\n    //       'Gestion de la relation client',\n    //       'De la négociation a la vente de solution technico commerciale',\n    //       'Laformation porte egalement sur la gestion cimmerciale, le suivides fournisseurs et des clients.'\n    //     ]\n    //   },\n    //   {\n    //     nomFormation: 'Baccalaureat Science et Technologie de l\\'Agronomie et de l\\'Environnement',\n    //     option: 'Aménagement du territoire',\n    //     image: '../../../../assets/images/OC_Charlesquentin.png',\n    //     alt: 'imageBanniere lycee chauny',\n    //     lieu: 'Lycée Robert chaumann',\n    //     adresse: 'Chauny(02)',\n    //     dateEntree: new Date(' 01/04/1999 '),\n    //     dateSortie: new Date(' 01/10/2001 '),\n    //     contenu: ' Formation permettant de maitriser les techinique de gestion et l\\'aménagement des milieux, qu\\'il soit artificielle ou naturelle.',\n    //     liste: [\n    //       'Analyser les aménagements existant',\n    //       'participer des des suivies d\\'épéces pour mieux appréhender la gestion des population naturelles',\n    //       'Réaliser des aménagements, de la conseption a la mise en oeuvre.',\n    //       'Découvrir les grands enjeux liées à l\\'amenagemet des espaces et a la gestion des éspéces.'\n    //     ]\n    //   },\n    // ];\n\n","import { Subscription } from 'rxjs';\nimport { UsersService } from './../../../../shared/services/users.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-se-connecter',\n  templateUrl: './se-connecter.component.html',\n  styleUrls: ['./se-connecter.component.sass']\n})\nexport class SeConnecterComponent implements OnInit {\n\n  singinForm: FormGroup;\n  error: string;\n\n  constructor(\n    private fb: FormBuilder,\n    private userService: UsersService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this.singinForm = this.fb.group({\n      email:['',Validators.required],\n      password:['',Validators.required]\n    })\n  }\n\n  submit(){\n    this.userService.signin(this.singinForm.value).subscribe(()=>{\n      console.log('la connexion cest bien deroule');\n      this.router.navigate(['acceuil']);\n      },\n      err => {\n        console.log('Apres soumission de la connection vous etes dans lerreur');\n        this.error = this.userService.error;\n      }\n    );\n  }\n\n  goSInscrire(){\n    this.router.navigate(['sInscrire']);\n  }\n\n  goggleConnection(){\n    this.userService.signinGoogle();\n  }\n\n  //Gestion des erreurs\n  seconnecterErreur(){\n    return this.error;\n  }\n}\n","import { AppRoutingModule } from './../../app/app.routing';\nimport { NgModule } from '@angular/core';\n\nimport { LayoutModule } from './layout.module';\n\nimport { FooterComponent } from 'src/app/components/footer/footer.component';\nimport { HeaderComponent } from 'src/app/components/header/header.component';\nimport { NavbarComponent } from 'src/app/components/navbar/navbar.component';\nimport { AcceuilComponent } from 'src/app/pages/page-container/acceuil/acceuil.component';\nimport { ContactComponent } from 'src/app/pages/page-container/contact/contact.component';\nimport { PageContainerComponent } from 'src/app/pages/page-container/page-container.component';\nimport { ParcourComponent } from 'src/app/pages/page-container/parcour/parcour.component';\nimport { SInscrireComponent } from 'src/app/components/auth/s-inscrire/s-inscrire.component';\nimport { SeConnecterComponent } from 'src/app/components/auth/se-connecter/se-connecter.component';\nimport { FormationComponent } from 'src/app/pages/page-container/parcour/formations/formation/formation.component';\nimport { ExperienceFormComponent } from 'src/app/pages/page-container/parcour/experiences/experience-form/experience-form.component';\nimport { ExperienceComponent } from 'src/app/pages/page-container/parcour/experiences/experience/experience.component';\nimport { FormationFormComponent } from 'src/app/pages/page-container/parcour/formations/formation-form/formation-form.component';\n\nimport { ParcourService } from '../services/parcour.service';\nimport { UsersService } from '../services/users.service';\nimport { UploadImageFormComponent } from 'src/app/pages/page-container/parcour/formations/upload-image-form/upload-image-form.component';\n\n\nconst MODULES = [\n    HeaderComponent,\n    FooterComponent,\n    NavbarComponent,\n    AcceuilComponent,\n    SeConnecterComponent,\n    SInscrireComponent,\n    PageContainerComponent,\n    ParcourComponent,\n    ContactComponent,\n    FormationComponent,\n    ExperienceComponent,\n    FormationFormComponent,\n    ExperienceFormComponent,\n    UploadImageFormComponent\n];\n\n@NgModule({\n  declarations: [\n    MODULES\n  ],\n  imports: [\n    AppRoutingModule,\n    LayoutModule,\n  ],\n  exports: [\n    MODULES,\n    LayoutModule,\n  ],\n  providers:[\n    ParcourService,\n    UsersService,\n  ]\n\n})\nexport class CoreModule { }\n","export default \"<section fxLayoutAlign='center center'>\\n    <form [formGroup]='experienceForm' (ngSubmit)='onSaveExperience()'>\\n        <mat-card style='min-width: 500px; max-width: 600px;'>\\n            <mat-card-header>\\n                <mat-card-title>Nouvelle Experience</mat-card-title>\\n            </mat-card-header>\\n\\n            <!-- Les Dates -->\\n            <mat-card-content>\\n                <div fxLayout='column'>\\n                    <mat-form-field appearance='fill'>\\n                        <mat-label>Date d'entrée</mat-label>\\n                        <input matInput [matDatepicker]='picker' formControlName='dateEntree'>\\n                        <mat-datepicker-toggle matSuffix [for]='picker'></mat-datepicker-toggle>\\n                        <mat-datepicker #picker></mat-datepicker>\\n                    </mat-form-field>\\n                    <mat-form-field appearance='fill'>\\n                        <mat-label>Date de sortie</mat-label>\\n                        <input matInput [matDatepicker]='pickerSortie' formControlName='dateSortie'>\\n                        <mat-datepicker-toggle matSuffix [for]='pickerSortie'></mat-datepicker-toggle>\\n                        <mat-datepicker #pickerSortie></mat-datepicker>\\n                    </mat-form-field>\\n                </div>\\n\\n                <!-- image -->\\n                <div fxLayout='column'>\\n                    <mat-form-field appearance='fill'>\\n                        <input matInput type=\\\"text\\\" name=\\\"image\\\" formControlName='image' id=\\\"image\\\">\\n                    </mat-form-field>\\n                    <mat-form-field appearance='fill'>\\n                        <mat-label>Description Image</mat-label>\\n                        <input matInput type=\\\"text\\\" formControlName='alt' placeholder='alt'>\\n                        <mat-error *ngIf=\\\"\\\"></mat-error>\\n                    </mat-form-field>\\n                </div>\\n\\n                <!-- Contrat -->\\n                <div fxLayout='column'>\\n                    <mat-form-field appearance='fill'>\\n                        <mat-label>Type de Contrat</mat-label>\\n                        <mat-select placeholder=\\\"type de contrat\\\" formControlName='typeContrat'>\\n                            <mat-option *ngFor='let contrat of typeContrat' [value]=\\\"contrat\\\">{{ contrat }}</mat-option>\\n                        </mat-select>\\n                        <mat-error *ngIf=\\\"\\\"></mat-error>\\n                    </mat-form-field>\\n                    <mat-form-field appearance='fill'>\\n                        <mat-label>Enseigne</mat-label>\\n                        <input matInput type=\\\"text\\\" placeholder=\\\"option\\\" formControlName='enseigne'>\\n                        <mat-error *ngIf=\\\"\\\"></mat-error>\\n                    </mat-form-field>\\n                </div>\\n\\n                <div fxLayout='column'>\\n                    <mat-form-field appearance='fill'>\\n                        <mat-label>Lieu</mat-label>\\n                        <input type=\\\"text\\\" matInput formControlName='lieu' placeholder=\\\"Departement\\\">\\n                        <mat-error *ngIf=\\\"\\\"></mat-error>\\n                    </mat-form-field>\\n                    <mat-form-field appearance='fill'>\\n                        <mat-label>Lien vers le site </mat-label>\\n                        <input type='text' matInput placeholder=\\\"Liens\\\" formControlName='lien' />\\n                        <mat-error *ngIf=\\\"\\\"></mat-error>\\n                    </mat-form-field>\\n                    <mat-form-field appearance='fill'>\\n                        <mat-label>Fonction</mat-label>\\n                        <textarea matInput placeholder=\\\"Quels rôle aviez vous\\\" formControlName='fonction'></textarea>\\n                        <mat-error *ngIf=\\\"\\\"></mat-error>\\n                    </mat-form-field>\\n                </div>\\n\\n            </mat-card-content>\\n            <mat-card-actions align=\\\"start\\\">\\n                <button mat-button type='button' (click)=\\\"envoyer(experienceForm)\\\">Enregistrer</button>\\n                <button mat-raised-button (click)=\\\"retour()\\\">Annuler</button>\\n            </mat-card-actions>\\n            <mat-card-footer>\\n            </mat-card-footer>\\n        </mat-card>\\n    </form>\\n</section>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ1cGxvYWQtaW1hZ2UtZm9ybS5jb21wb25lbnQuc2FzcyJ9 */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhY2NldWlsLmNvbXBvbmVudC5zYXNzIn0= */\";","export default \"<p>contact works!</p>\\n\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.sass']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAuY29tcG9uZW50LnNhc3MifQ== */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwYWdlLWNvbnRhaW5lci5jb21wb25lbnQuc2FzcyJ9 */\";","import { Router } from '@angular/router';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { User } from '../modeles/user.interface';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { UserSession } from '../modeles/userSession.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersService {\n  [x: string]: any;\n\n  public idSession$: BehaviorSubject<UserSession> = new BehaviorSubject({\n    isAuth: null,\n    _id: null\n  })\n  public user: User;\n  public error: string;\n\n  constructor(\n    private http: HttpClient,\n    private router: Router,\n  ) { }\n\n  // Queries\n    // Inscription\n    createUser(newUser: User): Observable<User>{\n    return this.http.post<User>('/api/users/signup',newUser);\n    }\n    // Connexion en local\n    signin(user: User): Observable<any>{\n    return this.http.post('/api/users/signin', user).pipe(\n      tap((response)=>{\n        this.idSession$.next({\n          isAuth: true,\n          _id: response._id\n        });\n      },err => {\n       this.error = err.error.substr(104,22);\n      })\n    );\n  }\n\n    // Connexion Google\n    signinGoogle(){\n      const optionRequete = {\n        headers: new HttpHeaders({\n        'Access-Control-Allow-Origin': '*',\n        // 'Access-Control-Allow-Headers': 'Origin,X-Requested-With,Content,Accept,Content-Type,Authorization',\n        // 'Access-Control-Allow-Methods': 'GET,POST,PUT,DELETE,PATCH,OPTIONS',\n        // 'Access-Control-Allow-Credentials': 'true'\n        })\n      };\n\n      this.http.get('/api/auth/google').subscribe((res)=>{\n        console.log(res);\n      }, err => {\n        console.log(err);\n      });\n    }\n\n\n    // userAPI(data): Observable<any> {\n    //   return this.http.get(this.baseurl, data, httpOptions)\n    //     .pipe(\n    //       tap((resultat) => console.log(\"Résultat de la requête : \",resultat)),\n    //       catchError(this.handleError('erreur lors de la requête CORS', []))\n    //     );\n    // }\n\n\n    // Deconnexion\n    loggout(): Observable<any>{\n      return this.http.delete('api/users/signout').pipe(\n        tap((response)=>{\n          this.idSession$.next({\n            isAuth: false,\n            _id: ''\n          });\n          console.log(response);\n          },err => {\n          console.log(err.error);\n        })\n      );\n    }\n}\n","export default \"<p>navbar works!</p>\\n\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.sass']\n})\nexport class AppComponent {\n  title = 'monSite';\n}\n","export default \"<section fxLayoutAlign='center center'>\\n    <form [formGroup]='form'>\\n        <mat-card class='matCardSeCo' fxFlex='column'>\\n            <mat-card-header>\\n                <mat-card-title>S'enregistrer</mat-card-title>\\n            </mat-card-header>\\n            <mat-card-content fxLayout='column'>\\n                <mat-form-field>\\n                    <mat-label name='pseudo'>Pseudo</mat-label>\\n                    <input matInput formControlName='pseudo' type='text' />\\n                    <mat-error *ngIf=\\\"this.form.invalid\\\"></mat-error>\\n                </mat-form-field>\\n                <mat-form-field>\\n                    <mat-label name='email'>Email</mat-label>\\n                    <input matInput formControlName='email' type='email' />\\n                    <mat-error *ngIf=\\\"this.form.invalid\\\">{{ errorMail() }}</mat-error>\\n                </mat-form-field>\\n\\n                <mat-form-field>\\n                    <mat-label name='password'>Mot de passe</mat-label>\\n                    <input matInput formControlName='password' type='password' />\\n                    <mat-error *ngIf=\\\"this.form.invalid\\\">{{ errorPassword() }}</mat-error>\\n                </mat-form-field>\\n\\n                <mat-form-field>\\n                    <mat-label name='passwordConfirm'>confirmer le mot de passe</mat-label>\\n                    <input matInput name='passwordConfirm' type='password' />\\n                    <mat-error *ngIf=\\\"this.form.invalid\\\">{{ errorPasswordConfirm() }}</mat-error>\\n                </mat-form-field>\\n\\n            </mat-card-content>\\n            <mat-card-actions fx-flex='column'>\\n                <button mat-raised-button [disabled]='this.form.invalid' (click)='onSubmit()'>Envoyer</button>\\n                <button mat-raised-button (click)=\\\"goSeConnecter()\\\">\\n                    J'ai deja un compte\\n                </button>\\n            </mat-card-actions>\\n        </mat-card>\\n    </form>\\n</section>\";","export default \"<section>\\n    <div>\\n        <h3 fxLayoutAlign='center center'>Expérience Professionnelle</h3>\\n        <button mat-raised-button *ngIf='this.userSession.isAuth' routerLink='/experienceForm'>Ajouter une expérience</button>\\n    </div>\\n\\n    <div fxLayout='row wrap' fxLayoutAlign='center start'>\\n        <mat-card *ngFor='let xp of experienceTab'>\\n            <mat-card-header>\\n                <mat-card-title>{{ xp.enseigne }}</mat-card-title>\\n                <mat-card-subtitle>{{xp.dateEntree | date: \\\"MM/y\\\"}} - {{xp.dateSortie | date: 'MM/y'}}</mat-card-subtitle>\\n            </mat-card-header>\\n            <img class='imgBg' matCardImage src=\\\"{{xp.image}}\\\">\\n            <mat-card-content>\\n                {{ xp.fonction }}\\n            </mat-card-content>\\n            <mat-card-actions align=\\\"start\\\">\\n                <button mat-raised-button>En Savoir plus</button>\\n            </mat-card-actions>\\n        </mat-card>\\n    </div>\\n</section>\";","export default \"<app-header></app-header>\\n<router-outlet></router-outlet>\\n<app-footer></app-footer>\\n\";","export default \"<p>footer works!</p>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzLWluc2NyaXJlLmNvbXBvbmVudC5zYXNzIn0= */\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MaterialModule } from './material.module';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\n\nconst MODULES_LAYOUT = [\n  CommonModule,\n  ReactiveFormsModule,\n  FlexLayoutModule,\n  MaterialModule,\n  FormsModule\n];\n\n@NgModule({\n  declarations: [],\n  imports: [MODULES_LAYOUT],\n  exports: [MODULES_LAYOUT]\n})\nexport class LayoutModule { }\n","export default \"<!-- <mat-form-field>\\n    <ngx-mat-file-input name='imgFormation' [formControl]='formControl' [multiple]=\\\"multiple\\\" [accept]=\\\"accept\\\" [color]=\\\"color\\\">\\n    </ngx-mat-file-input>\\n</mat-form-field>\\n<div class=\\\"progress\\\">\\n    <mat-progress-bar class=\\\"progress-bar\\\" mode=\\\"determinate\\\" [value]=\\\"20\\\">\\n    </mat-progress-bar>\\n    <mat-icon class=\\\"cancel-upload\\\">delete_forever</mat-icon>\\n</div> -->\\n\\n\\n<div class=\\\"container\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\n    <div class=\\\"content\\\" fxLayout=\\\"column\\\" fxLayoutGap=\\\"15px\\\">\\n        <div class=\\\"upload\\\" *ngIf=\\\"!this.noFile\\\" [class.over]=\\\"over\\\" (click)=\\\"openFile()\\\" (drop)=\\\"dropFile($event); over = false\\\" (dragover)=\\\"$event.preventDefault()\\\" (dragenter)=\\\"over = true\\\" (dragleave)=\\\"over = false\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\n            <mat-label>Ajouter une image</mat-label>\\n            <input (change)='addFile($event)' #fileinput type=\\\"file\\\" fxHide=\\\"true\\\" />\\n            <mat-icon> <span class=\\\"material-icons-outlined\\\">\\n              file_download\\n              </span></mat-icon>\\n        </div>\\n        <div class=\\\"file\\\" fxLayout='column' fxLayoutAlign=\\\"center center\\\">\\n            <div class=\\\"fileUpload\\\" *ngFor='let fileHolder of (filesHolder$ | async ); let i = index' fxLayout='row' fxLayoutAlign=\\\"space-between center\\\">\\n                <div class=\\\"fileName\\\" fxLayoutAlign=\\\"space-arround center\\\" fxLayout='row'>\\n                    <span fxFill>{{ fileHolder.file.name }}</span>\\n                    <div fxLayout='row' *ngIf='fileHolder.progress$ | async ; let progress '>\\n                        <span>{{ progress }}%</span>\\n                        <mat-progress-bar style=\\\" width:200px \\\" mode=\\\"determinate\\\" [value]='progress'>\\n                        </mat-progress-bar>\\n                    </div>\\n                </div>\\n                <mat-icon><span class=\\\"material-icons\\\" (click)='deleteFile(i)'>clear</span></mat-icon>\\n\\n            </div>\\n        </div>\\n\\n    </div>\\n</div>\";","import { CoreModule } from 'src/shared/modules/core.module';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app.routing';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    CoreModule,\n    BrowserModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n@Component({\n  selector: 'app-parcour',\n  templateUrl: './parcour.component.html',\n  styleUrls: ['./parcour.component.sass']\n})\nexport class ParcourComponent implements OnInit {\n\n\n  constructor() {}\n\n  ngOnInit(): void {\n  }\n\n}\n","export default \"<section fxLayoutAlign='center center'>\\n    <form [formGroup]='formationForm'>\\n        <mat-card style='min-width: 500px; max-width: 600px;'>\\n            <mat-card-header>\\n                <mat-card-title>Nouvelle Formation</mat-card-title>\\n                <mat-card-subtitle>{{ id }}</mat-card-subtitle>\\n            </mat-card-header>\\n            <!-- INTIUTLE -->\\n            <mat-card-content>\\n                <div fxLayout='column'>\\n                    <mat-form-field appearance='fill'>\\n                        <mat-label>Formation</mat-label>\\n                        <input matInput type=\\\"text\\\" formControlName='nomFormation' placeholder=\\\"Nom de la formation\\\">\\n                        <mat-error *ngIf=\\\"\\\"></mat-error>\\n                    </mat-form-field>\\n                    <mat-form-field appearance='fill'>\\n                        <mat-label>Option de la Formation</mat-label>\\n                        <input matInput type=\\\"text\\\" placeholder=\\\"option\\\" formControlName='option'>\\n                        <mat-error *ngIf=\\\"\\\"></mat-error>\\n                    </mat-form-field>\\n                </div>\\n                <!-- IMAGE -->\\n                <div fxLayout='column'>\\n                    <app-upload-image-form></app-upload-image-form>\\n                    <mat-form-field appearance='fill'>\\n                        <mat-label>Description Image</mat-label>\\n                        <input matInput type=\\\"text\\\" formControlName='alt' placeholder='alt'>\\n                        <mat-error *ngIf=\\\"\\\"></mat-error>\\n                    </mat-form-field>\\n                </div>\\n                <!-- LOCALISATION -->\\n                <div fxLayout='column'>\\n                    <mat-form-field appearance='fill'>\\n                        <mat-label>Lieu</mat-label>\\n                        <input type=\\\"text\\\" matInput formControlName='lieu' placeholder=\\\"Departement\\\">\\n                        <mat-error *ngIf=\\\"\\\"></mat-error>\\n                    </mat-form-field>\\n                    <mat-form-field appearance='fill'>\\n                        <mat-label>Adresse</mat-label>\\n                        <input type=\\\"text\\\" matInput formControlName='adresse' placeholder=\\\"lieu\\\">\\n                        <mat-error *ngIf=\\\"\\\"></mat-error>\\n                    </mat-form-field>\\n                </div>\\n                <!-- DATE -->\\n                <div fxLayout='column'>\\n                    <mat-form-field appearance='fill'>\\n                        <mat-label>Date d'entrée</mat-label>\\n                        <input matInput [matDatepicker]='picker' formControlName='dateEntree'>\\n                        <mat-datepicker-toggle matSuffix [for]='picker'></mat-datepicker-toggle>\\n                        <mat-datepicker #picker></mat-datepicker>\\n                    </mat-form-field>\\n                    <mat-form-field appearance='fill'>\\n                        <mat-label>Date de sortie</mat-label>\\n                        <input matInput [matDatepicker]='pickerSortie' formControlName='dateSortie'>\\n                        <mat-datepicker-toggle matSuffix [for]='pickerSortie'></mat-datepicker-toggle>\\n                        <mat-datepicker #pickerSortie></mat-datepicker>\\n                    </mat-form-field>\\n                </div>\\n                <!-- COMPLEMENT -->\\n                <div fxLayout='column'>\\n                    <mat-form-field appearance='fill'>\\n                        <mat-label>Contenu de la formation</mat-label>\\n                        <textarea matInput placeholder=\\\"De quoi est fait la formation\\\" formControlName='contenu'></textarea>\\n                        <mat-error *ngIf=\\\"\\\"></mat-error>\\n                    </mat-form-field>\\n\\n                    <div formArrayName='liste' fxLayout='column'>\\n                        <button mat-raised-button (click)='addAxeListe()'>Ajouter un Objectif</button>\\n                        <div *ngFor='let axe of liste.controls; let i = index' fxLayout='row'>\\n                            <mat-form-field appearance='fill'>\\n                                <mat-label>Les points de formation </mat-label>\\n                                <input [formControlName]='i' type='text' matInput placeholder=\\\"Les différents axes\\\" />\\n                                <mat-error *ngIf=\\\"\\\"></mat-error>\\n                            </mat-form-field>\\n                            <button mat-raised-button (click)=\\\"deleteAxe(i)\\\">-</button>\\n                        </div>\\n                    </div>\\n                    <mat-form-field appearance='fill'>\\n                        <mat-label>Lien vers le site </mat-label>\\n                        <input type='text' matInput placeholder=\\\"Liens\\\" formControlName='lien' />\\n                        <mat-error *ngIf=\\\"\\\"></mat-error>\\n                    </mat-form-field>\\n                </div>\\n            </mat-card-content>\\n            <mat-card-actions align=\\\"start\\\">\\n                <button *ngIf='this.id' mat-raised-button (click)=\\\"onModify()\\\">modifier\\n                </button>\\n                <button *ngIf='!this.id' mat-raised-button (click)=\\\"onSaveFormation()\\\">Enregistrer</button>\\n                <button mat-raised-button (click)=\\\"retour()\\\">Annuler</button>\\n            </mat-card-actions>\\n            <mat-card-footer>\\n            </mat-card-footer>\\n        </mat-card>\\n    </form>\\n</section>\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AuthGuard } from 'src/shared/auth.guard';\n\nimport { SInscrireComponent } from './components/auth/s-inscrire/s-inscrire.component';\nimport { SeConnecterComponent } from './components/auth/se-connecter/se-connecter.component';\nimport { AcceuilComponent } from './pages/page-container/acceuil/acceuil.component';\nimport { ContactComponent } from './pages/page-container/contact/contact.component';\nimport { PageContainerComponent } from './pages/page-container/page-container.component';\nimport { ExperienceFormComponent } from './pages/page-container/parcour/experiences/experience-form/experience-form.component';\nimport { ExperienceComponent } from './pages/page-container/parcour/experiences/experience/experience.component';\nimport { FormationFormComponent } from './pages/page-container/parcour/formations/formation-form/formation-form.component';\nimport { FormationComponent } from './pages/page-container/parcour/formations/formation/formation.component';\nimport { ParcourComponent } from './pages/page-container/parcour/parcour.component';\n\nconst routes: Routes = [\n\n  { path: 'acceuil', component: AcceuilComponent},\n  { path: 'seConnecter', component: SeConnecterComponent},\n  { path: 'sInscrire', component: SInscrireComponent},\n\n  { path: 'parcour', component: ParcourComponent},\n\n  { path: 'formation', component: FormationComponent},\n  { path: 'formation/:_id',\n    canActivate:[AuthGuard],\n    component: FormationFormComponent},\n  { path: 'formationForm',\n    canActivate:[AuthGuard],\n    component: FormationFormComponent},\n\n  { path: 'experience', component: ExperienceComponent},\n  { path: 'experienceForm',\n      canActivate:[AuthGuard],\n      component:ExperienceFormComponent},\n\n  { path: 'contact', component: ContactComponent},\n  { path: '', redirectTo: '/', pathMatch: 'full' },\n  { path: '**', component: PageContainerComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-acceuil',\n  templateUrl: './acceuil.component.html',\n  styleUrls: ['./acceuil.component.sass']\n})\nexport class AcceuilComponent implements OnInit {\n\n  age: any;\n  dateDeNaissance: Date = new Date(1981,15,11);\n\n  constructor() {\n    const essai = (new Date().getTime());\n    this.age = ((essai - this.dateDeNaissance.getTime())/31536000000).toFixed(0);\n   }\n\n  ngOnInit(): void {\n  }\n  Age(dateDeNaissance) {\n    dateDeNaissance = new Date(dateDeNaissance);\n    return new Number((new Date().getTime() - dateDeNaissance.getTime()) / 31536000000).toFixed(0);\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJmb3JtYXRpb24uY29tcG9uZW50LnNhc3MifQ== */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJleHBlcmllbmNlLWZvcm0uY29tcG9uZW50LnNhc3MifQ== */\";","import { UsersService } from './../../../../shared/services/users.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Validators, FormGroup, FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'app-s-inscrire',\n  templateUrl: './s-inscrire.component.html',\n  styleUrls: ['./s-inscrire.component.sass']\n})\nexport class SInscrireComponent implements OnInit {\n\n public form: FormGroup;\n public error: string;\n\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private usersService: UsersService\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.initForm();\n  }\n\n  initForm(): void {\n    this.form = this.fb.group({\n      pseudo:['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(8)]],\n      // passwordConfirm: ['', Validators.required]\n    });\n\n  }\n\n  // tslint:disable-next-line: typedef\n  onSubmit(){\n    this.usersService.createUser(this.form.value).subscribe((response)=>{\n      console.log(response);\n      this.router.navigate(['/seConnecter']);\n    },\n    err => {\n      this.error = err;\n    });;\n  }\n\n  goSeConnecter(){\n    this.router.navigate(['/seConnecter']);\n  }\n\n  // GESTION DES ERREURS\n// tslint:disable-next-line: typedef\nerrorMail(){\n  if (this.form.get('email').hasError('email')){\n    return 'le mail n\\'est pas au bon format';\n  }\n}\n\nerrorPassword(){\n  if ( this.form.get('password').hasError('minlength')){\n    return 'le mot de passe doit contenir au moins 8 caractéres';\n  }\n}\n\nerrorPasswordConfirm(){\n\n  }\n  }\n","export default \"<section id='acceuil'>\\n    <mat-card fxLayoutAlign='center center' fxLayout='column'>\\n        <mat-card-header>\\n            <mat-card-title>Mes Infos</mat-card-title>\\n            <mat-card-subtitle>Virgil MINGOT</mat-card-subtitle>\\n        </mat-card-header>\\n        <!-- <img matCardImage src=\\\"Card wide image source\\\"> -->\\n        <mat-card-content fxLayout='column'>\\n            <p fxLayoutAlign='start center'><span class=\\\"material-icons\\\">event</span> {{ this.age }} ans</p>\\n            <p fxLayoutAlign='start center'><span class=\\\"material-icons\\\">\\n              phone\\n              </span> +33 6 18 83 28 30</p>\\n            <p fxLayoutAlign='start center'><span class=\\\"material-icons\\\">\\n              alternate_email\\n              </span> mingot.virgil@gmail.com</p>\\n            <p fxLayoutAlign='start center'><span class=\\\"material-icons\\\">\\n              location_on\\n              </span> 24000 PERIGUEUX</p>\\n            <p fxLayoutAlign='start center' [routerLink]=\\\"['/portfolio']\\\"> Portfolio </p>\\n        </mat-card-content>\\n        <mat-card-content fxLayout='row' fxLayoutGap='12px'>\\n            <a href=\\\"https://www.facebook.com/vivi244\\\"><span><img src=\\\"../../../../assets/images/facebook.png\\\" alt=\\\"logoFacebook\\\" matTooltip='logo realiser par Freepik https://www.freepik.com/'> </span></a>\\n            <a href=\\\"https://twitter.com/DjillGlobe\\\"><span><img src=\\\"../../../../assets/images/twitter.png\\\" alt=\\\"logotwitter\\\" matTooltip='logo realiser par Freepik https://www.freepik.com/'> </span></a>\\n            <a href=\\\"https://www.linkedin.com/in/virgil-mingot/\\\"><span><img src=\\\"../../../../assets/images/logo-linkedin.png\\\" alt=\\\"logoLinkedin\\\" matTooltip='logo realiser par Freepik https://www.freepik.com/'> </span></a>\\n            <a href=\\\"https://www.instagram.com/sph3rik/?hl=fr\\\"><span><img src=\\\"../../../../assets/images/instagram.png\\\" alt=\\\"logoInstagramm\\\" matTooltip='logo realiser par Freepik https://www.freepik.com/'> </span></a>\\n        </mat-card-content>\\n    </mat-card>\\n</section>\\n<section>\\n    <mat-card fxLayoutAlign='center center' fxLayout='column'>\\n        <mat-card-header>\\n            <mat-card-title>A propos de moi</mat-card-title>\\n            <mat-card-subtitle></mat-card-subtitle>\\n        </mat-card-header>\\n        <!-- <img matCardImage src=\\\"Card wide image source\\\"> -->\\n        <mat-card-content fxLayout='column'>\\n            <p><span>A</span>De formation spécialisée en produits forestiers, j’ai évolué dans <strong>différents secteurs d’activités</strong> ce qui ma permis d’acquérir de nombreuses compétences et une <strong>expérience professionnelle diversifiée</strong>. Après  plus\\n                de 10 ans d’activité dans le domaine du commerce j’ai fait le choix d’une reconversion professionnelle dans le domaine <strong>« digital »</strong> en tant que développeur Web.   Après 6 mois  d’une formation intensive j’ai obtenu mon\\n                diplôme , formation qui  m’a permis de maîtriser le codage des différents langages informatiques et l’utilisation des outils nécessaire au développeur Web.<br> Pour la partie front-End <br><strong> - HTML <br>- CSS <br>- JavaScript </strong>                <br><br>Pour la partie Back-End<strong><br>- NodeJS <br>- Express -<br>-   MongoDB </strong><br></p>\\n        </mat-card-content>\\n    </mat-card>\\n</section>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjb250YWN0LmNvbXBvbmVudC5zYXNzIn0= */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzZS1jb25uZWN0ZXIuY29tcG9uZW50LnNhc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.sass']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","export default \"<section>\\n    <div>\\n        <h3 fxLayoutAlign='center center'> Formation</h3>\\n        <button mat-raised-button *ngIf='this.userSession.isAuth' routerLink='/formationForm'>Ajouter une formation</button>\\n    </div>\\n    <div fxLayout='row wrap' fxLayoutAlign='center start'>\\n        <mat-card *ngFor='let formation of parcourTab; let i = index'>\\n            <div>\\n                <button mat-raised-button *ngIf='this.userSession.isAuth' (click)=\\\"deleteFormation(formation._id)\\\">Supprimer</button>\\n                <button mat-raised-button *ngIf='this.userSession.isAuth' [routerLink]=\\\"['/formation',formation._id]\\\">Modifier</button>\\n                <p>{{ formation._id }}</p>\\n            </div>\\n            <mat-card-header>\\n                <mat-card-title>{{ formation.nomFormation }} - {{ formation.option }}</mat-card-title>\\n                <mat-card-subtitle>\\n                    {{ formation.lieu }} <br> {{ formation.adresse }}\\n                </mat-card-subtitle>\\n            </mat-card-header>\\n            <img class='imgBg' matCardImage src=\\\"{{ formation.image }}\\\" alt='{{formation.alt}}'>\\n            <mat-card-content>\\n                <div fxLayout='row' fxLayoutAlign='space-around center'>\\n                    <p>Date d'entrée : {{ formation.dateEntree | date:'MM/y'}}</p>\\n                    <p>Date de Sortie : {{ formation.dateSortie | date:'MM/y'}}</p>\\n                </div>\\n            </mat-card-content>\\n            <mat-card-content>\\n                <div>\\n                    <p> Contennu de la formation : </p>\\n                    <p> {{ formation.contenu}}</p>\\n                    <mat-list dense>\\n                        <mat-list-item *ngFor=\\\"let item of formation.liste\\\">\\n                            {{ item }}\\n                        </mat-list-item>\\n                    </mat-list>\\n                </div>\\n            </mat-card-content>\\n            <mat-card-actions>\\n                <a href=\\\"{{ formation.lien}}\\\" target='blank'><button mat-raised-button> En savoir plus</button></a>\\n            </mat-card-actions>\\n        </mat-card>\\n    </div>\\n</section>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJmb290ZXIuY29tcG9uZW50LnNhc3MifQ== */\";","import { Observable } from 'rxjs';\nimport { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot } from \"@angular/router\";\nimport { UsersService } from \"./services/users.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AuthGuard implements CanActivate{\n\n  constructor(\n    private userService: UsersService\n  ){}\n\n  canActivate(\n    route:ActivatedRouteSnapshot,\n    state:RouterStateSnapshot\n    ): boolean {\n      return this.userService.idSession$.value.isAuth\n    }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJmb3JtYXRpb24tZm9ybS5jb21wb25lbnQuc2FzcyJ9 */\";","import { Formation } from 'src/shared/modeles/formation.interface';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\nimport { finalize } from 'rxjs/operators'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ParcourService  {\n\n  formationTab: Formation [] = [];\n  formationTab$: BehaviorSubject<Formation[]> = new BehaviorSubject([]);\n  formation: Formation;\n\n  constructor(\n    private http: HttpClient,\n  ) { }\n\n  emettreLesFormationsRecuperer(){\n    this.formationTab$.next(this.formationTab);\n  }\n  getFormation(index: number){\n    console.log(index);\n    return this.formationTab$.value[index];\n  }\n\n  createNewFormation(newFormation: Formation){\n    this.formationTab.push(newFormation);\n    this.saveFormations(newFormation);\n    this.emettreLesFormationsRecuperer();\n  }\n\n  // Queries\n  saveFormations(formation: Formation){\n    this.http.post<Formation>('/api/formations',formation).subscribe((formation)=>{});\n  }\n\n  updateFormation(formation:Formation, id: String){\n    this.http.post<Formation>('/api/formations/update/'+ id, formation).subscribe((id)=> {});\n  }\n\n  recupFormations(){\n    this.http.get<Formation[]>('api/formations')\n      .subscribe((formations: Formation[])=> {\n      this.formationTab = formations;\n      this.emettreLesFormationsRecuperer();\n    });\n  }\n\n  supprimerUneFormation(id: String){\n    this.http.delete('api/formations/' + id ).subscribe(()=> {\n      ((formation: Formation[] ) => {\n        this.formationTab = formation;\n      })\n    })\n    this.recupFormations();\n    this.emettreLesFormationsRecuperer();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-experience-form',\n  templateUrl: './experience-form.component.html',\n  styleUrls: ['./experience-form.component.sass']\n})\nexport class ExperienceFormComponent implements OnInit {\n\n  experienceForm: FormGroup;\n\n  typeContrat: string[];\n\n  constructor(\n    private fb: FormBuilder,\n    private router: Router\n  ) {\n    this.typeContrat = [\n      'CDD',\n      'CDI',\n      'Contrat d\\'apprentissage',\n      'Contrat de Professionnalissation',\n      'Contrat Unique d\\'insertion'\n    ]\n\n  }\n\n  ngOnInit(): void {\n    this.initFormExperience();\n  }\n\n  initFormExperience(){\n    this.experienceForm = this.fb.group({\n      dateEntree: [null, Validators.required],\n      dateSortie: [null, Validators.required],\n      image: [null, Validators.required],\n      alt: [null, Validators.required],\n      typeContrat: [null, Validators.required],\n      enseigne: [null, Validators.required],\n      lien: [null, Validators.required],\n      lieu: [null, Validators.required],\n      fonction: [null, Validators.required]\n    })\n  }\n\n  onSaveExperience(){\n\n  }\n  envoyer(e){\n\n  }\n\n  retour(){\n    this.router.navigate(['experience'])\n  }\n}\n","import { Observable } from 'rxjs';\nimport { FormArray, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\n\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\nimport { Formation } from 'src/shared/modeles/formation.interface';\nimport { ParcourService } from 'src/shared/services/parcour.service';\n\n@Component({\n  selector: 'app-formation-form',\n  templateUrl: './formation-form.component.html',\n  styleUrls: ['./formation-form.component.sass']\n})\nexport class FormationFormComponent implements OnInit {\n\n  public id: string;\n  public formation: Formation;\n  public formationForm: FormGroup;\n\n  constructor(\n    private fb:FormBuilder,\n    private router: Router,\n    private parcourService: ParcourService,\n    private activatedRoute: ActivatedRoute\n  ) {}\n\n    get liste(){\n      return this.formationForm.get('liste') as FormArray;\n    }\n\n  ngOnInit(): void {\n        this.activatedRoute.paramMap.subscribe((paramMap: ParamMap) => {\n          this.id = paramMap.get('_id');\n          // const index = paramMap.get('index');\n          console.log(this.id);\n          // console.log(index);\n          if(this.id){\n            this.formation = this.parcourService.getFormation(Number(this.id));\n            console.log('tu rentre bien dans la condition');\n\n          }\n          this.initForm(this.formation);\n        });\n  }\n\n  initForm(\n    formation: Formation = {\n    nomFormation:'',\n    option:'',\n    image: null,\n    alt:'',\n    lieu:'',\n    adresse:'',\n    dateEntree: new Date,\n    dateSortie: new Date,\n    contenu:'',\n    liste:[],\n    lien:''\n  }\n  ): void {\n    this.formationForm = this.fb.group({\n      nomFormation: [formation.nomFormation, Validators.required],\n      option: [formation.option, Validators.minLength(3)],\n      image: [formation.image],\n      alt: [formation.alt, Validators.minLength(3)],\n      lieu: [formation.lieu, Validators.required],\n      adresse: [formation.adresse, Validators.minLength(3)],\n      dateEntree: [formation.dateEntree, Validators.required],\n      dateSortie: [formation.dateSortie, Validators.required],\n      contenu: [formation.contenu, Validators.required],\n      liste: this.fb.array(formation.liste),\n      lien: [formation.lien]\n    });\n  }\n\n  addAxeListe(){\n    this.liste.push(new FormControl(''));\n  }\n  deleteAxe(i){\n    this.liste.removeAt(i)\n  }\n\n  // ACTION SUR LE SERVICE\n  onSaveFormation(){\n  this.parcourService.createNewFormation(this.formationForm.value);\n\n    // this.router.navigate(['parcour']);\n  }\n\n  // onModify(){\n  //   this.parcourService.updateFormation(this.formationForm.value, this.id);\n  //   this.router.navigate(['parcour']);\n  // }\n\n  retour(){\n    this.router.navigate(['parcour']);\n  }\n\n}\n","export default \"<header fxLayout='column' fxLayoutAlign='center center'>\\n    <div class='logoTitreMenuContainer' fxLayout='row' fxLayoutAlign=\\\"space-between center\\\">\\n        <div class='logoTitre'>\\n            <img src=\\\"./../../../assets/images/logo_sph3rik.png\\\" alt=\\\"logo\\\" fxFlex='90px'>\\n            <h1 fxLayoutAlign='center center'>Sph2rik</h1>\\n        </div>\\n        <div fxLayout='column'>\\n            <div class='menu'>\\n                <button mat-raised-button *ngIf='!this.userSession.isAuth' [matMenuTriggerFor]=\\\"menuRef\\\">Se Connecter</button>\\n                <mat-menu #menuRef=\\\"matMenu\\\">\\n                    <button mat-menu-item *ngFor='let menu of menuConnect' [routerLink]='menu.lien'>{{ menu.titre }}</button>\\n                </mat-menu>\\n                <button mat-raised-button *ngIf='this.userSession.isAuth' routerLink='acceuil' (click)='loggout()'>Se Deconnecter</button>\\n            </div>\\n            <nav mat-tab-nav-bar fxLayoutAlign='end end' fxFlex='1 0 auto'>\\n                <a mat-tab-link *ngFor=\\\"let link of listeMenu\\\" [routerLink]='link.lien' (click)=\\\"activeLink = link.lien\\\" [active]='activeLink == link.lien'> {{ link.lien }}</a>\\n            </nav>\\n        </div>\\n    </div>\\n</header>\";","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";","import { NgModule } from '@angular/core';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatListModule } from '@angular/material/list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatSidenavModule } from '@angular/material/sidenav';\n\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatDividerModule } from '@angular/material/divider';\n\n\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { NgxMatFileInputModule } from '@angular-material-components/file-input';\n\n\nconst MATERIAL = [\n  MatAutocompleteModule,\n  MatBadgeModule,\n  MatBottomSheetModule,\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatCardModule,\n  MatListModule,\n  MatIconModule,\n  MatTabsModule,\n  MatSidenavModule,\n  MatFormFieldModule,\n  MatMenuModule,\n  MatInputModule,\n  MatExpansionModule,\n  MatSelectModule,\n  MatCheckboxModule,\n  MatDatepickerModule,\n  MatNativeDateModule,\n  MatProgressBarModule,\n  MatTooltipModule,\n  MatDividerModule,\n  NgxMatFileInputModule\n];\n\n@NgModule({\n  declarations: [],\n  imports: [MATERIAL],\n  exports: [MATERIAL]\n})\nexport class MaterialModule { }\n"],"sourceRoot":"webpack:///"}