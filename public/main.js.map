{"version":3,"sources":["./src/app/pages/page-container/parcour/experiences/experience/experience.component.ts","./src/app/pages/page-container/parcour/formations/upload-image-form/upload-image-form.component.ts","./src/app/components/auth/se-connecter/se-connecter.component.html","./src/app/pages/page-container/page-container.component.html","./src/app/components/header/header.component.ts","./src/app/pages/page-container/parcour/parcour.component.html","./src/app/pages/page-container/portfolio/portfolio.component.ts","./src/app/pages/page-container/parcour/experiences/experience/experience.component.sass","./src/app/components/navbar/navbar.component.sass","./src/app/pages/page-container/page-container.component.ts","./src/app/pages/page-container/parcour/parcour.component.sass","./src/app/components/googleApi/google-places/google-places.component.html","./src/app/components/header/header.component.sass","./src/shared/services/upload-file.service.ts","./src/environments/environment.ts","./src/app/pages/page-container/contact/contact.component.ts","./src/app/pages/page-container/parcour/formations/formation/formation.component.ts","./src/shared/services/fonction-general.service.ts","./src/app/components/auth/se-connecter/se-connecter.component.ts","./src/app/pages/page-container/portfolio/portfolio.component.html","./src/shared/modules/core.module.ts","./src/app/pages/page-container/parcour/experiences/experience-form/experience-form.component.html","./src/app/pages/page-container/parcour/formations/upload-image-form/upload-image-form.component.sass","./src/app/pages/page-container/acceuil/acceuil.component.sass","./src/app/pages/page-container/contact/contact.component.html","./src/app/components/footer/footer.component.ts","./src/app/app.component.sass","./src/app/pages/page-container/page-container.component.sass","./src/shared/services/users.service.ts","./src/app/components/navbar/navbar.component.html","./src/app/app.component.ts","./src/app/pages/page-container/portfolio/portfolio-form/portfolio-form.component.html","./src/app/components/auth/s-inscrire/s-inscrire.component.html","./src/app/pages/page-container/parcour/experiences/experience/experience.component.html","./src/app/app.component.html","./src/app/components/footer/footer.component.html","./src/app/components/auth/s-inscrire/s-inscrire.component.sass","./src/shared/modules/layout.module.ts","./src/app/pages/page-container/parcour/formations/upload-image-form/upload-image-form.component.html","./src/app/app.module.ts","./src/app/pages/page-container/portfolio/portfolio.component.sass","./src/app/pages/page-container/parcour/parcour.component.ts","./src/app/pages/page-container/parcour/formations/formation-form/formation-form.component.html","./src/app/app.routing.ts","./src/shared/services/portfolio.service.ts","./src/app/pages/page-container/acceuil/acceuil.component.ts","./src/app/pages/page-container/parcour/formations/formation/formation.component.sass","./src/app/pages/page-container/parcour/experiences/experience-form/experience-form.component.sass","./src/app/components/auth/s-inscrire/s-inscrire.component.ts","./src/app/pages/page-container/acceuil/acceuil.component.html","./src/app/components/alert/alert-suppr-img/alert-suppr-img.component.sass","./src/app/pages/page-container/contact/contact.component.sass","./src/app/components/auth/se-connecter/se-connecter.component.sass","./src/app/components/navbar/navbar.component.ts","./src/app/pages/page-container/parcour/formations/formation/formation.component.html","./src/app/components/footer/footer.component.sass","./src/app/components/alert/alert-suppr-img/alert-suppr-img.component.ts","./src/app/components/googleApi/google-places/google-places.component.sass","./src/shared/auth.guard.ts","./src/app/components/googleApi/google-places/google-places.component.ts","./src/app/pages/page-container/parcour/formations/formation-form/formation-form.component.sass","./src/app/pages/page-container/portfolio/portfolio-form/portfolio-form.component.sass","./src/shared/services/parcour.service.ts","./src/app/pages/page-container/portfolio/portfolio-form/portfolio-form.component.ts","./src/app/components/alert/alert-suppr-img/alert-suppr-img.component.html","./src/app/pages/page-container/parcour/experiences/experience-form/experience-form.component.ts","./src/app/pages/page-container/parcour/formations/formation-form/formation-form.component.ts","./src/app/components/header/header.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object","./src/shared/modules/material.module.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { UploadFileService } from 'src/shared/services/upload-file.service';\nimport { ParcourService } from 'src/shared/services/parcour.service';\nimport { Subscription } from 'rxjs';\nimport { Component, OnInit } from '@angular/core';\nimport { Experience } from 'src/shared/modeles/experience.interface';\nimport { UserSession } from 'src/shared/modeles/userSession.interface';\nimport { UsersService } from 'src/shared/services/users.service';\n\n@Component({\n  selector: 'app-experience',\n  templateUrl: './experience.component.html',\n  styleUrls: ['./experience.component.sass']\n})\nexport class ExperienceComponent implements OnInit {\n\n  subscription: Subscription;\n  userSession: UserSession;\n\n  tableaurecupExperienceSubscription: Subscription;\n  experienceTab: Experience[];\n\n  constructor(\n    private userService: UsersService,\n    private ParcourService: ParcourService,\n    private uploadService: UploadFileService\n  ) {\n\n  }\n\n  ngOnInit(): void {\n    this.subscription = this.userService.idSession$.subscribe((usersession: UserSession)=> {\n      this.userSession = usersession;\n    });\n\n    this.tableaurecupExperienceSubscription = this.ParcourService.experienceTab$.subscribe(\n      (experienceTab: Experience[]) =>{\n        this.experienceTab = experienceTab;\n      });\n\n    this.ParcourService.recupExperience();\n      console.log(this.experienceTab);\n\n  }\n\n  editExperience(experience: Experience){\n    this.ParcourService.experience = experience;\n  }\n\n  deleteExperience(id: String){\n    this.ParcourService.supprimerUneExperience(id);\n  }\n\n  deleteLinkImage(experienceImage: String){\n    if(experienceImage !== null){\n    this.uploadService.removeFileOfCard(experienceImage.split('/')[3]);\n    }\n  }\n\n  ngOnDestroy(): void {\n   this.subscription.unsubscribe();\n   this.tableaurecupExperienceSubscription.unsubscribe();\n  }\n\n  tempsTravailler(dateSortie: Date, dateEntree: Date){\n    const minute = 1000*60;\n    const heure = minute*60;\n    const journee = heure*24;\n    const annee = 365*journee;\n    const moi = annee/12;\n\n    // Ratio 1 mois\n    const ratio = 1/12;\n\n    const dateFin = new Date(dateSortie).getTime();\n    const dateDebut = new Date(dateEntree).getTime();\n    const nbAnnee = parseInt(new Number((dateFin - dateDebut)/(annee)).toPrecision(2).split('.')[0]);\n    const mois1 = (parseInt((((dateFin - dateDebut)/ (moi))/12).toFixed(5).split('.')[1]))/100000;\n    const nbMois =  (mois1/ratio).toFixed(0);\n\n    if ( nbAnnee === 0 ){\n      return nbMois + ' mois';\n    } else if ( mois1 === 0 ){\n      return nbAnnee + ' ans';\n    } else {\n      return nbAnnee + ' ans et ' + nbMois + ' mois';\n    }\n  }\n}\n","\nimport { Component, ViewChild, ElementRef, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { UploadFileService } from 'src/shared/services/upload-file.service';\n\n@Component({\n    selector: 'app-upload-image-form',\n    templateUrl: './upload-image-form.component.html',\n    styleUrls: ['./upload-image-form.component.sass']\n  })\n  export class UploadImageFormComponent implements OnInit {\n\n    essaifile: File;\n    noFile: number;\n\n    public filesHolder$: Observable<{\n      file: File,\n      progress$: Observable<number>\n    }[]> = this.upLoadFileService.filesHolder$.asObservable();\n    @ViewChild('fileinput', { static: false }) inputRef: ElementRef;\n\n  constructor(\n    private upLoadFileService: UploadFileService,\n  ) {}\n\n  ngOnInit(): void {\n  }\n\n  openFile() {\n    this.inputRef.nativeElement.click();\n  }\n\n  addFile($event){\n    const file = $event.target.files;\n    this.upLoadFileService.addFile(file);\n    this.noFile = this.upLoadFileService.filesHolder$.value.length;\n  }\n\n  deleteFile(index){\n    this.upLoadFileService.removeFile(index);\n    this.noFile = this.upLoadFileService.filesHolder$.value.length;\n  }\n\n  dropFile($event){\n    console.log($event);\n\n    if($event.dataTransfer){\n      const file = $event.dataTransfer.files;\n      this.upLoadFileService.addFile(file)\n    }\n  }\n}\n\n\n\n","export default \"<section class='sectionSeConnecter' fxLayoutAlign='center center'>\\n    <div class='container'>\\n        <form [formGroup]='singinForm'>\\n            <mat-card class='matCardSeCo' fxFlex='column'>\\n                <div>\\n                    <mat-card-header>\\n                        <mat-card-title>\\n                            <h4>Se Connecter</h4>\\n                        </mat-card-title>\\n                    </mat-card-header>\\n                    <mat-card-content fxLayout='column'>\\n                        <mat-form-field>\\n                            <mat-label name='email'>Email</mat-label>\\n                            <input matInput type='email' formControlName='email' />\\n                            <mat-error *ngIf=\\\"\\\"></mat-error>\\n                        </mat-form-field>\\n                        <mat-form-field>\\n                            <mat-label name='password'>Mot de passe</mat-label>\\n                            <input matInput type='password' formControlName='password' />\\n                            <mat-error *ngIf=\\\"\\\"></mat-error>\\n                        </mat-form-field>\\n                        <!-- <button mat-raised-button (click)=\\\"goggleConnection()\\\"><span class=\\\"material-icons-outlined\\\">\\n                  g_translate\\n                  </span></button> -->\\n                    </mat-card-content>\\n                </div>\\n                <mat-card-actions align=\\\"start\\\" fxLayout='column' fxLayoutAlign='center center'>\\n                    <div fxLayout='row'>\\n                        <mat-error *ngIf='error'>{{ seconnecterErreur() }}</mat-error>\\n                        <button mat-raised-button [disabled]='this.singinForm.invalid' (click)='submit()'>Envoyer</button>\\n                    </div>\\n                    <div class='separator'></div>\\n                    <button mat-raised-button disabled (click)='goSInscrire()'>Je n'ai pas de compte </button>\\n                </mat-card-actions>\\n            </mat-card>\\n        </form>\\n    </div>\\n</section>\\n\";","export default \"<app-acceuil></app-acceuil>\";","import { Subscription } from 'rxjs';\nimport { UsersService } from './../../../shared/services/users.service';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserSession } from 'src/shared/modeles/userSession.interface';\nimport { FonctionGeneralService } from 'src/shared/services/fonction-general.service';\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.sass']\n})\nexport class HeaderComponent implements OnInit, OnDestroy {\n\n  listeMenu: any[];\n  activeLink: string;\n  menuConnect: any[];\n\n  subscription: Subscription;\n  userSession: UserSession;\n\n  constructor(\n    private router: Router,\n    private userService: UsersService,\n    private fGService: FonctionGeneralService\n    )\n  {\n    this.listeMenu = [\n      {\n        nom: 'Acceuil',\n        lien: 'acceuil',\n        fragment: 'acceuil'\n      },\n      {\n        nom: 'Parcour',\n        lien: 'parcour',\n        fragment: 'parcour'\n       },\n       {\n        nom: 'Portfolio',\n        lien: 'portfolio',\n        fragment: 'portfolio'\n      },\n      {\n        nom: 'Contact',\n        lien: 'contact',\n        fragment: 'contact'\n      }\n\n    ];\n    this.menuConnect = [\n      {\n       titre: 'Se connecter',\n       lien: 'seConnecter'\n      },\n      {\n        // titre: 's\\'inscrire',\n        // lien: 'sInscrire'\n      }\n   ];\n    this.activeLink = this.listeMenu[0];\n\n\n  }\n\n  ngOnInit(): void {\n    this.subscription = this.userService.idSession$.subscribe((userSession: UserSession)=> {\n      this.userSession = userSession;\n    })\n    this.fGService.addPosSticky(60);\n  }\n\n\n  loggout(){\n    this.userService.loggout().subscribe(()=>{\n      console.log('deconnexion reussi !');\n    },\n    err=>{\n      console.log('deconnexion reussi dans lerreur');\n      console.log(err)\n    });;\n  }\n\n  ngOnDestroy(): void {\n    if(this.subscription){this.subscription.unsubscribe();}\n  }\n}\n","export default \"<main id='parcour'>\\n    <app-formation></app-formation>\\n    <app-experience></app-experience>\\n</main>\";","import { UploadFileService } from './../../../../shared/services/upload-file.service';\nimport { PortfolioService } from './../../../../shared/services/portfolio.service';\nimport { Subscription } from 'rxjs';\nimport { UserSession } from './../../../../shared/modeles/userSession.interface';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { UsersService } from 'src/shared/services/users.service';\nimport { Portfolio } from 'src/shared/modeles/portfolio.interface';\n\n@Component({\n  selector: 'app-portfolio',\n  templateUrl: './portfolio.component.html',\n  styleUrls: ['./portfolio.component.sass']\n})\nexport class PortfolioComponent implements OnInit, OnDestroy {\n\n  public userSession: UserSession;\n  public userSub: Subscription;\n\n  public portfoliosub: Subscription;\n  public portfolioTab: Portfolio[];\n\n  constructor(\n    private userService: UsersService,\n    private portfolioService: PortfolioService,\n    private uploadFileService: UploadFileService\n  ) { }\n\n  ngOnInit(): void {\n    this.userSub = this.userService.idSession$.subscribe(\n      (userSession: UserSession)=>{\n        this.userSession = userSession;\n      }\n    );\n\n    this.portfoliosub = this.portfolioService.portFolioTab$.subscribe(\n      (portfolioTab: Portfolio[])=>{\n        this.portfolioTab = portfolioTab;\n      }\n    );\n\n    this.portfolioService.recupPortfolio();\n  }\n\n  editSite(site: Portfolio){\n    this.portfolioService.portfolio = site;\n  }\n\n  deleteUnSite(id: String){\n    this.portfolioService.deleteSite(id);\n  }\n\n  deleteImageLink(formation){\n    this.uploadFileService.removeFileOfCard(formation.split('/')[3]);\n  }\n\n  ngOnDestroy(){\n    this.userSub.unsubscribe();\n    this.portfoliosub.unsubscribe();\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJleHBlcmllbmNlLmNvbXBvbmVudC5zYXNzIn0= */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJuYXZiYXIuY29tcG9uZW50LnNhc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-container',\n  templateUrl: './page-container.component.html',\n  styleUrls: ['./page-container.component.sass']\n})\nexport class PageContainerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwYXJjb3VyLmNvbXBvbmVudC5zYXNzIn0= */\";","export default \"\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJoZWFkZXIuY29tcG9uZW50LnNhc3MifQ== */\";","import { HttpClient, HttpEvent, HttpEventType, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UploadFileService {\n\n  urlImg: string = '';\n  imgDefault: string = 'http://localhost:3000/Capture d’écran 2021-04-05 à 16.26.17.png'\n\n  public filesHolder$: BehaviorSubject<{\n    file: File,\n    progress$: Observable<number>\n  }[]> = new BehaviorSubject([]);\n  constructor(\n    private http: HttpClient,\n  ) { }\n\n  public addFile(files: []){\n    this.filesHolder$.next([\n      ...this.filesHolder$.value,\n       ...Array.from(files).map( (f: File) => {\n      const formData = new FormData();\n      formData.append('f', f);\n      const request = new HttpRequest('POST','/api/upload', formData, {\n        reportProgress: true\n      });\n      return {\n        file: f,\n        progress$: this.http.request(request).pipe(\n          map((event:HttpEvent<any>) => {\n            switch (event.type){\n              case HttpEventType.Sent:{\n                return 0;\n              }\n              case HttpEventType.UploadProgress:{\n                return Math.round(event.loaded / event.total * 100);\n              }\n              case HttpEventType.Response:{\n                return 100;\n              }\n              default: {\n                return 0;\n              }\n            }\n          })\n        )\n      };\n    })\n  ]);\n  }\n\n  public removeFile(index:number){\n    const files = this.filesHolder$.value.slice();\n    this.http.delete(`/api/upload/${files[index].file.name}`).subscribe();\n    files.splice(index, 1);\n    this.filesHolder$.next(files);\n  }\n\n  public removeFileOfCard(nom:string){\n    this.http.delete(`/api/upload/${nom}`).subscribe();\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.sass']\n})\nexport class ContactComponent implements OnInit {\n\n  public contactForm:FormGroup;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  submit(){\n\n  }\n\n}\n","import { UploadFileService } from 'src/shared/services/upload-file.service';\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { Formation } from 'src/shared/modeles/formation.interface';\nimport { UserSession } from 'src/shared/modeles/userSession.interface';\nimport { ParcourService } from 'src/shared/services/parcour.service';\nimport { UsersService } from 'src/shared/services/users.service';\n\n@Component({\n  selector: 'app-formation',\n  templateUrl: './formation.component.html',\n  styleUrls: ['./formation.component.sass']\n})\nexport class FormationComponent implements OnInit, OnDestroy {\n\n  tableauDeFormationSubscription: Subscription;\n  parcourTab: Formation[];\n\n  userSub: Subscription;\n  userSession: UserSession;\n\n  constructor(\n    private parcourService: ParcourService,\n    private userService: UsersService,\n    private uploadFileService: UploadFileService,\n  ) {}\n\n  ngOnInit(): void {\n    this.userSub = this.userService.idSession$.subscribe(\n      (userSession: UserSession) => {\n        this.userSession = userSession;\n    });\n\n    this.tableauDeFormationSubscription = this.parcourService.formationTab$.subscribe(\n      (formationTab: Formation[]) => {\n        this.parcourTab = formationTab;\n    });\n    this.parcourService.recupFormations();\n  }\n\n  editFormation(formation: Formation){\n    this.parcourService.formation = formation;\n  }\n\n  deleteFormation(id: String){\n    this.parcourService.supprimerUneFormation(id);\n  }\n\n  ngOnDestroy(): void {\n    this.tableauDeFormationSubscription.unsubscribe();\n    if(this.userSub){this.userSub.unsubscribe()};\n   }\n\n   deleteImageLink(formation){\n     this.uploadFileService.removeFileOfCard(formation.split('/')[3]);\n   }\n}\n\n\n// this.parcourTab = [\n    //   {\n    //     nomFormation: 'Developpeur web FullStack',\n    //     image: '../../../../assets/images/OC_Banner.png' ,\n    //     alt: 'imageOpen',\n    //     lieu: 'Telepresentiel',\n    //     dateEntree: new Date(' 01/04/2020 '),\n    //     dateSortie: new Date(' 01/10/2020 '),\n    //     contenu: ' Le developpeur full-stack peut gére a la fois des tâches back-end et front-ent, bien qu\\'il soit pas necesserement un expert dans l\\'un ou l\\'autre. ',\n    //     liste: [\n    //       'creer un backend de site',\n    //       'Utiliser des bibliothéques ou des framework frontaux',\n    //       'gerer le deploiements des application et placer les projets sur les serveur'\n    //     ],\n    //     lien: 'https://openclassrooms.com/fr/paths/185-developpeur-web'\n    //   },\n    //   {\n    //     nomFormation: 'BPA Conducteur d\\'engin',\n    //     image: '../../../../assets/images/OC_bazas.png',\n    //     alt: 'imageBazas',\n    //     lieu: 'EPLEFPA de Bazas',\n    //     dateEntree: new Date(' 01/04/2007 '),\n    //     dateSortie: new Date(' 01/10/207 '),\n    //     contenu: ' Le brevet Professionnel Option Travaux forestier permer d\\'aquérir des connaissances et des compétences professionnemmes en: ',\n    //     liste: [\n    //       'Réalisation de travaux forestiers',\n    //       'Mécanique et entretiens des équipements',\n    //       'Conduite d\\'engins forestiers',\n    //       'Connaissances scientifique et technique relative a la forêt',\n    //       'Organisation de chantiers forestiers'\n    //     ]\n    //   },\n    //   {\n    //     nomFormation: 'BTS Technico Commerciale',\n    //     option: 'Produit d\\'origine Forestier',\n    //     image: '../../../../assets/images/OC_meymac.png',\n    //     alt: 'imageBazas',\n    //     lieu: 'Lycée forestier Meymac',\n    //     adresse: 'Meymac(19)',\n    //     dateEntree: new Date(' 01/04/2001 '),\n    //     dateSortie: new Date(' 01/10/2004 '),\n    //     contenu: ' Formation a devienir des agents commerciaux spécialiser dans le domaines de la filiére forêt-bois',\n    //     liste: [\n    //       'Technique de marketing',\n    //       'Gestion de la relation client',\n    //       'De la négociation a la vente de solution technico commerciale',\n    //       'Laformation porte egalement sur la gestion cimmerciale, le suivides fournisseurs et des clients.'\n    //     ]\n    //   },\n    //   {\n    //     nomFormation: 'Baccalaureat Science et Technologie de l\\'Agronomie et de l\\'Environnement',\n    //     option: 'Aménagement du territoire',\n    //     image: '../../../../assets/images/OC_Charlesquentin.png',\n    //     alt: 'imageBanniere lycee chauny',\n    //     lieu: 'Lycée Robert chaumann',\n    //     adresse: 'Chauny(02)',\n    //     dateEntree: new Date(' 01/04/1999 '),\n    //     dateSortie: new Date(' 01/10/2001 '),\n    //     contenu: ' Formation permettant de maitriser les techinique de gestion et l\\'aménagement des milieux, qu\\'il soit artificielle ou naturelle.',\n    //     liste: [\n    //       'Analyser les aménagements existant',\n    //       'participer des des suivies d\\'épéces pour mieux appréhender la gestion des population naturelles',\n    //       'Réaliser des aménagements, de la conseption a la mise en oeuvre.',\n    //       'Découvrir les grands enjeux liées à l\\'amenagemet des espaces et a la gestion des éspéces.'\n    //     ]\n    //   },\n    // ];\n\n","import { Injectable, ViewChild } from '@angular/core';\nimport { GooglePlaceDirective } from 'ngx-google-places-autocomplete';\nimport { Address } from 'ngx-google-places-autocomplete/objects/address';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FonctionGeneralService {\n  /*GESTION DES EREEURS*/\n\n  /*DATE*/\n  public dateMax: Date;\n  public dateDeMaintenant: Date = new Date(Date.now());\n\n  /*GOOGLE API*/\n  public valueLieu = {\n    name:'',\n    cp: '',\n    dept:'',\n    lien:''\n  };\n  public addres;\n\n  @ViewChild('placeRef') placesRef: GooglePlaceDirective;\n\n  constructor() {\n  }\n  addPosSticky(position: number){\n    const sticky = document.getElementById('navi');\n    window.addEventListener('scroll',()=> {\n      if(scrollY >= position){\n        sticky.classList.add('navi');\n      }\n      if (scrollY < position){\n        sticky.classList.remove('navi');\n      }\n    });\n  }\n\n  /*GESTION DES ERREUR*/\n  nbcaract(nbCarac: number){\n    return  'au moins ' + nbCarac + ' caractére sont necessaire'\n  }\n\n  public messageErreur = {\n    required:'Ce champ doit etre rempli.',\n    minLenght: this.nbcaract,\n  }\n\n  /* DATE */\n\n  /*GOOGLE API*/\n  public handleAddressChange(address: Address) {\n    this.valueLieu.name = address.name;\n    this.valueLieu.lien = address.website;\n\n    for (let index = 0; index < address.address_components.length; index++) {\n      /*POUR LA RECHERCHE DU CODE POSTAL*/\n      if(address.address_components[index].types[0] === \"postal_code\"){\n        this.valueLieu.cp = ' (' + address.address_components[index].long_name.split('')[0] + address.address_components[index].long_name.split('')[1] + ')';\n      }\n      /*POUR LA RECHERCHE DU DEPT*/\n      if(address.address_components[index].types[0] === \"administrative_area_level_2\"){\n        this.valueLieu.dept = address.address_components[index].long_name;\n      }\n    }\n  }\n\n  afficheNomEcole(i: number){\n    if(this.valueLieu.name !== ''){\n      return 'Ecole : ' + this.valueLieu.name;\n    }else {\n      return 'Ecole n° : '+ i+1;\n    }\n  }\n}\n","import { Subscription } from 'rxjs';\nimport { UsersService } from './../../../../shared/services/users.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-se-connecter',\n  templateUrl: './se-connecter.component.html',\n  styleUrls: ['./se-connecter.component.sass']\n})\nexport class SeConnecterComponent implements OnInit {\n\n  singinForm: FormGroup;\n  error: string;\n\n  constructor(\n    private fb: FormBuilder,\n    private userService: UsersService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this.singinForm = this.fb.group({\n      email:['',Validators.required],\n      password:['',Validators.required]\n    })\n  }\n\n  submit(){\n    this.userService.signin(this.singinForm.value).subscribe(()=>{\n      console.log('la connexion cest bien deroule');\n      this.router.navigate(['acceuil']);\n      },\n      err => {\n        console.log('Apres soumission de la connection vous etes dans lerreur');\n        this.error = this.userService.error;\n      }\n    );\n  }\n\n  goSInscrire(){\n    this.router.navigate(['sInscrire']);\n  }\n\n  goggleConnection(){\n    this.userService.signinGoogle();\n  }\n\n  //Gestion des erreurs\n  seconnecterErreur(){\n    return this.error;\n  }\n}\n","export default \"<section class='sectionPortfolio' fxLayout='column' fxLayoutAlign='start center'>\\n    <div class='container'>\\n        <div class='titre' fxLayout='column' fxLayoutAlign='start center'>\\n            <h2>Les <span>B</span>asiques</h2>\\n            <!-- *ngIf='this.userSession.isAuth' -->\\n            <button mat-raised-button class='btn' routerLink='/portfolioForm'>Ajouter un site</button>\\n            <div fxLayout='row'>\\n                <p>Technologie Utilisée:</p>\\n                <p> <i class=\\\"fab fa-html5 mlr-10\\\"></i><i class=\\\"fab fa-css3-alt mlr-10\\\"></i></p>\\n            </div>\\n        </div>\\n        <div class='contentArticle' fxLayout='column' fxLayoutAlign='center center'>\\n            <article *ngFor='let site of portfolioTab; let i = index'>\\n                <mat-card fxLayout='column' class='p10'>\\n                    <div class='btnModifSuppr' fxLayout='row' fxLayoutAlign='space-evenly center'>\\n                        <button mat-raised-button class='btn' *ngIf='this.userSession.isAuth' (click)='editSite(site)' [routerLink]=\\\"['/portfolio', site._id]\\\">Modifier</button>\\n                        <button mat-raised-button class='btn' *ngIf='this.userSession.isAuth' (click)='deleteImageLink(site.image)' (click)='deleteUnSite(site._id)'>Supprimer</button>\\n                    </div>\\n                    <div fxLayout='column'>\\n                        <mat-card-content fxLayout='row' fxLayoutAlign='space-between'>\\n                            <div fxLayout='column' fxLayoutAlign='start stretch'>\\n                                <a href=\\\"{{ site.lienSite }}\\\" target='blanck' fxLayout='row' fxLayoutAlign=' center center'>\\n                                    <i class=\\\"fas fa-link mlr-10\\\"></i>\\n                                    <h3>{{ site.name }}</h3>\\n                                </a>\\n                                <p class='mlr-35 mtb-10'> {{ site.description }}</p>\\n                                <a href=\\\"{{ site.lienGit }}\\\" target='blanck' fxLayout='row' fxLayoutAlign='start flex-end' class='flex1'>\\n                                    <i class=\\\"fab fa-github  mlr-10\\\"></i>\\n                                    <h3>Github</h3>\\n                                </a>\\n                            </div>\\n                            <img matCardImage src=\\\"{{ site.image }}\\\" alt=\\\"{{ site.alt }}\\\">\\n                        </mat-card-content>\\n                    </div>\\n                </mat-card>\\n            </article>\\n        </div>\\n    </div>\\n</section>\";","import { GooglePlacesComponent } from 'src/app/components/googleApi/google-places/google-places.component';\nimport { GooglePlaceModule } from 'ngx-google-places-autocomplete';\nimport { PortfolioService } from './../services/portfolio.service';\nimport { AppRoutingModule } from './../../app/app.routing';\nimport { NgModule } from '@angular/core';\n\nimport { LayoutModule } from './layout.module';\n\nimport { FooterComponent } from 'src/app/components/footer/footer.component';\nimport { HeaderComponent } from 'src/app/components/header/header.component';\nimport { NavbarComponent } from 'src/app/components/navbar/navbar.component';\nimport { AcceuilComponent } from 'src/app/pages/page-container/acceuil/acceuil.component';\nimport { ContactComponent } from 'src/app/pages/page-container/contact/contact.component';\nimport { PageContainerComponent } from 'src/app/pages/page-container/page-container.component';\nimport { ParcourComponent } from 'src/app/pages/page-container/parcour/parcour.component';\nimport { SInscrireComponent } from 'src/app/components/auth/s-inscrire/s-inscrire.component';\nimport { SeConnecterComponent } from 'src/app/components/auth/se-connecter/se-connecter.component';\nimport { FormationComponent } from 'src/app/pages/page-container/parcour/formations/formation/formation.component';\nimport { ExperienceFormComponent } from 'src/app/pages/page-container/parcour/experiences/experience-form/experience-form.component';\nimport { ExperienceComponent } from 'src/app/pages/page-container/parcour/experiences/experience/experience.component';\nimport { FormationFormComponent } from 'src/app/pages/page-container/parcour/formations/formation-form/formation-form.component';\n\nimport { ParcourService } from '../services/parcour.service';\nimport { UsersService } from '../services/users.service';\nimport { UploadImageFormComponent } from 'src/app/pages/page-container/parcour/formations/upload-image-form/upload-image-form.component';\nimport { PortfolioComponent } from 'src/app/pages/page-container/portfolio/portfolio.component';\nimport { PortfolioFormComponent } from 'src/app/pages/page-container/portfolio/portfolio-form/portfolio-form.component';\nimport { AlertSupprImgComponent } from 'src/app/components/alert/alert-suppr-img/alert-suppr-img.component';\nimport { FonctionGeneralService } from '../services/fonction-general.service';\n\nconst MODULES = [\n    HeaderComponent,\n    FooterComponent,\n    NavbarComponent,\n    AcceuilComponent,\n    SeConnecterComponent,\n    SInscrireComponent,\n    PageContainerComponent,\n    ParcourComponent,\n    PortfolioComponent,\n    PortfolioFormComponent,\n    ContactComponent,\n    FormationComponent,\n    ExperienceComponent,\n    FormationFormComponent,\n    ExperienceFormComponent,\n    UploadImageFormComponent,\n    AlertSupprImgComponent,\n    GooglePlacesComponent\n];\n\n@NgModule({\n  declarations: [\n    MODULES\n  ],\n  imports: [\n    AppRoutingModule,\n    LayoutModule,\n    GooglePlaceModule,\n  ],\n  exports: [\n    MODULES,\n    LayoutModule,\n  ],\n  providers:[\n    ParcourService,\n    PortfolioService,\n    UsersService,\n    FonctionGeneralService\n  ]\n\n})\nexport class CoreModule { }\n","export default \"<section class='experienceForm' fxLayoutAlign='center center'>\\n    <form [formGroup]='experienceForm' class='mtb-20' (ngSubmit)='onSaveExperience()' fxLayoutAlign='center center'>\\n        <mat-card>\\n            <mat-card-header>\\n                <mat-card-title *ngIf='!this.id'>Nouvelle Experience</mat-card-title>\\n                <mat-card-title *ngIf='this.id'>Modification Experience</mat-card-title>\\n            </mat-card-header>\\n\\n            <!-- Les Dates -->\\n            <mat-card-content>\\n                <div fxLayout='column'>\\n                    <mat-form-field appearance='fill'>\\n                        <mat-label>Date d'entrée</mat-label>\\n                        <input matInput [matDatepicker]='picker' formControlName='dateEntree'>\\n                        <mat-datepicker-toggle matSuffix [for]='picker'></mat-datepicker-toggle>\\n                        <mat-datepicker #picker></mat-datepicker>\\n                    </mat-form-field>\\n                    <mat-form-field appearance='fill'>\\n                        <mat-label>Date de sortie</mat-label>\\n                        <input matInput [matDatepicker]='pickerSortie' formControlName='dateSortie'>\\n                        <mat-datepicker-toggle matSuffix [for]='pickerSortie'></mat-datepicker-toggle>\\n                        <mat-datepicker #pickerSortie></mat-datepicker>\\n                    </mat-form-field>\\n                </div>\\n\\n                <!-- image -->\\n                <div fxLayout='column'>\\n                    <div class='container' fxLayout='row' fxLayoutAlign='center center'>\\n                        <div class='image' *ngIf='!this.id || imageInstanceAModifier === false'>\\n                            <div class='content' fxLayout='column' fxGap='15px'>\\n                                <div *ngIf=\\\"this.noFile === true \\\" class='upload' fxLayout='row' fxLayoutAlign='center center' (click)=\\\"openFile()\\\">\\n                                    <mat-label>Ajouter une image</mat-label>\\n                                    <input (change)='addFile($event)' type=\\\"file\\\" fxHide='true' formControlName='image' #fileInput>\\n                                    <mat-icon><span class=\\\"material-icons-outlined\\\">file_download</span></mat-icon>\\n                                </div>\\n                                <div *ngIf='this.noFile === false'>\\n                                    <div class='file' *ngFor='let fileHolder of (filesHolder$ | async ); let i = index' fxLayout='column' fxLayoutAlign='center center'>\\n                                        <div class='fileUpload' *ngIf='fileHolder.progress$ | async; let progress ' fxLayout='column'>\\n                                            <div class='fileUpload' fxLayout='row' fxLayoutAlign='space-between center'>\\n                                                <span>{{ fileHolder.file.name }}</span>\\n                                                <span>{{ progress }}%</span>\\n                                                <span *ngIf='progress === 100'> Fichier enregistré </span>\\n                                                <mat-icon><span class=\\\"material-icons\\\" (click)='deleteFile(i)'>clear</span></mat-icon>\\n                                            </div>\\n                                            <mat-progress-bar style=\\\"min-width: 150px;\\\" mode='determinate' [value]='progress'></mat-progress-bar>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <!-- S'affiche si id experience pour modification -->\\n                        <div class='content' *ngIf='this.id' fxLayout='column' fxGap='15px'>\\n                            <!-- s'affiche si image d'origine-->\\n                            <div *ngIf='this.imageInstanceAModifier === true' class='fileUpload' fxLayout='column'>\\n                                <div class='fileUpload' fxLayout='row' fxLayoutAlign='space-between center'>\\n                                    <span>{{this.imageVal.split('/')[3]}}</span>\\n                                    <mat-icon><span class=\\\"material-icons\\\" (click)='supprImgLinkmodif(this.imageVal)'>clear</span></mat-icon>\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                    </div>\\n                    <mat-form-field appearance='fill'>\\n                        <mat-label>Description Image</mat-label>\\n                        <input matInput type=\\\"text\\\" formControlName='alt' placeholder='alt'>\\n                        <mat-error *ngIf=\\\"\\\"></mat-error>\\n                    </mat-form-field>\\n                </div>\\n\\n                <!-- Contrat -->\\n                <div fxLayout='column'>\\n                    <mat-form-field appearance='fill'>\\n                        <mat-label>Type de Contrat</mat-label>\\n                        <mat-select placeholder=\\\"type de contrat\\\" formControlName='typeContrat'>\\n                            <mat-option *ngFor='let contrat of typeContrat' [value]=\\\"contrat\\\">{{ contrat }}</mat-option>\\n                        </mat-select>\\n                        <mat-error *ngIf=\\\"\\\"></mat-error>\\n                    </mat-form-field>\\n                    <mat-form-field appearance='fill'>\\n                        <mat-label>Enseigne</mat-label>\\n                        <input matInput type=\\\"text\\\" placeholder=\\\"option\\\" formControlName='enseigne'>\\n                        <mat-error *ngIf=\\\"\\\"></mat-error>\\n                    </mat-form-field>\\n                </div>\\n\\n                <div fxLayout='column'>\\n                    <mat-form-field appearance='fill'>\\n                        <mat-label>Lieu</mat-label>\\n                        <input type=\\\"text\\\" matInput formControlName='lieu' placeholder=\\\"Departement\\\">\\n                        <mat-error *ngIf=\\\"\\\"></mat-error>\\n                    </mat-form-field>\\n                    <mat-form-field appearance='fill'>\\n                        <mat-label>Lien vers le site </mat-label>\\n                        <input type='text' matInput placeholder=\\\"Liens\\\" formControlName='lien' />\\n                        <mat-error *ngIf=\\\"\\\"></mat-error>\\n                    </mat-form-field>\\n                    <mat-form-field appearance='fill'>\\n                        <mat-label>Fonction</mat-label>\\n                        <textarea matInput placeholder=\\\"Quels rôle aviez vous\\\" formControlName='fonction'></textarea>\\n                        <mat-error *ngIf=\\\"\\\"></mat-error>\\n                    </mat-form-field>\\n                </div>\\n\\n            </mat-card-content>\\n            <mat-card-actions>\\n                <div fxFlex='row' fxLayoutAlign='center center'>\\n                    <button *ngIf='!this.id' mat-raised-button type='button' [disabled]='this.experienceForm.invalid' (click)=\\\"onSaveExperience()\\\">Enregistrer</button>\\n                    <button *ngIf='this.id' mat-raised-button type='button' (click)=\\\"onModifyExperience()\\\">Modifier</button>\\n                    <button mat-raised-button (click)=\\\"retour(this.imageVal)\\\">Annuler</button>\\n                </div>\\n            </mat-card-actions>\\n        </mat-card>\\n    </form>\\n</section>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ1cGxvYWQtaW1hZ2UtZm9ybS5jb21wb25lbnQuc2FzcyJ9 */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhY2NldWlsLmNvbXBvbmVudC5zYXNzIn0= */\";","export default \"<section class='contactForm' fxLayoutAlign='center center'>\\n    <div class='container'>\\n        <form [formGroup]='contactForm'>\\n            <mat-card class='matCardSeCo' fxFlex='column'>\\n                <div>\\n                    <mat-card-header>\\n                        <mat-card-title>\\n                            <h4>Plus d'infos ?</h4>\\n                        </mat-card-title>\\n                    </mat-card-header>\\n                    <mat-card-content fxLayout='column'>\\n                        <mat-form-field>\\n                            <mat-label name='email'>Email</mat-label>\\n                            <input matInput type='email' formControlName='email' />\\n                            <mat-error *ngIf=\\\"\\\"></mat-error>\\n                        </mat-form-field>\\n                        <mat-form-field>\\n                            <mat-label name='password'>Mot de passe</mat-label>\\n                            <input matInput type='password' formControlName='password' />\\n                            <mat-error *ngIf=\\\"\\\"></mat-error>\\n                        </mat-form-field>\\n                    </mat-card-content>\\n                </div>\\n                <mat-card-actions align=\\\"start\\\" fxLayout='column' fxLayoutAlign='center center'>\\n                    <div fxLayout='row'>\\n                        <mat-error *ngIf=''>{{ seconnecterErreur() }}</mat-error>\\n                        <button mat-raised-button [disabled]='this.contactForm.invalid' (click)='submit()'>Envoyer</button>\\n                    </div>\\n                </mat-card-actions>\\n            </mat-card>\\n        </form>\\n    </div>\\n</section>\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.sass']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAuY29tcG9uZW50LnNhc3MifQ== */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwYWdlLWNvbnRhaW5lci5jb21wb25lbnQuc2FzcyJ9 */\";","import { Router } from '@angular/router';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { User } from '../modeles/user.interface';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { UserSession } from '../modeles/userSession.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersService {\n  [x: string]: any;\n\n  public idSession$: BehaviorSubject<UserSession> = new BehaviorSubject({\n    isAuth: null,\n    _id: null\n  })\n  public user: User;\n  public error: string;\n\n  constructor(\n    private http: HttpClient,\n    private router: Router,\n  ) { }\n\n  // Queries\n    // Inscription\n    createUser(newUser: User): Observable<User>{\n    return this.http.post<User>('/api/users/signup',newUser);\n    }\n    // Connexion en local\n    signin(user: User): Observable<any>{\n    return this.http.post('/api/users/signin', user).pipe(\n      tap((response)=>{\n        this.idSession$.next({\n          isAuth: true,\n          _id: response._id\n        });\n      },err => {\n       this.error = err.error.substr(104,22);\n      })\n    );\n  }\n\n    // Connexion Google\n    signinGoogle(){\n      const optionRequete = {\n        headers: new HttpHeaders({\n        'Access-Control-Allow-Origin': '*',\n        })\n      };\n\n      this.http.get('/api/auth/google').subscribe((res)=>{\n        console.log(res);\n      }, err => {\n        console.log(err);\n      });\n    }\n\n    // Deconnexion\n    loggout(): Observable<any>{\n      return this.http.delete('api/users/signout').pipe(\n        tap((response)=>{\n          this.idSession$.next({\n            isAuth: false,\n            _id: ''\n          });\n          console.log(response);\n          },err => {\n          console.log(err.error);\n        })\n      );\n    }\n}\n","export default \"<p>navbar works!</p>\\n\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.sass']\n})\nexport class AppComponent {\n  title = 'monSite';\n}\n","export default \"<section class='portfolioForm' fxLayoutAlign='center center'>\\n    <form [formGroup]='portfolioForm' class='mtb-20' fxLayoutAlign='center center'>\\n        <mat-card>\\n            <mat-card-header>\\n                <mat-card-title>Nouveau Site</mat-card-title>\\n            </mat-card-header>\\n            <mat-card-content>\\n                <!-- Titre du site -->\\n                <div fxLayout='column'>\\n                    <mat-form-field appearance='fill'>\\n                        <mat-label>Titre</mat-label>\\n                        <input matInput type=\\\"text\\\" formControlName='name' placeholder=\\\"Nom du site\\\">\\n                        <mat-error *ngIf=\\\"\\\"></mat-error>\\n                    </mat-form-field>\\n                    <mat-form-field appearance='fill'>\\n                        <mat-label>Lien vers le site</mat-label>\\n                        <input matInput type=\\\"text\\\" placeholder=\\\"lien http\\\" formControlName='lienSite'>\\n                        <mat-error *ngIf=\\\"\\\"></mat-error>\\n                    </mat-form-field>\\n                </div>\\n                <!-- Description -->\\n                <div fxLayout='column'>\\n                    <mat-form-field appearance='fill'>\\n                        <mat-label>Description</mat-label>\\n                        <textarea matInput placeholder=\\\"Description du site\\\" formControlName='description'></textarea>\\n                    </mat-form-field>\\n                </div>\\n                <!-- lienGit -->\\n                <div fxLayout='column'>\\n                    <mat-form-field appearance='fill'>\\n                        <mat-label>Lien vers Github</mat-label>\\n                        <input matInput type=\\\"text\\\" placeholder=\\\"lien http\\\" formControlName='lienGit'>\\n                        <mat-error *ngIf=\\\"\\\"></mat-error>\\n                    </mat-form-field>\\n                </div>\\n                <!-- image -->\\n                <div fxLayout='column'>\\n                    <div class='container' fxLayout='row' fxLayoutAlign='center center'>\\n                        <div class='image' *ngIf='!this.id || imageInstanceAModifier === false'>\\n                            <div class='content' fxLayout='column' fxGap='15px'>\\n                                <div *ngIf=\\\"this.noFile === true \\\" class='upload' fxLayout='row' fxLayoutAlign='center center' (click)=\\\"openFile()\\\">\\n                                    <mat-label>Ajouter une image</mat-label>\\n                                    <input (change)='addFile($event)' type=\\\"file\\\" fxHide='true' formControlName='image' #fileInput>\\n                                    <mat-icon><span class=\\\"material-icons-outlined\\\">file_download</span></mat-icon>\\n                                </div>\\n                                <div *ngIf='this.noFile === false'>\\n                                    <div class='file' *ngFor='let fileHolder of (filesHolder$ | async ); let i = index' fxLayout='column' fxLayoutAlign='center center'>\\n                                        <div class='fileUpload' *ngIf='fileHolder.progress$ | async; let progress ' fxLayout='column'>\\n                                            <div class='fileUpload' fxLayout='row' fxLayoutAlign='space-between center'>\\n                                                <span>{{ fileHolder.file.name }}</span>\\n                                                <span>{{ progress }}%</span>\\n                                                <span *ngIf='progress === 100'> Fichier enregistré </span>\\n                                                <mat-icon><span class=\\\"material-icons\\\" (click)='deleteFile(i)'>clear</span></mat-icon>\\n                                            </div>\\n                                            <mat-progress-bar style=\\\"min-width: 150px;\\\" mode='determinate' [value]='progress'></mat-progress-bar>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <!-- S'affiche si id experience pour modification -->\\n                        <div class='content' *ngIf='this.id' fxLayout='column' fxGap='15px'>\\n                            <!-- s'affiche si image d'origine-->\\n                            <div *ngIf='this.imageInstanceAModifier === true' class='fileUpload' fxLayout='column'>\\n                                <div class='fileUpload' fxLayout='row' fxLayoutAlign='space-between center'>\\n                                    <span>{{this.imageVal.split('/')[3]}}</span>\\n                                    <mat-icon><span class=\\\"material-icons\\\" (click)='supprImgLinkmodif(this.imageVal)'>clear</span></mat-icon>\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                    </div>\\n                    <mat-form-field appearance='fill'>\\n                        <mat-label>Description Image</mat-label>\\n                        <input matInput type=\\\"text\\\" formControlName='alt' placeholder='alt'>\\n                        <mat-error *ngIf=\\\"\\\"></mat-error>\\n                    </mat-form-field>\\n                </div>\\n            </mat-card-content>\\n            <mat-card-actions align=\\\"start\\\">\\n                <button *ngIf='this.id' mat-raised-button (click)=\\\"onModifyPorfolio()\\\">modifier</button>\\n                <button *ngIf='!this.id' mat-raised-button ngSubmit (click)=\\\"onSavePortfolio()\\\">Enregistrer</button>\\n                <button mat-raised-button (click)=\\\"retour()\\\">Annuler</button>\\n            </mat-card-actions>\\n            <mat-card-footer>\\n            </mat-card-footer>\\n        </mat-card>\\n    </form>\\n</section>\";","export default \"<section fxLayoutAlign='center center'>\\n    <form [formGroup]='form'>\\n        <mat-card class='matCardSeCo' fxFlex='column'>\\n            <mat-card-header>\\n                <mat-card-title>S'enregistrer</mat-card-title>\\n            </mat-card-header>\\n            <mat-card-content fxLayout='column'>\\n                <mat-form-field>\\n                    <mat-label name='pseudo'>Pseudo</mat-label>\\n                    <input matInput formControlName='pseudo' type='text' />\\n                    <mat-error *ngIf=\\\"this.form.invalid\\\"></mat-error>\\n                </mat-form-field>\\n                <mat-form-field>\\n                    <mat-label name='email'>Email</mat-label>\\n                    <input matInput formControlName='email' type='email' />\\n                    <mat-error *ngIf=\\\"this.form.invalid\\\">{{ errorMail() }}</mat-error>\\n                </mat-form-field>\\n\\n                <mat-form-field>\\n                    <mat-label name='password'>Mot de passe</mat-label>\\n                    <input matInput formControlName='password' type='password' />\\n                    <mat-error *ngIf=\\\"this.form.invalid\\\">{{ errorPassword() }}</mat-error>\\n                </mat-form-field>\\n\\n                <mat-form-field>\\n                    <mat-label name='passwordConfirm'>confirmer le mot de passe</mat-label>\\n                    <input matInput name='passwordConfirm' type='password' />\\n                    <mat-error *ngIf=\\\"this.form.invalid\\\">{{ errorPasswordConfirm() }}</mat-error>\\n                </mat-form-field>\\n\\n            </mat-card-content>\\n            <mat-card-actions fx-flex='column'>\\n                <button mat-raised-button [disabled]='this.form.invalid' (click)='onSubmit()'>Envoyer</button>\\n                <button mat-raised-button (click)=\\\"goSeConnecter()\\\">\\n                    J'ai deja un compte\\n                </button>\\n            </mat-card-actions>\\n        </mat-card>\\n    </form>\\n</section>\";","export default \"<section class='sectionExperience'>\\n    <div class='container' fxLayout='column'>\\n        <div class='titre formationSticky' fxLayout='column' fxLayoutAlign='center center'>\\n            <div class='h3' fxLayout='row' fxLayoutAlign='center start'>\\n                <span>E</span>\\n                <h3>xpérience</h3>\\n            </div>\\n        </div>\\n\\n        <button mat-raised-button class='btn' *ngIf='this.userSession.isAuth' routerLink='/experienceForm'>Ajouter une expérience</button>\\n\\n        <div fxLayout='row wrap' fxLayoutAlign='center start'>\\n            <article *ngFor='let xp of experienceTab'>\\n                <mat-card class='mat-card-experience' fxLayout='column' fxLayoutAlign='space-between'>\\n                    <div>\\n                        <div class='btnAlign' fxLayoutAlign='space-evenly center'>\\n                            <button class='btn' *ngIf='this.userSession.isAuth' mat-raised-button (click)='deleteLinkImage(xp.image)' (click)=\\\"deleteExperience(xp._id)\\\">Supprimer</button>\\n                            <button class='btn' *ngIf='this.userSession.isAuth' mat-raised-button (click)=\\\"editExperience(xp)\\\" [routerLink]=\\\"['/experience',xp._id]\\\">Modifier</button>\\n                        </div>\\n                        <mat-card-header>\\n                            <div fxFlex='column'>\\n                                <mat-card-title>{{ xp.enseigne }}</mat-card-title>\\n                                <mat-card-subtitle fxflex='row' fxLayoutAlign='space-between center'>\\n                                    <div fxflex='row' fxLayoutAlign='start center'>\\n                                        <p>{{xp.dateEntree | date: \\\"MM/y\\\"}}</p>\\n                                        <p>{{xp.dateSortie | date: 'MM/y'}}</p>\\n                                    </div>\\n                                    <p>{{ tempsTravailler(xp.dateSortie, xp.dateEntree) }}</p>\\n                                </mat-card-subtitle>\\n                            </div>\\n                        </mat-card-header>\\n                        <img *ngIf='xp.image' class='imgBg' matCardImage src=\\\"{{xp.image}}\\\" alt='{{ xp.alt }}'>\\n                        <div class='divImgDefault' *ngIf='!xp.image'></div>\\n                        <mat-card-content>\\n                            <div fxLayout='row' class='mtb-10'>\\n                                <p> {{ xp.typeContrat }} </p>\\n                                <p class='mlr-10'> {{ xp.lieu }} </p>\\n                            </div>\\n                            <div class='mtb-10'>\\n                                <h4>Fonction</h4>\\n                                <p>{{ xp.fonction }}</p>\\n                            </div>\\n                            <div>\\n                                <h4>Missions</h4>\\n                                <p>{{ xp.mission }}</p>\\n                            </div>\\n                        </mat-card-content>\\n                    </div>\\n                    <mat-card-actions align=\\\"start\\\">\\n                        <a href=\\\"{{ xp.lien }}\\\" target=\\\"blank\\\"> <button mat-raised-button class='btn'>   En Savoir plus</button></a>\\n                    </mat-card-actions>\\n                </mat-card>\\n            </article>\\n        </div>\\n    </div>\\n</section>\";","export default \"<app-header></app-header>\\n<router-outlet></router-outlet>\\n<app-footer></app-footer>\\n\";","export default \"<footer>\\n    <div fxLayout='row' fxLayoutAlign='center center'>\\n        <p>Copyright</p>\\n        <i class=\\\"far fa-copyright\\\"></i>\\n        <p>Sph3rik - 2021</p>\\n    </div>\\n</footer>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzLWluc2NyaXJlLmNvbXBvbmVudC5zYXNzIn0= */\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MaterialModule } from './material.module';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\n\nconst MODULES_LAYOUT = [\n  CommonModule,\n  ReactiveFormsModule,\n  FlexLayoutModule,\n  MaterialModule,\n  FormsModule\n];\n\n@NgModule({\n  declarations: [],\n  imports: [MODULES_LAYOUT],\n  exports: [MODULES_LAYOUT]\n})\nexport class LayoutModule { }\n","export default \"<!-- <mat-form-field>\\n    <ngx-mat-file-input name='imgFormation' [formControl]='formControl' [multiple]=\\\"multiple\\\" [accept]=\\\"accept\\\" [color]=\\\"color\\\">\\n    </ngx-mat-file-input>\\n</mat-form-field>\\n<div class=\\\"progress\\\">\\n    <mat-progress-bar class=\\\"progress-bar\\\" mode=\\\"determinate\\\" [value]=\\\"20\\\">\\n    </mat-progress-bar>\\n    <mat-icon class=\\\"cancel-upload\\\">delete_forever</mat-icon>\\n</div> -->\\n\\n\\n<!-- <div class=\\\"container\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\n    <div class=\\\"content\\\" fxLayout=\\\"column\\\" fxLayoutGap=\\\"15px\\\">\\n        <div class=\\\"upload\\\" *ngIf=\\\"!this.noFile\\\" [class.over]=\\\"over\\\" (click)=\\\"openFile()\\\" (drop)=\\\"dropFile($event); over = false\\\" (dragover)=\\\"$event.preventDefault()\\\" (dragenter)=\\\"over = true\\\" (dragleave)=\\\"over = false\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\n            <mat-label>Ajouter une image</mat-label>\\n            <input (change)='addFile($event)' #fileinput formControlName='image' type=\\\"file\\\" fxHide=\\\"true\\\" />\\n            <mat-icon> <span class=\\\"material-icons-outlined\\\">\\n              file_download\\n              </span></mat-icon>\\n        </div>\\n        <div class=\\\"file\\\" fxLayout='column' fxLayoutAlign=\\\"center center\\\">\\n            <div class=\\\"fileUpload\\\" *ngFor='let fileHolder of (filesHolder$ | async ); let i = index' fxLayout='row' fxLayoutAlign=\\\"space-between center\\\">\\n                <div class=\\\"fileName\\\" fxLayoutAlign=\\\"space-arround center\\\" fxLayout='row'>\\n                    <span fxFill>{{ fileHolder.file.name }}</span>\\n                    <div fxLayout='row' *ngIf='fileHolder.progress$ | async ; let progress '>\\n                        <span>{{ progress }}%</span>\\n                        <mat-progress-bar style=\\\" width:200px \\\" mode=\\\"determinate\\\" [value]='progress'>\\n                        </mat-progress-bar>\\n                    </div>\\n                </div>\\n                <mat-icon><span class=\\\"material-icons\\\" (click)='deleteFile(i)'>clear</span></mat-icon>\\n            </div>\\n        </div>\\n    </div>\\n</div> -->\\n\";","import { CoreModule } from 'src/shared/modules/core.module';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app.routing';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    CoreModule,\n    BrowserModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwb3J0Zm9saW8uY29tcG9uZW50LnNhc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\n@Component({\n  selector: 'app-parcour',\n  templateUrl: './parcour.component.html',\n  styleUrls: ['./parcour.component.sass']\n})\nexport class ParcourComponent implements OnInit {\n\n\n  constructor() {}\n\n  ngOnInit(): void {\n  }\n\n}\n","export default \"<section class='formationForm' fxLayoutAlign='center center'>\\n    <form [formGroup]='formationForm' class='mtb-20' fxLayoutAlign='center center'>\\n        <mat-card>\\n            <mat-card-header>\\n                <mat-card-title>Nouvelle Formation</mat-card-title>\\n            </mat-card-header>\\n            <!-- INTIUTLE -->\\n            <mat-card-content>\\n                <div fxLayout='column'>\\n                    <mat-form-field appearance='fill'>\\n                        <mat-label>Diplôme</mat-label>\\n                        <input matInput type=\\\"text\\\" formControlName='diplome' placeholder=\\\"nom du diplome\\\" required>\\n                        <!-- <mat-error *ngIf=\\\"this.formationForm.invalid\\\">{{ getErrorMessage(nomFormation)}}</mat-error> -->\\n                    </mat-form-field>\\n                    <mat-form-field appearance='fill'>\\n                        <mat-label>Formation</mat-label>\\n                        <input matInput type=\\\"text\\\" formControlName='nomFormation' placeholder=\\\"Nom de la formation\\\" required>\\n                        <!-- <mat-error *ngIf=\\\"this.formationForm.invalid\\\">{{ getErrorMessage(nomFormation)}}</mat-error> -->\\n                    </mat-form-field>\\n                    <mat-form-field appearance='fill'>\\n                        <mat-label>Option de la Formation</mat-label>\\n                        <input matInput type=\\\"text\\\" placeholder=\\\"option\\\" formControlName='option'>\\n                        <!-- <mat-error *ngIf=\\\"this.formationForm.invalid\\\">{{ getErrorMessage(option) }}</mat-error> -->\\n                    </mat-form-field>\\n                </div>\\n\\n                <!-- AJOUT ECOLE -->\\n\\n\\n                <div class='listeAxes' formArrayName='ecoles' fxLayout='column'>\\n                    <div [formGroupName]='i' *ngFor='let ecole of ecoles.controls; let i = index' fxLayout='column' fxLayoutAlign='center stretch'>\\n\\n                        <mat-accordion displayMode=\\\"default\\\" [multi]=\\\"true\\\" [hideToggle]=\\\"false\\\">\\n                            <mat-expansion-panel style='background-color: azure; margin:20px 0' [hideToggle]=\\\"false\\\">\\n                                <mat-expansion-panel-header>{{this.fGservice.afficheNomEcole(i)}}</mat-expansion-panel-header>\\n                                <!-- LOCALISATION -->\\n                                <div fxLayout='column'>\\n                                    <div>\\n                                        <mat-form-field appearance='fill'>\\n                                            <mat-label>Nom de l'école</mat-label>\\n                                            <input ngx-google-places-autocomplete [value]='this.fGservice.valueLieu.name' matInput #placesRef formControlName='nomEcole' (onAddressChange)=\\\"this.fGservice.handleAddressChange($event)\\\" />\\n                                            <mat-error *ngIf=\\\"\\\"></mat-error>\\n                                        </mat-form-field>\\n                                    </div>\\n                                    <mat-form-field appearance='fill'>\\n                                        <mat-label>Commune</mat-label>\\n                                        <input type=\\\"text\\\" matInput formControlName='departement' [value]='this.fGservice.valueLieu.dept' placeholder=\\\"lieu\\\">\\n                                        <!-- <mat-error *ngIf=\\\"this.formationForm.invalid\\\">{{ getErrorMessage(lieu) }}</mat-error> -->\\n                                    </mat-form-field>\\n                                    <mat-form-field appearance='fill'>\\n                                        <mat-label>Departement</mat-label>\\n                                        <input type=\\\"text\\\" matInput formControlName='cp' [value]='this.fGservice.valueLieu.cp' placeholder=\\\"lieu\\\">\\n                                        <!-- <mat-error *ngIf=\\\"this.formationForm.invalid\\\">{{ getErrorMessage(lieu) }}</mat-error> -->\\n                                    </mat-form-field>\\n                                </div>\\n\\n                                <!-- DATE -->\\n                                <div fxLayout='column'>\\n                                    <mat-form-field appearance='fill'>\\n                                        <mat-label>Date d'entrée</mat-label>\\n                                        <input matInput [matDatepicker]='picker' formControlName='dateEntree' disabled>\\n                                        <mat-datepicker-toggle matSuffix [for]='picker'></mat-datepicker-toggle>\\n                                        <mat-datepicker #picker disabled='false'></mat-datepicker>\\n                                        <!-- <mat-error *ngIf=\\\"this.formationForm.invalid\\\">{{ getErrorMessage(dateEntree) }}</mat-error> -->\\n                                    </mat-form-field>\\n                                    <mat-form-field appearance='fill'>\\n                                        <mat-label>Date de sortie</mat-label>\\n                                        <input matInput [matDatepicker]='pickerSortie' formControlName='dateSortie' disabled>\\n                                        <mat-datepicker-toggle matSuffix [for]='pickerSortie'></mat-datepicker-toggle>\\n                                        <mat-datepicker #pickerSortie disabled='false'></mat-datepicker>\\n                                        <!-- <mat-error *ngIf=\\\"this.formationForm.invalid\\\">{{ getErrorMessage(dateSortie) }}</mat-error> -->\\n                                    </mat-form-field>\\n                                </div>\\n\\n                                <!-- LIEN -->\\n                                <mat-form-field appearance='fill' fxLAyoutAlign='start center'>\\n                                    <mat-label>Lien vers le site </mat-label>\\n                                    <input type='text' matInput placeholder=\\\"Liens\\\" [value]='this.fGservice.valueLieu.lien' formControlName='lien' />\\n                                    <mat-error *ngIf=\\\"\\\"></mat-error>\\n                                </mat-form-field>\\n\\n                                <!-- IMAGE -->\\n                                <div fxLayout='column'>\\n                                    <div class='container' fxLayout='row' fxLayoutAlign='center'>\\n                                        <!-- S'affiche si nouvelle experience -->\\n                                        <div class='image' *ngIf='!this.id || this.imageInstanceAModifier === false'>\\n                                            <div class='content' fxLayout='column' fxGap='15px'>\\n                                                <div *ngIf=\\\"this.noFile === true\\\" class='upload' fxLayout='row' fxLayoutAlign='center center' (click)=\\\"openFile()\\\">\\n                                                    <mat-label>Ajouter une image</mat-label>\\n                                                    <input (change)='addFile($event)' type=\\\"file\\\" fxHide='true' formControlName='image' #fileInput>\\n                                                    <mat-icon><span class=\\\"material-icons-outlined\\\">file_download</span></mat-icon>\\n                                                </div>\\n                                                <div *ngIf='this.noFile === false'>\\n                                                    <div class='file' *ngFor='let fileHolder of (filesHolder$ | async ); let i = index' fxLayout='column' fxLayoutAlign='center center'>\\n                                                        <div class='fileUpload' *ngIf='fileHolder.progress$ | async; let progress ' fxLayout='column'>\\n                                                            <div class='fileUpload' fxLayout='row' fxLayoutAlign='space-between center'>\\n                                                                <span class='w30'>{{ fileHolder.file.name }}</span>\\n                                                                <span>{{ progress }}%</span>\\n                                                                <span *ngIf='progress === 100'> Fichier enregistré </span>\\n                                                                <mat-icon><span class=\\\"material-icons\\\" (click)='deleteFile(i)'>clear</span></mat-icon>\\n                                                            </div>\\n                                                            <mat-progress-bar style=\\\"min-width: 150px;\\\" mode='determinate' [value]='progress'></mat-progress-bar>\\n                                                        </div>\\n                                                    </div>\\n                                                </div>\\n                                            </div>\\n                                        </div>\\n                                        <!-- S'affiche si id experience pour modification -->\\n                                        <div class='content' *ngIf='this.id' fxLayout='column' fxGap='15px'>\\n                                            <!-- S'affiche lors de la modification apres recuperation des données -->\\n                                            <div *ngIf='this.imageInstanceAModifier === true' class='fileUpload' fxLayout='column'>\\n                                                <div class='fileUpload' fxLayout='row' fxLayoutAlign='space-between center'>\\n                                                    <span>{{this.imageVal.split('/')[3]}}</span>\\n                                                    <mat-icon><span class=\\\"material-icons\\\" (click)='supprImgLinkmodif(this.imageVal)'>clear</span></mat-icon>\\n                                                </div>\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                    <mat-form-field appearance='fill'>\\n                                        <mat-label>Description Image</mat-label>\\n                                        <input matInput type=\\\"text\\\" formControlName='alt' placeholder='image par default' required>\\n                                        <!-- <mat-error *ngIf=\\\"this.formationForm.invalid\\\">{{ getErrorMessage(alt)}}</mat-error> -->\\n                                    </mat-form-field>\\n                                </div>\\n\\n                                <button class='btnDeleteAxe' mat-raised-button (click)=\\\"deleteEcole(i)\\\">-</button>\\n                            </mat-expansion-panel>\\n                        </mat-accordion>\\n\\n\\n\\n                    </div>\\n                </div>\\n\\n                <button mat-raised-button (click)='addListeEcole()'>Ajouter une Ecole</button>\\n\\n                <!-- COMPLEMENT -->\\n                <div fxLayout='column'>\\n                    <mat-form-field appearance='fill'>\\n                        <mat-label>Contenu de la formation</mat-label>\\n                        <textarea matInput placeholder=\\\"De quoi est fait la formation\\\" formControlName='contenu'></textarea>\\n                        <!-- <mat-error *ngIf=\\\"this.formationForm.invalid\\\">{{ getErrorMessage(contenu) }}</mat-error> -->\\n                    </mat-form-field>\\n\\n                    <div class='listeAxes' formArrayName='liste' fxLayout='column'>\\n                        <button mat-raised-button (click)='addAxeListe()'>Ajouter un Objectif</button>\\n                        <div *ngFor='let axe of liste.controls; let i = index' fxLayout='column' fxLayoutAlign='center stretch'>\\n                            <mat-form-field appearance='fill'>\\n                                <div fxLayout='row'>\\n                                    <div class='flex1'>\\n                                        <mat-label>Les points de formation </mat-label>\\n                                        <input [formControlName]='i' type='text' matInput placeholder=\\\"Les différents axes\\\" />\\n                                        <mat-error *ngIf=\\\"axe\\\">{{ getErrorMessage(liste)}}</mat-error>\\n                                    </div>\\n                                    <button class='btnDeleteAxe' mat-raised-button (click)=\\\"deleteAxe(i)\\\">-</button>\\n                                </div>\\n                            </mat-form-field>\\n                        </div>\\n                    </div>\\n\\n                </div>\\n            </mat-card-content>\\n            <mat-card-actions align=\\\"start\\\">\\n                <button *ngIf='this.id' mat-raised-button (click)=\\\"onModify()\\\">modifier\\n                </button>\\n\\n                <button *ngIf='!this.id' mat-raised-button [disabled]='this.formationForm.invalid' ngSubmit (click)=\\\"onSaveFormation()\\\">Enregistrer</button>\\n                <button mat-raised-button (click)=\\\"retour()\\\">Annuler</button>\\n            </mat-card-actions>\\n\\n        </mat-card>\\n    </form>\\n</section>\\n\";","import { PortfolioFormComponent } from './pages/page-container/portfolio/portfolio-form/portfolio-form.component';\nimport { PortfolioComponent } from './pages/page-container/portfolio/portfolio.component';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AuthGuard } from 'src/shared/auth.guard';\n\nimport { SInscrireComponent } from './components/auth/s-inscrire/s-inscrire.component';\nimport { SeConnecterComponent } from './components/auth/se-connecter/se-connecter.component';\nimport { AcceuilComponent } from './pages/page-container/acceuil/acceuil.component';\nimport { ContactComponent } from './pages/page-container/contact/contact.component';\nimport { PageContainerComponent } from './pages/page-container/page-container.component';\nimport { ExperienceFormComponent } from './pages/page-container/parcour/experiences/experience-form/experience-form.component';\nimport { ExperienceComponent } from './pages/page-container/parcour/experiences/experience/experience.component';\nimport { FormationFormComponent } from './pages/page-container/parcour/formations/formation-form/formation-form.component';\nimport { FormationComponent } from './pages/page-container/parcour/formations/formation/formation.component';\nimport { ParcourComponent } from './pages/page-container/parcour/parcour.component';\n\nconst routes: Routes = [\n\n  { path: 'acceuil', component: AcceuilComponent},\n  { path: 'seConnecter', component: SeConnecterComponent},\n  { path: 'sInscrire', component: SInscrireComponent,\n    canActivate: [AuthGuard],\n  },\n\n  { path: 'parcour', component: ParcourComponent},\n  { path: 'portfolio', component: PortfolioComponent},\n  { path: 'portfolioForm', component: PortfolioFormComponent},\n  { path: 'portfolio/:id',\n    // canActivate:[AuthGuard],\n    component: PortfolioFormComponent},\n\n  { path: 'formation', component: FormationComponent},\n  { path: 'formation/:_id',\n    // canActivate:[AuthGuard],\n    component: FormationFormComponent},\n  { path: 'formationForm',\n    // canActivate:[AuthGuard],\n    component: FormationFormComponent},\n\n  { path: 'experience', component: ExperienceComponent},\n  { path: 'experience/:_id',\n    // canActivate: [AuthGuard],\n    component: ExperienceFormComponent\n  },\n  { path: 'experienceForm',\n    // canActivate:[AuthGuard],\n    component:ExperienceFormComponent},\n\n  { path: 'contact', component: ContactComponent},\n  { path: '', redirectTo: '/', pathMatch: 'full' },\n  { path: '**', component: PageContainerComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { Portfolio } from '../modeles/portfolio.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PortfolioService {\n\n  public portFolioTab: Portfolio [] = [];\n  public portFolioTab$: BehaviorSubject<Portfolio[]> =  new BehaviorSubject([]);\n  public portfolio: Portfolio;\n\n  constructor(\n    private http: HttpClient,\n  ) { }\n\n  emmetreLePortFolio(){\n    this.portFolioTab$.next(this.portFolioTab);\n  }\n\n  createPortfolio(newPortfolio: Portfolio){\n    this.portFolioTab.push(newPortfolio);\n    this.savePortfolioOnDb(newPortfolio);\n    this.emmetreLePortFolio();\n  }\n\n  /* Queries*/\n\n  savePortfolioOnDb(portfolio: Portfolio){\n    this.http.post<Portfolio>('/api/portfolio', portfolio).subscribe(()=>{});\n  }\n\n  recupPortfolio(){\n    this.http.get<Portfolio[]>('/api/portfolio').subscribe(\n      (portfolio: Portfolio[]) => {\n        this.portFolioTab = portfolio;\n        this.emmetreLePortFolio();\n      }\n    );\n  }\n\n  updateSiteOfPortfolio(site: Portfolio, id: String){\n    this.http.post<Portfolio>('/api/portfolio/update/' + id , site).subscribe(\n      ()=> {}\n    );\n  }\n\n  deleteSite(id: String){\n    this.http.delete('api/portfolio/' + id ).subscribe(()=>\n      (site: Portfolio[]) => {\n        this.portFolioTab = site;\n    });\n    this.recupPortfolio();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-acceuil',\n  templateUrl: './acceuil.component.html',\n  styleUrls: ['./acceuil.component.sass']\n})\nexport class AcceuilComponent implements OnInit {\n\n  age: any;\n  dateDeNaissance: Date = new Date(1981,15,11);\n\n  constructor() {\n    const essai = (new Date().getTime());\n    this.age = ((essai - this.dateDeNaissance.getTime())/31536000000).toFixed(0);\n   }\n\n  ngOnInit(): void {\n  }\n  Age(dateDeNaissance) {\n    dateDeNaissance = new Date(dateDeNaissance);\n    return new Number((new Date().getTime() - dateDeNaissance.getTime()) / 31536000000).toFixed(0);\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJmb3JtYXRpb24uY29tcG9uZW50LnNhc3MifQ== */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJleHBlcmllbmNlLWZvcm0uY29tcG9uZW50LnNhc3MifQ== */\";","import { UsersService } from './../../../../shared/services/users.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Validators, FormGroup, FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'app-s-inscrire',\n  templateUrl: './s-inscrire.component.html',\n  styleUrls: ['./s-inscrire.component.sass']\n})\nexport class SInscrireComponent implements OnInit {\n\n public form: FormGroup;\n public error: string;\n\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private usersService: UsersService\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.initForm();\n  }\n\n  initForm(): void {\n    this.form = this.fb.group({\n      pseudo:['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(8)]],\n      // passwordConfirm: ['', Validators.required]\n    });\n\n  }\n\n  // tslint:disable-next-line: typedef\n  onSubmit(){\n    this.usersService.createUser(this.form.value).subscribe((response)=>{\n      console.log(response);\n      this.router.navigate(['/seConnecter']);\n    },\n    err => {\n      this.error = err;\n    });;\n  }\n\n  goSeConnecter(){\n    this.router.navigate(['/seConnecter']);\n  }\n\n  // GESTION DES ERREURS\n// tslint:disable-next-line: typedef\nerrorMail(){\n  if (this.form.get('email').hasError('email')){\n    return 'le mail n\\'est pas au bon format';\n  }\n}\n\nerrorPassword(){\n  if ( this.form.get('password').hasError('minlength')){\n    return 'le mot de passe doit contenir au moins 8 caractéres';\n  }\n}\n\nerrorPasswordConfirm(){\n\n  }\n  }\n","export default \"<section class='sectionAcceuil' fxLayout='column' fxLayoutAlign='center center'>\\n    <article id='acceuil'>\\n        <mat-card fxLayout='column' fxLayoutAlign='center center'>\\n            <div fxLayout='column'>\\n                <mat-card-header fxLayout='row' fxLayoutAlign=' end '>\\n                    <mat-card-title>\\n                        <h2>MINGOT Virgil</h2>\\n                    </mat-card-title>\\n                    <div>\\n                        <mat-card-subtitle>\\n                            <h3><span>Développeur Web</span> FullStack Junior</h3>\\n                        </mat-card-subtitle>\\n                    </div>\\n                </mat-card-header>\\n                <mat-card-content fxLayout='row ' fxLayoutAlign='space-evenly center '>\\n                    <img class='photoProfil' src=\\\"../../../../assets/images/virgil.png\\\" alt=\\\"photo de profil\\\">\\n                    <div fxLayout='column ' fxLayoutGap='20px ' fxLayoutAlign='center center '>\\n                        <div class='profil' fxLayout='column ' fxLayoutAlign='center center'>\\n                            <p><span class=\\\"material-icons\\\">event</span> {{ this.age }} ans</p>\\n                            <!-- <p><span class=\\\"material-icons\\\">phone</span> +33 6 18 83 28 30</p>\\n                            <p><span class=\\\"material-icons\\\">alternate_email</span> mingot.virgil@gmail.com</p> -->\\n                            <p><span class=\\\"material-icons\\\">location_on</span> 24000 PERIGUEUX</p>\\n                        </div>\\n                        <div fxLayout='row ' fxLayoutGap='20px '>\\n                            <a href=\\\"https://www.facebook.com/vivi244\\\"><img src=\\\"../../../../assets/images/facebook.png\\\" alt=\\\"logoFacebook\\\" matTooltip='logo realiser par Freepik https://www.freepik.com/ '></a>\\n                            <a href=\\\"https://twitter.com/DjillGlobe\\\"><img src=\\\"../../../../assets/images/twitter.png\\\" alt=\\\"logotwitter\\\" matTooltip='logo realiser par Freepik https://www.freepik.com/ '></a>\\n                            <a href=\\\"https://www.linkedin.com/in/virgil-mingot/\\\"><img src=\\\"../../../../assets/images/logo-linkedin.png\\\" alt=\\\"logoLinkedin\\\" matTooltip='logo realiser par Freepik https://www.freepik.com/ '></a>\\n                            <a href=\\\"https://www.instagram.com/sph3rik/?hl=fr\\\"><img src=\\\"../../../../assets/images/instagram.png\\\" alt=\\\"logoInstagramm\\\" matTooltip='logo realiser par Freepik https://www.freepik.com/ '></a>\\n                        </div>\\n                    </div>\\n                </mat-card-content>\\n            </div>\\n        </mat-card>\\n    </article>\\n    <article class='articlePresentations'>\\n        <mat-card fxLayoutAlign='center center ' fxLayout='column '>\\n            <mat-card-header>\\n                <mat-card-title>Mon profil en quelques mots</mat-card-title>\\n            </mat-card-header>\\n            <mat-card-content fxLayout='column '>\\n                <p><span class='majPara'>D</span>e formation spécialisée en produits forestiers, j’ai évolué dans <strong>différents secteurs d’activités</strong> ce qui ma permis d’acquérir de nombreuses compétences et une <strong>expérience professionnelle diversifiée</strong>. Après  plus\\n                    de 10 ans d’activité dans le domaine du commerce j’ai fait le choix d’une reconversion professionnelle dans le domaine <strong>« digital »</strong> en tant que développeur Web.</p><br>\\n                <p><span class='majPara'>A</span>utodidacte, j'ai appris à maitriser les differents outils d'un développeur. Méme si aujourd'hui je n'en suis qu'au balbutiement, je suis capable de réaliser des sites web plus ou moins complexe .</p>\\n            </mat-card-content>\\n        </mat-card>\\n    </article>\\n    <article>\\n        <mat-card fxLayoutAlign='center center ' fxLayout='column '>\\n            <mat-card-header>\\n                <mat-card-title>Les outils utilisé </mat-card-title>\\n                <mat-card-subtitle></mat-card-subtitle>\\n            </mat-card-header>\\n            <mat-card-content fxLayout='column '>\\n                <div fxLayout='column' fxLayoutAlign='center center'>\\n                    <ul fxLayout='row' class='minus' fxLayoutAlign='center center'>\\n                        <li><i class=\\\"fab fa-html5\\\"></i></li>\\n                        <li><i class=\\\"fab fa-css3-alt\\\"></i></li>\\n                        <li><i class=\\\"fab fa-js\\\"></i></li>\\n                        <li><i class=\\\"fab fa-sass\\\"></i></li>\\n                        <li><i class='fab typescript'>Ts</i></li>\\n                        <li><i class=\\\"fab fa-node-js\\\"></i></li>\\n                        <li><i class=\\\"far fa-compass\\\"></i></li>\\n                        <li><i class=\\\"fas fa-database\\\"></i></li>\\n                        <li><i class=\\\"fab fa-angular\\\"></i></li>\\n                        <li><i class=\\\"fab fa-vuejs\\\"></i></li>\\n                        <li><i class=\\\"fab fa-bootstrap\\\"></i></li>\\n                        <li><i class=\\\"fab fa-angular blue\\\"></i></li>\\n                        <li><i class=\\\"fab fa-font-awesome-alt\\\"></i></li>\\n                        <li><i class=\\\"fab fa-google\\\"></i></li>\\n                    </ul>\\n                </div>\\n            </mat-card-content>\\n        </mat-card>\\n    </article>\\n</section>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhbGVydC1zdXBwci1pbWcuY29tcG9uZW50LnNhc3MifQ== */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjb250YWN0LmNvbXBvbmVudC5zYXNzIn0= */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzZS1jb25uZWN0ZXIuY29tcG9uZW50LnNhc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.sass']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","export default \"<section class='sectionFormation'>\\n    <div class='container' fxLayout='column'>\\n        <div class='titre formationSticky' fxLayout='column' fxLayoutAlign='center center'>\\n            <div class='h3 ' fxLayout='row' fxLayoutAlign='center start'>\\n                <span>F</span>\\n                <h3>ormation</h3>\\n            </div>\\n        </div>\\n        <!-- *ngIf='this.userSession.isAuth' -->\\n        <button mat-raised-button class='btn' routerLink='/formationForm'>Ajouter une formation</button>\\n\\n        <div fxLayout='row wrap' fxLayoutAlign='center start'>\\n            <article *ngFor='let formation of parcourTab; let i = index'>\\n                <mat-card fxLayout='column' fxLayoutAlign='space-between'>\\n                    <div class='btnAlign' fxLayoutAlign='space-evenly center'>\\n                        <button class='btn' *ngIf='this.userSession.isAuth' mat-raised-button (click)='deleteImageLink(formation.image)' (click)=\\\"deleteFormation(formation._id)\\\">Supprimer</button>\\n                        <button class='btn' *ngIf='this.userSession.isAuth' mat-raised-button (click)='editFormation(formation)' [routerLink]=\\\"['/formation',formation._id]\\\">Modifier</button>\\n                    </div>\\n                    <mat-card-header fxLayout='column'>\\n                        <mat-card-title>\\n                            <h4>{{ formation.nomFormation }}</h4>\\n                            <h4>{{ formation.option }}</h4>\\n                        </mat-card-title>\\n                        <mat-card-subtitle fxLayout='row' fxLayoutAlign='space-between center'>\\n                            <div *ngFor='let lieu of formation.ecole'>\\n                                <p>{{ lieu.nomEcole }}</p>\\n                                <p>{{ lieu.departement }} {{lieu.cp}}</p>\\n                                <div class='mtb-10' fxLayout='row' fxLayoutAlign='space-around center'>\\n                                    <p style='font-size: .7rem;' class='mlr-10'>De : {{ lieu.dateEntree | date:'MMMM/y'}}</p>\\n                                    <p style='font-size: .7rem;'>à : {{ lieu.dateSortie | date:'MMMM/y'}}</p>\\n                                </div>\\n                            </div>\\n                        </mat-card-subtitle>\\n                    </mat-card-header>\\n                    <div fxLayout='row nowrap'>\\n                        <div class='imageEcole' *ngFor='let image of formation.ecole' fxFlex>\\n                            <img *ngIf='formation.image' class='imgBg' matCardImage src=\\\"{{ image.image }}\\\" alt='{{image.alt}}'>\\n                            <div class='divImgDefault' *ngIf='!formation.image'></div>\\n                        </div>\\n                    </div>\\n\\n                </mat-card>\\n                <mat-accordion displayMode=\\\"default\\\" [multi]=\\\"true\\\" [hideToggle]=\\\"false\\\">\\n                    <mat-expansion-panel [hideToggle]=\\\"false\\\">\\n                        <mat-expansion-panel-header>Un peu plus</mat-expansion-panel-header>\\n                        <div>\\n                            <h4>Contenu de la formation: </h4>\\n                            <p> {{ formation.contenu}}</p>\\n                            <mat-list dense>\\n                                <h4>Les différents axes:</h4>\\n                                <mat-list-item *ngFor=\\\"let item of formation.liste\\\">\\n                                    {{ item }}\\n                                </mat-list-item>\\n                            </mat-list>\\n                        </div>\\n                        <mat-action-row>\\n                            <a href=\\\"{{ formation.lien }}\\\" target='blank'><button mat-raised-button class='btn'> En savoir plus</button></a>\\n                        </mat-action-row>\\n                    </mat-expansion-panel>\\n                </mat-accordion>\\n            </article>\\n        </div>\\n    </div>\\n</section>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJmb290ZXIuY29tcG9uZW50LnNhc3MifQ== */\";","import { MatDialog } from '@angular/material/dialog';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-alert-suppr-img',\n  templateUrl: './alert-suppr-img.component.html',\n  styleUrls: ['./alert-suppr-img.component.sass']\n})\nexport class AlertSupprImgComponent implements OnInit {\n\n  constructor(\n    public matDialog: MatDialog,\n  ) { }\n\n  ngOnInit(): void {\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJnb29nbGUtcGxhY2VzLmNvbXBvbmVudC5zYXNzIn0= */\";","import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot } from \"@angular/router\";\nimport { UsersService } from \"./services/users.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AuthGuard implements CanActivate{\n\n  constructor(\n    private userService: UsersService\n  ){}\n\n  canActivate(\n    route:ActivatedRouteSnapshot,\n    state:RouterStateSnapshot\n    ): boolean {\n      return this.userService.idSession$.value.isAuth\n    }\n}\n","import { ControlValueAccessor, FormBuilder, FormControl, FormControlName, FormGroup } from '@angular/forms';\nimport { Address } from 'ngx-google-places-autocomplete/objects/address';\nimport { Component, ElementRef, EventEmitter, Input, OnInit, Output, ViewChild } from '@angular/core';\nimport { GooglePlaceDirective } from 'ngx-google-places-autocomplete';\n\n@Component({\n  selector: 'app-google-places',\n  templateUrl: './google-places.component.html',\n  styleUrls: ['./google-places.component.sass']\n})\nexport class GooglePlacesComponent implements OnInit {\n\n  constructor(\n    private fb: FormBuilder\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  essai(){\n  }\n\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJmb3JtYXRpb24tZm9ybS5jb21wb25lbnQuc2FzcyJ9 */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwb3J0Zm9saW8tZm9ybS5jb21wb25lbnQuc2FzcyJ9 */\";","import { Formation } from 'src/shared/modeles/formation.interface';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { Experience } from '../modeles/experience.interface';\n@Injectable({\n  providedIn: 'root'\n})\nexport class ParcourService  {\n\n  formationTab: Formation [] = [];\n  formationTab$: BehaviorSubject<Formation[]> = new BehaviorSubject([]);\n  formation: Formation;\n\n  experienceTab: Experience [] = [];\n  experienceTab$: BehaviorSubject<Experience[]> = new BehaviorSubject([]);\n  experience: Experience;\n\n  constructor(\n    private http: HttpClient,\n  ) { }\n\n  emettreLesFormationsRecuperer(){\n    this.formationTab$.next(this.formationTab);\n  }\n\n  createNewFormation(newFormation: Formation){\n    this.formationTab.push(newFormation);\n    this.saveFormations(newFormation);\n    this.emettreLesFormationsRecuperer();\n  }\n\n  emettreLesExperienceRecuperer(){\n    this.experienceTab$.next(this.experienceTab);\n  }\n\n  createNewExperience(newExperience: Experience){\n    this.experienceTab.push(newExperience);\n    this.saveExperiences(newExperience);\n    this.emettreLesFormationsRecuperer();\n  }\n\n\n  // Queries\n    // Formations\n  saveFormations(formation: Formation){\n    this.http.post<Formation>('/api/formations',formation).subscribe(()=>{\n    });\n  }\n\n  updateFormation(formation:Formation, id: String){\n    this.http.post<Formation>('/api/formations/update/'+ id, formation).subscribe(()=> {});\n  }\n\n  recupFormations(){\n    this.http.get<Formation[]>('/api/formations')\n      .subscribe((formations: Formation[])=> {\n      this.formationTab = formations;\n      this.emettreLesFormationsRecuperer();\n    });\n  }\n\n  supprimerUneFormation(id: String){\n    this.http.delete('api/formations/' + id ).subscribe(()=> {\n      ((formation: Formation[] ) => {\n        this.formationTab = formation;\n      })\n    })\n    this.recupFormations();\n    this.emettreLesFormationsRecuperer();\n  }\n  // Experiences\n  saveExperiences(experience: Experience){\n    this.http.post<Experience>('/api/experience', experience).subscribe(()=>{});\n  }\n\n  updateExperience(experience: Experience, id: String){\n    this.http.post<Experience>('/api/experience/update/'+ id, experience).subscribe(()=> {});\n  }\n\n  recupExperience(){\n    this.http.get<Experience[]>('/api/experience')\n    .subscribe((experiences: Experience[])=> {\n      this.experienceTab = experiences;\n      this.emettreLesExperienceRecuperer();\n    });\n  }\n\n  supprimerUneExperience(id: String){\n    this.http.delete('/api/experience/' + id ).subscribe\n      ((experiences: Experience[]) => {\n        this.experienceTab = experiences;\n      });\n    this.recupExperience();\n  }\n\n}\n","import { AlertSupprImgComponent } from 'src/app/components/alert/alert-suppr-img/alert-suppr-img.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { UploadFileService } from 'src/shared/services/upload-file.service';\nimport { PortfolioService } from './../../../../../shared/services/portfolio.service';\nimport { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router, ParamMap } from '@angular/router';\nimport { Portfolio } from 'src/shared/modeles/portfolio.interface';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-portfolio-form',\n  templateUrl: './portfolio-form.component.html',\n  styleUrls: ['./portfolio-form.component.sass']\n})\nexport class PortfolioFormComponent implements OnInit {\n\n  public filesHolder$: Observable<{\n    file:File,\n    progress$:Observable<number>\n  }[]> = this.upLoadFileService.filesHolder$.asObservable();\n\n  public id : string;\n  public portfolioForm: FormGroup;\n  public site: Portfolio;\n\n  public imageVal: string;\n  private imageLocal: string = 'imageRecup';\n\n  public index: number;\n  public noFile: boolean = true;\n  public imageInstanceAModifier: boolean = true;\n  public setValueANull: string;\n\n  @ViewChild('fileInput') inputRef: ElementRef;\n\n\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private portfolioService: PortfolioService,\n    private activatedRoute: ActivatedRoute,\n    private upLoadFileService: UploadFileService,\n    public matDialog: MatDialog\n  ) { }\n\n  ngOnInit(): void {\n    this.activatedRoute.paramMap.subscribe((paramMap: ParamMap) => {\n      this.id = paramMap.get('id');\n      const siteRecup = this.portfolioService.portfolio;\n      if(this.id){\n        this.initForm(siteRecup);\n        if( siteRecup.image === this.upLoadFileService.imgDefault){\n          localStorage.setItem(this.imageLocal , siteRecup.image);\n          this.imageVal = localStorage.getItem(this.imageLocal);\n          this.imageInstanceAModifier = false;\n          this.portfolioForm.controls.image.setValue(null);\n        }else if (siteRecup.image !== null ){\n          // this.portfolioForm.controls.image.setValue(siteRecup.image);\n          this.imageVal = siteRecup.image;\n          localStorage.setItem(this.imageLocal, siteRecup.image);\n          this.imageInstanceAModifier = true;\n          this.noFile = false;\n          this.portfolioForm.controls.image.setValue(this.imageVal);\n        }\n      }\n      else{\n        this.initForm(this.site);\n      }\n    })\n  }\n\n    initForm(site:Portfolio = {\n      name: null,\n      lienSite: null,\n      description: null,\n      lienGit: null,\n      image: '',\n      alt: null\n    }): void {\n      this.portfolioForm = this.fb.group({\n        name:[site.name, Validators.required ],\n        lienSite:[site.lienSite ],\n        description:[site.description, Validators.required],\n        lienGit:[site.lienGit],\n        image:[''],\n        alt:[site.alt]\n      })\n    }\n\n    onSavePortfolio(){\n      this.portfolioForm.controls.image.setValue(this.imageVal);\n      this.portfolioService.createPortfolio(this.portfolioForm.value);\n\n      const files = this.upLoadFileService.filesHolder$.value.slice();\n      files.splice(this.index, 1);\n      this.upLoadFileService.filesHolder$.next(files);\n      localStorage.clear();\n      this.router.navigate(['portfolio']);\n    }\n\n    onModifyPorfolio(){\n      this.portfolioForm.controls.image.setValue(this.imageVal);\n      this.portfolioService.updateSiteOfPortfolio(this.portfolioForm.value, this.id);\n\n      const files = this.upLoadFileService.filesHolder$.value.slice();\n      files.splice(this.index, 1);\n      this.upLoadFileService.filesHolder$.next(files);\n      this.router.navigate(['portfolio']);\n      this.noFile = false;\n    }\n\n    retour(){\n      if(this.upLoadFileService.imgDefault !== this.imageVal && this.imageLocal === undefined){\n          this.deleteFile(0);\n          this.imageVal === localStorage.getItem(this.imageLocal);\n          localStorage.clear();\n      }\n      this.router.navigate(['portfolio']);\n    }\n\n    /* FILE*/\n  openFile() {\n    this.inputRef.nativeElement.click();\n  }\n\n  addFile($event){\n    this.imageVal = $event.target.files[0].name;\n    const file = $event.target.files;\n    this.upLoadFileService.addFile(file);\n    this.noFile = false;\n  }\n\n  deleteFile(index:number){\n    this.upLoadFileService.removeFile(index);\n    this.noFile = true;\n  }\n\n  supprImgLinkmodif(image: string){\n    const dialogRef = this.matDialog.open(AlertSupprImgComponent\n     );\n\n    dialogRef.afterClosed().subscribe(result =>{\n       console.log(result);\n      if(result === true){\n        this.upLoadFileService.removeFileOfCard(image.split('/')[3]);\n        this.imageVal = this.upLoadFileService.imgDefault;\n        this.portfolioForm.controls.image.setValue(this.upLoadFileService.imgDefault);\n        this.portfolioService.updateSiteOfPortfolio(this.portfolioForm.value, this.id);\n        this.noFile = true;\n        this.imageInstanceAModifier = false;\n      }\n     });\n  }\n\n  dropFile($event){\n    if($event.dataTransfer){\n      const file = $event.dataTransfer.files;\n      this.upLoadFileService.addFile(file)\n    }\n  }\n}\n","export default \"<div class='popUpAlert container'>\\n    <div class='content' fxLayout='column'>\\n        <h2>Attention</h2>\\n        <mat-dialog-content>\\n            <h3>En cliquant sur \\\"Ok j'ai compris\\\",</h3>\\n            <p>La photos seras supprimer,et celle ci seras remplacer par l'images par defaut si aucune autre photos n'est recharger. </p>\\n            <p>Toutes suppression d'une référence à la photo est <span> définitives</span> ! Même en cas de click sur le bouton retour sans modification.</p>\\n        </mat-dialog-content>\\n        <mat-dialog-actions>\\n            <div fxLayout='row' fxLayoutAlign='center center'>\\n                <button mat-raised-button mat-dialog-close class='mlr-10'>Annuler</button>\\n                <button mat-raised-button [mat-dialog-close]='true' class='mlr-10'>Ok j'ai compris et supprimer</button>\\n            </div>\\n        </mat-dialog-actions>\\n    </div>\\n</div>\";","import { UploadFileService } from 'src/shared/services/upload-file.service';\nimport { Experience } from './../../../../../../shared/modeles/experience.interface';\nimport { ParcourService } from 'src/shared/services/parcour.service';\nimport { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-experience-form',\n  templateUrl: './experience-form.component.html',\n  styleUrls: ['./experience-form.component.sass']\n})\nexport class ExperienceFormComponent implements OnInit {\n\n  public filesHolder$: Observable<{\n    file: File,\n    progress$: Observable<number>;\n  }[]> = this.uploadService.filesHolder$.asObservable()\n\n  public id: string;\n  public experienceForm: FormGroup;\n  public experience: Experience;\n\n  public imageVal: string;\n  private imageLocal: string = 'imageRecup';\n\n  public index: number;\n  public noFile: boolean = true; // Vrai si il n'y as pas de fichier\n  public imageInstanceAModifier: boolean = true; // Vrai si image a modifier\n  public setValueANull: string;\n\n  public typeContrat: string[];\n\n  @ViewChild('fileInput') inputRef: ElementRef;\n\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private parcourService: ParcourService,\n    private ActivatedRoute: ActivatedRoute,\n    private uploadService: UploadFileService\n  ) {\n    this.typeContrat = [\n      'CDD',\n      'CDI',\n      'Contrat d\\'apprentissage',\n      'Contrat de Professionnalissation',\n      'Contrat Unique d\\'insertion'\n    ];\n  }\n\n  ngOnInit(): void {\n    this.ActivatedRoute.paramMap.subscribe((paramMap: ParamMap) => {\n      this.id = paramMap.get('_id');\n      const xpRecup = this.parcourService.experience;\n      if(this.id){\n        this.initFormExperience(xpRecup);\n        if( xpRecup.image ===  this.uploadService.imgDefault ) {\n          localStorage.setItem(this.imageLocal , xpRecup.image);\n\n          // this.imageVal = this.imageLocal;\n          this.imageVal = localStorage.getItem(this.imageLocal);\n          this.imageInstanceAModifier = false;\n          this.experienceForm.controls.image.setValue(null);\n        }else if(xpRecup.image !== null){\n          console.log('il y as bien une image ici' + xpRecup.image);\n          this.experienceForm.controls.image.setValue(xpRecup.image);\n          this.imageVal = xpRecup.image;\n          localStorage.setItem(this.imageLocal , xpRecup.image);\n          this.imageInstanceAModifier = true;\n          this.noFile = false;\n          this.experienceForm.controls.image.setValue(this.imageVal);\n        }\n      }\n      else{\n        this.initFormExperience(this.experience);\n      }\n    })\n  }\n\n  initFormExperience(\n    experience: Experience = {\n      dateEntree: new Date,\n      dateSortie: new Date,\n      image: null,\n      alt: null,\n      typeContrat: null,\n      enseigne: null,\n      lien: null,\n      lieu: null,\n      fonction: null\n    }\n  ): void {\n    this.experienceForm = this.fb.group({\n      dateEntree: [experience.dateEntree, Validators.required],\n      dateSortie: [experience.dateSortie, Validators.required],\n      image: [experience.image],\n      alt: [experience.alt, Validators.required],\n      typeContrat: [experience.typeContrat, Validators.required],\n      enseigne: [experience.enseigne, Validators.required],\n      lien: [experience.lien, Validators.required],\n      lieu: [experience.lieu, Validators.required],\n      fonction: [experience.fonction, Validators.required]\n    })\n  }\n\n  onSaveExperience(){\n    this.experienceForm.controls.image.setValue(this.imageVal);\n    this.parcourService.createNewExperience(this.experienceForm.value);\n\n    const files = this.uploadService.filesHolder$.value.slice();\n    files.splice(this.index,1);\n    this.uploadService.filesHolder$.next(files);\n    this.router.navigate(['parcour']);\n  }\n\n  onModifyExperience(){\n    this.experienceForm.controls.image.setValue(this.imageVal);\n    this.parcourService.updateExperience(this.experienceForm.value, this.id);\n\n    const files = this.uploadService.filesHolder$.value.slice();\n    files.splice(this.index,1);\n    this.uploadService.filesHolder$.next(files);\n    this.router.navigate(['parcour']);\n    this.noFile = false;\n  }\n\n  retour(imageval:string){\n    // Si l'image du depart et la meme que lorque l'on apui sur le bouton retour\n    if(localStorage.getItem(this.imageLocal) !== this.imageVal && this.imageLocal === undefined) {\n    console.log('les images sont differentes');\n    this.deleteFile(0);\n    this.imageVal === localStorage.getItem(this.imageLocal);\n    localStorage.clear();\n  }\n  this.router.navigate(['parcour']);\n  }\n\n  openFile(){\n    this.inputRef.nativeElement.click();\n  }\n\n  addFile($event){\n      this.imageVal = $event.target.files[0].name;\n      let file = $event.target.files;\n      this.uploadService.addFile(file);\n      this.noFile = false;\n  }\n\n  deleteFile(index:number){\n    this.uploadService.removeFile(index);\n    this.imageVal = this.uploadService.imgDefault;\n    this.noFile = true;\n  }\n  supprImgLinkmodif(image: string){     // Si l'utilisateur supprime une image pour en mettre une autre\n    this.uploadService.removeFileOfCard(image.split('/')[3]);\n    this.parcourService.updateExperience(this.experienceForm.value, this.id);\n    this.imageVal =  this.uploadService.imgDefault;\n    this.experienceForm.controls.image.setValue(\"null\");\n    this.noFile = true;\n    this.imageInstanceAModifier = false;\n  }\n}\n","import { FormArray, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\n\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\nimport { Formation } from 'src/shared/modeles/formation.interface';\nimport { ParcourService } from 'src/shared/services/parcour.service';\n\nimport { ViewChild, ElementRef } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { UploadFileService } from 'src/shared/services/upload-file.service';\nimport { FonctionGeneralService } from 'src/shared/services/fonction-general.service';\nimport { GooglePlacesComponent } from 'src/app/components/googleApi/google-places/google-places.component';\nimport { nullSafeIsEquivalent } from '@angular/compiler/src/output/output_ast';\n\n@Component({\n  selector: 'app-formation-form',\n  templateUrl: './formation-form.component.html',\n  styleUrls: ['./formation-form.component.sass']\n})\nexport class FormationFormComponent implements OnInit{\n\n  /*VARIABLE*/\n  public id: string;\n  public formation: Formation;\n  public formationForm: FormGroup;\n\n  public imageVal: string;\n  private imageLocal: string = 'imageRecup';\n  public imageDefault: string = this.upLoadFileService.imgDefault;\n\n  public index: number;\n  public noFile: boolean = true;\n  public imageInstanceAModifier: boolean = true;\n  public setValueANull: string;\n\n  public nomFormation: any;\n  public option: any;\n  public image: any;\n  public alt: any;\n  public lieu: any;\n  public adresse: any;\n  public dateEntree: any;\n  public dateSortie: any;\n  public contenu: any;\n  public lien: any;\n\n  public maxDate: Date = new Date(Date.now());\n\n  public localImage: string = localStorage.getItem(this.imageLocal);\n\n  @ViewChild('fileInput') inputRef: ElementRef;\n  @ViewChild('googlePlacesComponent') googlePlace: ElementRef<GooglePlacesComponent>;\n\n  public filesHolder$: Observable<{\n    file: File,\n    progress$: Observable<number>\n  }[]> = this.upLoadFileService.filesHolder$.asObservable();\n\n  constructor(\n    private fb:FormBuilder,\n    private router: Router,\n    private parcourService: ParcourService,\n    private activatedRoute: ActivatedRoute,\n    public upLoadFileService: UploadFileService,\n    public fGservice: FonctionGeneralService\n  ) {}\n\n    get liste(){\n      return this.formationForm.get('liste') as FormArray;\n    }\n\n    get ecoles(){\n      return this.formationForm.get('ecoles') as FormArray;\n    }\n\n  ngOnInit(): void {\n        this.activatedRoute.paramMap.subscribe((paramMap: ParamMap) => {\n          this.id = paramMap.get('_id');\n          const formationRecup = this.parcourService.formation;\n          if(this.id){\n            this.initForm(formationRecup);\n            // if( formationRecup.image === this.upLoadFileService.imgDefault) {\n            //   localStorage.setItem(this.imageLocal, formationRecup.image);\n            //   this.imageVal = localStorage.getItem(this.imageLocal);\n            //   this.imageInstanceAModifier = false;\n            //   this.formationForm.controls.image.setValue(null);\n            // } else if ( formationRecup.image !== null){\n            //   this.formationForm.controls.image.setValue(formationRecup.image);\n            //   this.imageVal = formationRecup.image;\n            //   localStorage.setItem(this.imageLocal , formationRecup.image);\n            //   this.imageInstanceAModifier = true;\n            //   this.noFile = false;\n            //   this.formationForm.controls.image.setValue(this.imageVal);\n            // }\n          }else {\n            this.initForm(this.formation);\n          }\n        });\n        // this.nomFormation = this.formationForm.get('nomFormation');\n        // this.option = this.formationForm.get('option');\n        // this.image = this.formationForm.get('image');\n        // this.alt = this.formationForm.get('alt');\n        // this.lieu = this.formationForm.get('lieu');\n        // this.adresse = this.formationForm.get('adresse');\n        // this.dateEntree = this.formationForm.get('dateEntree');\n        // this.dateSortie = this.formationForm.get('dateSortie');\n        // this.contenu = this.formationForm.get('contenu');\n        // this.lien = this.formationForm.get('lien');\n\n      }\n\n  /*FONCTIONS*/\n  initForm(\n    formation: Formation = {\n    diplome: null,\n    nomFormation:null,\n    option:null,\n    // image: null,\n    // alt: \"image par defaut\",\n    ecoles: [],\n    // adresse: null,\n    // dateEntree: null,\n    // dateSortie: null,\n    contenu: null,\n    liste: [],\n    // lien: null\n  }\n\n  ): void {\n    this.formationForm = this.fb.group({\n      diplome: [formation.diplome],\n      nomFormation: [formation.nomFormation, [Validators.required, Validators.minLength(3)]],\n      option: [formation.option, Validators.minLength(3)],\n      // image: [formation.image],\n      // alt: [formation.alt, [Validators.minLength(3), Validators.required]],\n      ecoles: this.fb.array([]),\n      // adresse: [formation.adresse, Validators.minLength(3)],\n      // dateEntree: [formation.dateEntree, Validators.required],\n      // dateSortie: [formation.dateSortie, Validators.required],\n      contenu: [formation.contenu, Validators.required],\n      liste: this.fb.array(formation.liste),\n      // lien: [formation.lien]\n    });\n  }\n\n  addAxeListe(){\n    this.liste.push(new FormControl(''));\n  }\n  deleteAxe(i){\n    this.liste.removeAt(i)\n  }\n\n  addListeEcole(){\n    this.ecoles.push(this.fb.group({\n      nomEcole: [null],\n      image: [null],\n      alt: [null],\n      departement: [null],\n      cp: [null],\n      dateEntree: [new Date()],\n      dateSortie: [new Date()],\n      lien: [null],\n    }));\n  }\n\n  deleteEcole(i){\n    this.ecoles.removeAt(i);\n  }\n\n  // ACTION SUR LE SERVICE\n  onSaveFormation(){\n  this.formationForm.controls.image.setValue(this.imageVal);\n  this.parcourService.createNewFormation(this.formationForm.value);\n\n  const files = this.upLoadFileService.filesHolder$.value.slice();\n  files.splice(this.index, 1);\n  this.upLoadFileService.filesHolder$.next(files);\n  localStorage.clear();\n  this.router.navigate(['parcour']);\n  }\n\n  onModify(){\n    this.formationForm.controls.image.setValue(this.imageVal);\n    this.parcourService.updateFormation(this.formationForm.value, this.id);\n\n    const files = this.upLoadFileService.filesHolder$.value.slice();\n    files.splice(this.index, 1);\n    this.upLoadFileService.filesHolder$.next(files);\n    localStorage.clear();\n    this.router.navigate(['parcour']);\n    this.noFile = false;\n  }\n\n  retour(){\n   if(localStorage.getItem(this.imageLocal)!== this.imageLocal && this.imageLocal === undefined){\n     this.deleteFile(0);\n     this.imageVal === localStorage.getItem(this.imageLocal);\n     localStorage.clear();\n   }\n    this.router.navigate(['parcour']);\n  }\n/* FILE*/\n  openFile() {\n    this.inputRef.nativeElement.click();\n  }\n\n  addFile($event){\n    this.imageVal = $event.target.files[0].name;\n    let file = $event.target.files;\n    this.upLoadFileService.addFile(file);\n    this.noFile = false;\n    this.formationForm.controls.alt.setValue(null);\n  }\n\n  deleteFile(index:number){\n    this.upLoadFileService.removeFile(index);\n    this.imageVal = this.upLoadFileService.imgDefault;\n    this.formationForm.controls.alt.setValue('image par default');\n    this.noFile = true;\n  }\n\n  supprImgLinkmodif(image: string){     // Si l'utilisateur supprime une image pour en mettre une autre\n  this.upLoadFileService.removeFileOfCard(image.split('/')[3]);\n  this.parcourService.updateExperience(this.formationForm.value, this.id);\n  this.imageVal = this.upLoadFileService.imgDefault;\n  this.formationForm.controls.image.setValue('null');\n  this.noFile = true;\n  this.imageInstanceAModifier =  false;\n}\n\n  dropFile($event){\n    if($event.dataTransfer){\n      const file = $event.dataTransfer.files;\n      this.upLoadFileService.addFile(file)\n    }\n  }\n  maxiDate($event){\n    console.log($event);\n    this.dateEntree.value = $event;\n  }\n\n  getErrorMessage(nom: any){\n    if(nom.hasError('required') || nom.value === \"\" ){\n      return this.fGservice.messageErreur.required;\n    }else if( nom.hasError('minlength')){\n      return this.fGservice.messageErreur.minLenght(3);\n    }\n  }\n}\n\n\n\n\n","export default \"<header class='plr-10'>\\n    <div class='logoTitreMenuContainer' fxLayout='row' fxLayoutAlign='space-between center' fxLayoutGap='15px'>\\n        <div class='logoTitre' fxLayout='row' fxLayoutAlign='none center'>\\n            <img src=\\\"./../../../assets/images/logo_sph3rik.png\\\" alt=\\\"logo\\\">\\n            <h1 routerLink='acceuil'>Sph3rik</h1>\\n        </div>\\n        <div class='menu' fxLayout='row' fxLayoutAlign='end center'>\\n            <button mat-raised-button *ngIf='!this.userSession.isAuth' [matMenuTriggerFor]=\\\"menuRef\\\">Se Connecter</button>\\n            <mat-menu #menuRef=\\\"matMenu\\\">\\n                <button mat-menu-item *ngFor='let menu of menuConnect' [routerLink]='menu.lien'>{{ menu.titre }}</button>\\n            </mat-menu>\\n            <button mat-raised-button *ngIf='this.userSession.isAuth' routerLink='acceuil' (click)='loggout()'>Se Deconnecter</button>\\n        </div>\\n    </div>\\n</header>\\n<div id='navi' class='menuNav' fxLayout='row' fxLayoutAlign='center center'>\\n    <nav mat-tab-nav-bar>\\n        <a mat-tab-link *ngFor=\\\"let link of listeMenu\\\" [routerLink]='link.lien' (click)=\\\"activeLink = link.lien\\\" [active]='activeLink == link.lien'> {{ link.lien }}</a>\\n    </nav>\\n</div>\";","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";","import { NgModule } from '@angular/core';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatListModule } from '@angular/material/list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatSidenavModule } from '@angular/material/sidenav';\n\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatDialogModule } from '@angular/material/dialog';\n\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { NgxMatFileInputModule } from '@angular-material-components/file-input';\n\n\nconst MATERIAL = [\n  MatAutocompleteModule,\n  MatBadgeModule,\n  MatBottomSheetModule,\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatCardModule,\n  MatListModule,\n  MatIconModule,\n  MatTabsModule,\n  MatSidenavModule,\n  MatFormFieldModule,\n  MatMenuModule,\n  MatInputModule,\n  MatExpansionModule,\n  MatSelectModule,\n  MatCheckboxModule,\n  MatDatepickerModule,\n  MatNativeDateModule,\n  MatProgressBarModule,\n  MatTooltipModule,\n  MatDividerModule,\n  MatDialogModule,\n  NgxMatFileInputModule\n];\n\n@NgModule({\n  declarations: [],\n  imports: [MATERIAL],\n  exports: [MATERIAL]\n})\nexport class MaterialModule { }\n"],"sourceRoot":"webpack:///"}